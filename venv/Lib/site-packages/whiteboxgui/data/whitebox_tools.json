{
    "AddPointCoordinatesToTable": {
        "name": "AddPointCoordinatesToTable",
        "Name": "Addpointcoordinatestotable",
        "category": "Data Tools",
        "label": "Add Point Coordinates To Table",
        "description": "Modifies the attribute table of a point vector by adding fields containing each point's X and Y coordinates.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/add_point_coordinates_to_table.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#AddPointCoordinatesToTable",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector Points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "CleanVector": {
        "name": "CleanVector",
        "Name": "Cleanvector",
        "category": "Data Tools",
        "label": "Clean Vector",
        "description": "Removes null features and lines/polygons with fewer than the required number of vertices.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/clean_vector.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#CleanVector",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ConvertNodataToZero": {
        "name": "ConvertNodataToZero",
        "Name": "Convertnodatatozero",
        "category": "Data Tools",
        "label": "Convert Nodata To Zero",
        "description": "Converts nodata values in a raster to zero.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/convert_nodata_to_zero.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#ConvertNodataToZero",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ConvertRasterFormat": {
        "name": "ConvertRasterFormat",
        "Name": "Convertrasterformat",
        "category": "Data Tools",
        "label": "Convert Raster Format",
        "description": "Converts raster data from one format to another.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/convert_raster_format.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#ConvertRasterFormat",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "CsvPointsToVector": {
        "name": "CsvPointsToVector",
        "Name": "Csvpointstovector",
        "category": "Data Tools",
        "label": "Csv Points To Vector",
        "description": "Converts a CSV text file to vector points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/csv_points_to_vector.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#CsvPointsToVector",
        "parameters": {
            "i": {
                "name": "Input CSV File",
                "flags": "i",
                "description": "Input CSV file (i.e. source of data to be imported).",
                "parameter_type": {
                    "ExistingFile": "Csv"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "xfield": {
                "name": "X Field Number (zero-based)",
                "flags": "xfield",
                "description": "X field number (e.g. 0 for first field).",
                "parameter_type": "Integer",
                "default_value": "\"0\"",
                "optional": "true"
            },
            "yfield": {
                "name": "Y Field Number (zero-based)",
                "flags": "yfield",
                "description": "Y field number (e.g. 1 for second field).",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            },
            "epsg": {
                "name": "EPSG Projection",
                "flags": "epsg",
                "description": "EPSG projection (e.g. 2958).",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "ExportTableToCsv": {
        "name": "ExportTableToCsv",
        "Name": "Exporttabletocsv",
        "category": "Data Tools",
        "label": "Export Table To Csv",
        "description": "Exports an attribute table to a CSV text file.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/export_table_to_csv.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#ExportTableToCsv",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Csv"
                },
                "default_value": "null",
                "optional": "false"
            },
            "headers": {
                "name": "Export field names as file header?",
                "flags": "headers",
                "description": "Export field names as file header?",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            }
        }
    },
    "JoinTables": {
        "name": "JoinTables",
        "Name": "Jointables",
        "category": "Data Tools",
        "label": "Join Tables",
        "description": "Merge a vector's attribute table with another table based on a common field.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/join_tables.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#JoinTables",
        "parameters": {
            "input1": {
                "name": "Input Primary Vector File",
                "flags": "input1",
                "description": "Input primary vector file (i.e. the table to be modified).",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "pkey": {
                "name": "Primary Key Field",
                "flags": "pkey",
                "description": "Primary key field.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Any",
                        "--input1"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input Foreign Vector File",
                "flags": "input2",
                "description": "Input foreign vector file (i.e. source of data to be imported).",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "fkey": {
                "name": "Foreign Key Field",
                "flags": "fkey",
                "description": "Foreign key field.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Any",
                        "--input2"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "import_field": {
                "name": "Imported Field",
                "flags": "import_field",
                "description": "Imported field (all fields will be imported if not specified).",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Any",
                        "--input2"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "LinesToPolygons": {
        "name": "LinesToPolygons",
        "Name": "Linestopolygons",
        "category": "Data Tools",
        "label": "Lines To Polygons",
        "description": "Converts vector polylines to polygons.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/lines_to_polygons.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#LinesToPolygons",
        "parameters": {
            "i": {
                "name": "Input Line File",
                "flags": "i",
                "description": "Input vector line file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "MergeTableWithCsv": {
        "name": "MergeTableWithCsv",
        "Name": "Mergetablewithcsv",
        "category": "Data Tools",
        "label": "Merge Table With Csv",
        "description": "Merge a vector's attribute table with a table contained within a CSV text file.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/merge_table_with_csv.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#MergeTableWithCsv",
        "parameters": {
            "i": {
                "name": "Input Primary Vector File",
                "flags": "i",
                "description": "Input primary vector file (i.e. the table to be modified).",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "pkey": {
                "name": "Primary Key Field",
                "flags": "pkey",
                "description": "Primary key field.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Any",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "csv": {
                "name": "Input CSV File",
                "flags": "csv",
                "description": "Input CSV file (i.e. source of data to be imported).",
                "parameter_type": {
                    "ExistingFile": "Csv"
                },
                "default_value": "null",
                "optional": "false"
            },
            "fkey": {
                "name": "Foreign Key Field",
                "flags": "fkey",
                "description": "Foreign key field.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Any",
                        "--csv"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "import_field": {
                "name": "Imported Field",
                "flags": "import_field",
                "description": "Imported field (all fields will be imported if not specified).",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Any",
                        "--csv"
                    ]
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "MergeVectors": {
        "name": "MergeVectors",
        "Name": "Mergevectors",
        "category": "Data Tools",
        "label": "Merge Vectors",
        "description": "Combines two or more input vectors of the same ShapeType creating a single, new output vector.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/merge_vectors.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#MergeVectors",
        "parameters": {
            "inputs": {
                "name": "Input Vector Files",
                "flags": "inputs",
                "description": "Input vector files.",
                "parameter_type": {
                    "FileList": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ModifyNoDataValue": {
        "name": "ModifyNoDataValue",
        "Name": "Modifynodatavalue",
        "category": "Data Tools",
        "label": "Modify No Data Value",
        "description": "Converts nodata values in a raster to zero.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/modify_nodata_value.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#ModifyNoDataValue",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "new_value": {
                "name": "New NoData Value",
                "flags": "new_value",
                "description": "New NoData value.",
                "parameter_type": "Float",
                "default_value": "\"-32768.0\"",
                "optional": "true"
            }
        }
    },
    "MultiPartToSinglePart": {
        "name": "MultiPartToSinglePart",
        "Name": "Multiparttosinglepart",
        "category": "Data Tools",
        "label": "Multi Part To Single Part",
        "description": "Converts a vector file containing multi-part features into a vector containing only single-part features.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/multipart_to_singlepart.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#MultiPartToSinglePart",
        "parameters": {
            "i": {
                "name": "Input Line or Polygon File",
                "flags": "i",
                "description": "Input vector line or polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Line or Polygon File",
                "flags": "output",
                "description": "Output vector line or polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "exclude_holes": {
                "name": "Exclude hole parts?",
                "flags": "exclude_holes",
                "description": "Exclude hole parts from the feature splitting? (holes will continue to belong to their features in output.)",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            }
        }
    },
    "NewRasterFromBase": {
        "name": "NewRasterFromBase",
        "Name": "Newrasterfrombase",
        "category": "Data Tools",
        "label": "New Raster From Base",
        "description": "Creates a new raster using a base image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/new_raster.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#NewRasterFromBase",
        "parameters": {
            "base": {
                "name": "Input Base File",
                "flags": "base",
                "description": "Input base raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "value": {
                "name": "Constant Value",
                "flags": "value",
                "description": "Constant value to fill raster with; either 'nodata' or numeric value.",
                "parameter_type": "StringOrNumber",
                "default_value": "\"nodata\"",
                "optional": "true"
            },
            "data_type": {
                "name": "Data Type",
                "flags": "data_type",
                "description": "Output raster data type; options include 'double' (64-bit), 'float' (32-bit), and 'integer' (signed 16-bit) (default is 'float').",
                "parameter_type": {
                    "OptionList": [
                        "double",
                        "float",
                        "integer"
                    ]
                },
                "default_value": "\"float\"",
                "optional": "true"
            }
        }
    },
    "PolygonsToLines": {
        "name": "PolygonsToLines",
        "Name": "Polygonstolines",
        "category": "Data Tools",
        "label": "Polygons To Lines",
        "description": "Converts vector polygons to polylines.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/polygons_to_lines.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#PolygonsToLines",
        "parameters": {
            "i": {
                "name": "Input Polygon File",
                "flags": "i",
                "description": "Input vector polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Line File",
                "flags": "output",
                "description": "Output vector lines file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "PrintGeoTiffTags": {
        "name": "PrintGeoTiffTags",
        "Name": "Printgeotifftags",
        "category": "Data Tools",
        "label": "Print Geo Tiff Tags",
        "description": "Prints the tags within a GeoTIFF.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/print_geotiff_tags.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#PrintGeoTiffTags",
        "parameters": {
            "i": {
                "name": "Input GeoTIFF Raster File",
                "flags": "i",
                "description": "Input GeoTIFF file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "RasterToVectorLines": {
        "name": "RasterToVectorLines",
        "Name": "Rastertovectorlines",
        "category": "Data Tools",
        "label": "Raster To Vector Lines",
        "description": "Converts a raster lines features into a vector of the POLYLINE shapetype.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/raster_to_vector_lines.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#RasterToVectorLines",
        "parameters": {
            "i": {
                "name": "Input Raster Lines File",
                "flags": "i",
                "description": "Input raster lines file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "RasterToVectorPoints": {
        "name": "RasterToVectorPoints",
        "Name": "Rastertovectorpoints",
        "category": "Data Tools",
        "label": "Raster To Vector Points",
        "description": "Converts a raster dataset to a vector of the POINT shapetype.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/raster_to_vector_points.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#RasterToVectorPoints",
        "parameters": {
            "i": {
                "name": "Input Raster File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Points File",
                "flags": "output",
                "description": "Output vector points file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "RasterToVectorPolygons": {
        "name": "RasterToVectorPolygons",
        "Name": "Rastertovectorpolygons",
        "category": "Data Tools",
        "label": "Raster To Vector Polygons",
        "description": "Converts a raster dataset to a vector of the POLYGON shapetype.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/raster_to_vector_polygons.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#RasterToVectorPolygons",
        "parameters": {
            "i": {
                "name": "Input Raster File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygons File",
                "flags": "output",
                "description": "Output vector polygons file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ReinitializeAttributeTable": {
        "name": "ReinitializeAttributeTable",
        "Name": "Reinitializeattributetable",
        "category": "Data Tools",
        "label": "Reinitialize Attribute Table",
        "description": "Reinitializes a vector's attribute table deleting all fields but the feature ID (FID).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/reinitialize_attribute_table.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#ReinitializeAttributeTable",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "RemovePolygonHoles": {
        "name": "RemovePolygonHoles",
        "Name": "Removepolygonholes",
        "category": "Data Tools",
        "label": "Remove Polygon Holes",
        "description": "Removes holes within the features of a vector polygon file.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/remove_polygon_holes.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#RemovePolygonHoles",
        "parameters": {
            "i": {
                "name": "Input Vector Polygon File",
                "flags": "i",
                "description": "Input vector polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "SetNodataValue": {
        "name": "SetNodataValue",
        "Name": "Setnodatavalue",
        "category": "Data Tools",
        "label": "Set Nodata Value",
        "description": "Assign a specified value in an input image to the NoData value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/set_nodata_value.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#SetNodataValue",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "back_value": {
                "name": "Background Value",
                "flags": "back_value",
                "description": "Background value to set to nodata.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "SinglePartToMultiPart": {
        "name": "SinglePartToMultiPart",
        "Name": "Singleparttomultipart",
        "category": "Data Tools",
        "label": "Single Part To Multi Part",
        "description": "Converts a vector file containing multi-part features into a vector containing only single-part features.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/singlepart_to_multipart.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#SinglePartToMultiPart",
        "parameters": {
            "i": {
                "name": "Input Line or Polygon File",
                "flags": "i",
                "description": "Input vector line or polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Grouping ID Field Name",
                "flags": "field",
                "description": "Grouping ID field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output Line or Polygon File",
                "flags": "output",
                "description": "Output vector line or polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "VectorLinesToRaster": {
        "name": "VectorLinesToRaster",
        "Name": "Vectorlinestoraster",
        "category": "Data Tools",
        "label": "Vector Lines To Raster",
        "description": "Converts a vector containing polylines into a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/vector_lines_to_raster.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#VectorLinesToRaster",
        "parameters": {
            "i": {
                "name": "Input Vector Lines File",
                "flags": "i",
                "description": "Input vector lines file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "\"FID\"",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "nodata": {
                "name": "Background value is NoData?",
                "flags": "nodata",
                "description": "Background value to set to NoData. Without this flag, it will be set to 0.0.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "cell_size": {
                "name": "Cell Size",
                "flags": "cell_size",
                "description": "Optionally specified cell size of output raster. Not used when base raster is specified.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "base": {
                "name": "Base Raster File",
                "flags": "base",
                "description": "Optionally specified input base raster file. Not used when a cell size is specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "VectorPointsToRaster": {
        "name": "VectorPointsToRaster",
        "Name": "Vectorpointstoraster",
        "category": "Data Tools",
        "label": "Vector Points To Raster",
        "description": "Converts a vector containing points into a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/vector_points_to_raster.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#VectorPointsToRaster",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector Points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "\"FID\"",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "assign": {
                "name": "Assignment Operation",
                "flags": "assign",
                "description": "Assignment operation, where multiple points are in the same grid cell; options include 'first', 'last' (default), 'min', 'max', 'sum'",
                "parameter_type": {
                    "OptionList": [
                        "first",
                        "last",
                        "min",
                        "max",
                        "sum"
                    ]
                },
                "default_value": "\"last\"",
                "optional": "true"
            },
            "nodata": {
                "name": "Background value is NoData?",
                "flags": "nodata",
                "description": "Background value to set to NoData. Without this flag, it will be set to 0.0.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "cell_size": {
                "name": "Cell Size",
                "flags": "cell_size",
                "description": "Optionally specified cell size of output raster. Not used when base raster is specified.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "base": {
                "name": "Base Raster File",
                "flags": "base",
                "description": "Optionally specified input base raster file. Not used when a cell size is specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "VectorPolygonsToRaster": {
        "name": "VectorPolygonsToRaster",
        "Name": "Vectorpolygonstoraster",
        "category": "Data Tools",
        "label": "Vector Polygons To Raster",
        "description": "Converts a vector containing polygons into a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/data_tools/vector_polygons_to_raster.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/data_tools.html#VectorPolygonsToRaster",
        "parameters": {
            "i": {
                "name": "Input Vector Polygon File",
                "flags": "i",
                "description": "Input vector polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "\"FID\"",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "nodata": {
                "name": "Background value is NoData?",
                "flags": "nodata",
                "description": "Background value to set to NoData. Without this flag, it will be set to 0.0.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "cell_size": {
                "name": "Cell Size",
                "flags": "cell_size",
                "description": "Optionally specified cell size of output raster. Not used when base raster is specified.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "base": {
                "name": "Base Raster File",
                "flags": "base",
                "description": "Optionally specified input base raster file. Not used when a cell size is specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "AggregateRaster": {
        "name": "AggregateRaster",
        "Name": "Aggregateraster",
        "category": "GIS Analysis",
        "label": "Aggregate Raster",
        "description": "Aggregates a raster to a lower resolution.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/aggregate_raster.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#AggregateRaster",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "agg_factor": {
                "name": "Aggregation Factor (pixels)",
                "flags": "agg_factor",
                "description": "Aggregation factor, in pixels.",
                "parameter_type": "Integer",
                "default_value": "\"2\"",
                "optional": "true"
            },
            "type": {
                "name": "Aggregation Type",
                "flags": "type",
                "description": "Statistic used to fill output pixels.",
                "parameter_type": {
                    "OptionList": [
                        "mean",
                        "sum",
                        "maximum",
                        "minimum",
                        "range"
                    ]
                },
                "default_value": "\"mean\"",
                "optional": "true"
            }
        }
    },
    "BlockMaximumGridding": {
        "name": "BlockMaximumGridding",
        "Name": "Blockmaximumgridding",
        "category": "GIS Analysis",
        "label": "Block Maximum Gridding",
        "description": "Creates a raster grid based on a set of vector points and assigns grid values using a block maximum scheme.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/block_maximum.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#BlockMaximumGridding",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector Points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "use_z": {
                "name": "Use z-coordinate instead of field?",
                "flags": "use_z",
                "description": "Use z-coordinate instead of field?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "cell_size": {
                "name": "Cell Size",
                "flags": "cell_size",
                "description": "Optionally specified cell size of output raster. Not used when base raster is specified.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "base": {
                "name": "Base Raster File",
                "flags": "base",
                "description": "Optionally specified input base raster file. Not used when a cell size is specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "BlockMinimumGridding": {
        "name": "BlockMinimumGridding",
        "Name": "Blockminimumgridding",
        "category": "GIS Analysis",
        "label": "Block Minimum Gridding",
        "description": "Creates a raster grid based on a set of vector points and assigns grid values using a block minimum scheme.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/block_minimum.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#BlockMinimumGridding",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector Points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "use_z": {
                "name": "Use z-coordinate instead of field?",
                "flags": "use_z",
                "description": "Use z-coordinate instead of field?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "cell_size": {
                "name": "Cell Size",
                "flags": "cell_size",
                "description": "Optionally specified cell size of output raster. Not used when base raster is specified.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "base": {
                "name": "Base Raster File",
                "flags": "base",
                "description": "Optionally specified input base raster file. Not used when a cell size is specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "Centroid": {
        "name": "Centroid",
        "Name": "Centroid",
        "category": "GIS Analysis",
        "label": "Centroid",
        "description": "Calculates the centroid, or average location, of raster polygon objects.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/centroid.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#Centroid",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "text_output": {
                "name": "Output text?",
                "flags": "text_output",
                "description": "Optional text output.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "CentroidVector": {
        "name": "CentroidVector",
        "Name": "Centroidvector",
        "category": "GIS Analysis",
        "label": "Centroid Vector",
        "description": "Identifes the centroid point of a vector polyline or polygon feature or a group of vector points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/centroid_vector.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#CentroidVector",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Clump": {
        "name": "Clump",
        "Name": "Clump",
        "category": "GIS Analysis",
        "label": "Clump",
        "description": "Groups cells that form discrete areas, assigning them unique identifiers.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/clump.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#Clump",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "diag": {
                "name": "Include diagonal connections?",
                "flags": "diag",
                "description": "Flag indicating whether diagonal connections should be considered.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "false"
            },
            "zero_back": {
                "name": "Treat zero values as background?",
                "flags": "zero_back",
                "description": "Flag indicating whether zero values should be treated as a background.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ConstructVectorTin": {
        "name": "ConstructVectorTin",
        "Name": "Constructvectortin",
        "category": "GIS Analysis",
        "label": "Construct Vector Tin",
        "description": "Creates a vector triangular irregular network (TIN) for a set of vector points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/construct_vector_tin.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#ConstructVectorTin",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "true"
            },
            "use_z": {
                "name": "Use Shapefile 'z' values?",
                "flags": "use_z",
                "description": "Use the 'z' dimension of the Shapefile's geometry instead of an attribute field?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "max_triangle_edge_length": {
                "name": "Maximum Triangle Edge Length",
                "flags": "max_triangle_edge_length",
                "description": "Optional maximum triangle edge length; triangles larger than this size will not be gridded.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "CreateHexagonalVectorGrid": {
        "name": "CreateHexagonalVectorGrid",
        "Name": "Createhexagonalvectorgrid",
        "category": "GIS Analysis",
        "label": "Create Hexagonal Vector Grid",
        "description": "Creates a hexagonal vector grid.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/create_hexagonal_vector_grid.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#CreateHexagonalVectorGrid",
        "parameters": {
            "i": {
                "name": "Input Base File",
                "flags": "i",
                "description": "Input base file.",
                "parameter_type": {
                    "ExistingFile": {
                        "RasterAndVector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "width": {
                "name": "Hexagon Width",
                "flags": "width",
                "description": "The grid cell width.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "orientation": {
                "name": "Grid Orientation",
                "flags": "orientation",
                "description": "Grid Orientation, 'horizontal' or 'vertical'.",
                "parameter_type": {
                    "OptionList": [
                        "horizontal",
                        "vertical"
                    ]
                },
                "default_value": "\"horizontal\"",
                "optional": "true"
            }
        }
    },
    "CreatePlane": {
        "name": "CreatePlane",
        "Name": "Createplane",
        "category": "GIS Analysis",
        "label": "Create Plane",
        "description": "Creates a raster image based on the equation for a simple plane.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/create_plane.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#CreatePlane",
        "parameters": {
            "base": {
                "name": "Input Base File",
                "flags": "base",
                "description": "Input base raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "gradient": {
                "name": "Gradient",
                "flags": "gradient",
                "description": "Slope gradient in degrees (-85.0 to 85.0).",
                "parameter_type": "Float",
                "default_value": "\"15.0\"",
                "optional": "false"
            },
            "aspect": {
                "name": "Aspect",
                "flags": "aspect",
                "description": "Aspect (direction) in degrees clockwise from north (0.0-360.0).",
                "parameter_type": "Float",
                "default_value": "\"90.0\"",
                "optional": "false"
            },
            "constant": {
                "name": "Constant",
                "flags": "constant",
                "description": "Constant value.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "false"
            }
        }
    },
    "CreateRectangularVectorGrid": {
        "name": "CreateRectangularVectorGrid",
        "Name": "Createrectangularvectorgrid",
        "category": "GIS Analysis",
        "label": "Create Rectangular Vector Grid",
        "description": "Creates a rectangular vector grid.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/create_rectangular_vector_grid.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#CreateRectangularVectorGrid",
        "parameters": {
            "i": {
                "name": "Input Base File",
                "flags": "i",
                "description": "Input base file.",
                "parameter_type": {
                    "ExistingFile": {
                        "RasterAndVector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "width": {
                "name": "Grid Cell Width",
                "flags": "width",
                "description": "The grid cell width.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "height": {
                "name": "Grid Cell Height",
                "flags": "height",
                "description": "The grid cell height.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "xorig": {
                "name": "Grid origin x-coordinate",
                "flags": "xorig",
                "description": "The grid origin x-coordinate.",
                "parameter_type": "Float",
                "default_value": "\"0\"",
                "optional": "true"
            },
            "yorig": {
                "name": "Grid origin y-coordinate",
                "flags": "yorig",
                "description": "The grid origin y-coordinate.",
                "parameter_type": "Float",
                "default_value": "\"0\"",
                "optional": "true"
            }
        }
    },
    "Dissolve": {
        "name": "Dissolve",
        "Name": "Dissolve",
        "category": "GIS Analysis",
        "label": "Dissolve",
        "description": "Removes the interior, or shared, boundaries within a vector polygon coverage.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/dissolve.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#Dissolve",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Dissolve Field Attribute",
                "flags": "field",
                "description": "Dissolve field attribute.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Any",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "snap": {
                "name": "Snap Tolerance",
                "flags": "snap",
                "description": "Snap tolerance.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "EliminateCoincidentPoints": {
        "name": "EliminateCoincidentPoints",
        "Name": "Eliminatecoincidentpoints",
        "category": "GIS Analysis",
        "label": "Eliminate Coincident Points",
        "description": "Removes any coincident, or nearly coincident, points from a vector points file.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/eliminate_coincident_points.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#EliminateCoincidentPoints",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "tolerance": {
                "name": "Distance Tolerance",
                "flags": "tolerance",
                "description": "The distance tolerance for points.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ExtendVectorLines": {
        "name": "ExtendVectorLines",
        "Name": "Extendvectorlines",
        "category": "GIS Analysis",
        "label": "Extend Vector Lines",
        "description": "Extends vector lines by a specified distance.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/extend_vector_lines.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#ExtendVectorLines",
        "parameters": {
            "i": {
                "name": "Input Vector Lines File",
                "flags": "i",
                "description": "Input vector polyline file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector polyline file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "dist": {
                "name": "Extend Distance",
                "flags": "dist",
                "description": "The distance to extend.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "extend": {
                "name": "Extend Direction",
                "flags": "extend",
                "description": "Extend direction, 'both ends' (default), 'line start', 'line end'.",
                "parameter_type": {
                    "OptionList": [
                        "both ends",
                        "line start",
                        "line end"
                    ]
                },
                "default_value": "\"both ends\"",
                "optional": "true"
            }
        }
    },
    "ExtractNodes": {
        "name": "ExtractNodes",
        "Name": "Extractnodes",
        "category": "GIS Analysis",
        "label": "Extract Nodes",
        "description": "Converts vector lines or polygons into vertex points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/extract_nodes.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#ExtractNodes",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector lines or polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Points File",
                "flags": "output",
                "description": "Output vector points file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ExtractRasterValuesAtPoints": {
        "name": "ExtractRasterValuesAtPoints",
        "Name": "Extractrastervaluesatpoints",
        "category": "GIS Analysis",
        "label": "Extract Raster Values At Points",
        "description": "Extracts the values of raster(s) at vector point locations.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/extract_raster_values_at_points.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#ExtractRasterValuesAtPoints",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "points": {
                "name": "Input Points File",
                "flags": "points",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_text": {
                "name": "Output text?",
                "flags": "out_text",
                "description": "Output point values as text? Otherwise, the only output is to to the points file's attribute table.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "FilterRasterFeaturesByArea": {
        "name": "FilterRasterFeaturesByArea",
        "Name": "Filterrasterfeaturesbyarea",
        "category": "GIS Analysis",
        "label": "Filter Raster Features By Area",
        "description": "Removes small-area features from a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/filter_raster_features_by_area.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#FilterRasterFeaturesByArea",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "threshold": {
                "name": "Area Threshold (grid cells)",
                "flags": "threshold",
                "description": "Remove features with fewer grid cells than this threshold value.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "background": {
                "name": "Background Value",
                "flags": "background",
                "description": "Background value.",
                "parameter_type": {
                    "OptionList": [
                        "zero",
                        "nodata"
                    ]
                },
                "default_value": "\"zero\"",
                "optional": "true"
            }
        }
    },
    "FindLowestOrHighestPoints": {
        "name": "FindLowestOrHighestPoints",
        "Name": "Findlowestorhighestpoints",
        "category": "GIS Analysis",
        "label": "Find Lowest Or Highest Points",
        "description": "Locates the lowest and/or highest valued cells in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/find_lowest_or_highest_points.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#FindLowestOrHighestPoints",
        "parameters": {
            "i": {
                "name": "Input Raster File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Points File",
                "flags": "output",
                "description": "Output vector points file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_type": {
                "name": "Output Type",
                "flags": "out_type",
                "description": "Output type; one of 'area' (default) and 'volume'.",
                "parameter_type": {
                    "OptionList": [
                        "lowest",
                        "highest",
                        "both"
                    ]
                },
                "default_value": "\"lowest\"",
                "optional": "true"
            }
        }
    },
    "IdwInterpolation": {
        "name": "IdwInterpolation",
        "Name": "Idwinterpolation",
        "category": "GIS Analysis",
        "label": "Idw Interpolation",
        "description": "Interpolates vector points into a raster surface using an inverse-distance weighted scheme.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/idw_interpolation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#IdwInterpolation",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector Points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "use_z": {
                "name": "Use z-coordinate instead of field?",
                "flags": "use_z",
                "description": "Use z-coordinate instead of field?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "weight": {
                "name": "IDW Weight (Exponent) Value",
                "flags": "weight",
                "description": "IDW weight value.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            },
            "radius": {
                "name": "Search Radius (map units)",
                "flags": "radius",
                "description": "Search Radius in map units.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "min_points": {
                "name": "Min. Number of Points",
                "flags": "min_points",
                "description": "Minimum number of points.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "true"
            },
            "cell_size": {
                "name": "Cell Size",
                "flags": "cell_size",
                "description": "Optionally specified cell size of output raster. Not used when base raster is specified.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "base": {
                "name": "Base Raster File",
                "flags": "base",
                "description": "Optionally specified input base raster file. Not used when a cell size is specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LayerFootprint": {
        "name": "LayerFootprint",
        "Name": "Layerfootprint",
        "category": "GIS Analysis",
        "label": "Layer Footprint",
        "description": "Creates a vector polygon footprint of the area covered by a raster grid or vector layer.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/layer_footprint.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#LayerFootprint",
        "parameters": {
            "i": {
                "name": "Input Raster or Vector File",
                "flags": "i",
                "description": "Input raster or vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "RasterAndVector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Medoid": {
        "name": "Medoid",
        "Name": "Medoid",
        "category": "GIS Analysis",
        "label": "Medoid",
        "description": "Calculates the medoid for a series of vector features contained in a shapefile.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/medoid.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#Medoid",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "MinimumBoundingBox": {
        "name": "MinimumBoundingBox",
        "Name": "Minimumboundingbox",
        "category": "GIS Analysis",
        "label": "Minimum Bounding Box",
        "description": "Creates a vector minimum bounding rectangle around vector features.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/minimum_bounding_box.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#MinimumBoundingBox",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "criterion": {
                "name": "Minimization Criterion",
                "flags": "criterion",
                "description": "Minimization criterion; options include 'area' (default), 'length', 'width', and 'perimeter'.",
                "parameter_type": {
                    "OptionList": [
                        "area",
                        "length",
                        "width",
                        "perimeter"
                    ]
                },
                "default_value": "\"area\"",
                "optional": "true"
            },
            "features": {
                "name": "Find bounding rectangles around each individual feature.",
                "flags": "features",
                "description": "Find the minimum bounding rectangles around each individual vector feature",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            }
        }
    },
    "MinimumBoundingCircle": {
        "name": "MinimumBoundingCircle",
        "Name": "Minimumboundingcircle",
        "category": "GIS Analysis",
        "label": "Minimum Bounding Circle",
        "description": "Delineates the minimum bounding circle (i.e. smallest enclosing circle) for a group of vectors.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/minimum_bounding_circle.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#MinimumBoundingCircle",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "features": {
                "name": "Find bounding circle around each individual feature.",
                "flags": "features",
                "description": "Find the minimum bounding circle around each individual vector feature",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            }
        }
    },
    "MinimumBoundingEnvelope": {
        "name": "MinimumBoundingEnvelope",
        "Name": "Minimumboundingenvelope",
        "category": "GIS Analysis",
        "label": "Minimum Bounding Envelope",
        "description": "Creates a vector axis-aligned minimum bounding rectangle (envelope) around vector features.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/minimum_bounding_envelope.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#MinimumBoundingEnvelope",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "features": {
                "name": "Find bounding envelop around each individual feature.",
                "flags": "features",
                "description": "Find the minimum bounding envelop around each individual vector feature",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            }
        }
    },
    "MinimumConvexHull": {
        "name": "MinimumConvexHull",
        "Name": "Minimumconvexhull",
        "category": "GIS Analysis",
        "label": "Minimum Convex Hull",
        "description": "Creates a vector convex polygon around vector features.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/minimum_convex_hull.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#MinimumConvexHull",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "features": {
                "name": "Find hulls around each individual feature.",
                "flags": "features",
                "description": "Find the hulls around each vector feature",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            }
        }
    },
    "NaturalNeighbourInterpolation": {
        "name": "NaturalNeighbourInterpolation",
        "Name": "Naturalneighbourinterpolation",
        "category": "GIS Analysis",
        "label": "Natural Neighbour Interpolation",
        "description": "Creates a raster grid based on Sibson's natural neighbour method.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/natural_neighbour_interpolation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#NaturalNeighbourInterpolation",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "true"
            },
            "use_z": {
                "name": "Use Shapefile 'z' values?",
                "flags": "use_z",
                "description": "Use the 'z' dimension of the Shapefile's geometry instead of an attribute field?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "output": {
                "name": "Output Raster File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "cell_size": {
                "name": "Cell Size",
                "flags": "cell_size",
                "description": "Optionally specified cell size of output raster. Not used when base raster is specified.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "base": {
                "name": "Base Raster File",
                "flags": "base",
                "description": "Optionally specified input base raster file. Not used when a cell size is specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "clip": {
                "name": "Clip to convex hull?",
                "flags": "clip",
                "description": "Clip the data to the convex hull of the points?",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            }
        }
    },
    "NearestNeighbourGridding": {
        "name": "NearestNeighbourGridding",
        "Name": "Nearestneighbourgridding",
        "category": "GIS Analysis",
        "label": "Nearest Neighbour Gridding",
        "description": "Creates a raster grid based on a set of vector points and assigns grid values using the nearest neighbour.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/nearest_neighbour_gridding.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#NearestNeighbourGridding",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector Points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "use_z": {
                "name": "Use z-coordinate instead of field?",
                "flags": "use_z",
                "description": "Use z-coordinate instead of field?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "cell_size": {
                "name": "Cell Size",
                "flags": "cell_size",
                "description": "Optionally specified cell size of output raster. Not used when base raster is specified.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "base": {
                "name": "Base Raster File",
                "flags": "base",
                "description": "Optionally specified input base raster file. Not used when a cell size is specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "max_dist": {
                "name": "Maximum Search Distance",
                "flags": "max_dist",
                "description": "Maximum search distance",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "PolygonArea": {
        "name": "PolygonArea",
        "Name": "Polygonarea",
        "category": "GIS Analysis",
        "label": "Polygon Area",
        "description": "Calculates the area of vector polygons.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/polygon_area.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#PolygonArea",
        "parameters": {
            "i": {
                "name": "Input Vector Polygon File",
                "flags": "i",
                "description": "Input vector polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "PolygonLongAxis": {
        "name": "PolygonLongAxis",
        "Name": "Polygonlongaxis",
        "category": "GIS Analysis",
        "label": "Polygon Long Axis",
        "description": "This tool can be used to map the long axis of polygon features.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/polygon_long_axis.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#PolygonLongAxis",
        "parameters": {
            "i": {
                "name": "Input Polygon File",
                "flags": "i",
                "description": "Input vector polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polyline file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "PolygonPerimeter": {
        "name": "PolygonPerimeter",
        "Name": "Polygonperimeter",
        "category": "GIS Analysis",
        "label": "Polygon Perimeter",
        "description": "Calculates the perimeter of vector polygons.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/polygon_perimeter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#PolygonPerimeter",
        "parameters": {
            "i": {
                "name": "Input Vector Polygon File",
                "flags": "i",
                "description": "Input vector polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "PolygonShortAxis": {
        "name": "PolygonShortAxis",
        "Name": "Polygonshortaxis",
        "category": "GIS Analysis",
        "label": "Polygon Short Axis",
        "description": "This tool can be used to map the short axis of polygon features.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/polygon_short_axis.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#PolygonShortAxis",
        "parameters": {
            "i": {
                "name": "Input Polygon File",
                "flags": "i",
                "description": "Input vector polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polyline file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "RadialBasisFunctionInterpolation": {
        "name": "RadialBasisFunctionInterpolation",
        "Name": "Radialbasisfunctioninterpolation",
        "category": "GIS Analysis",
        "label": "Radial Basis Function Interpolation",
        "description": "Interpolates vector points into a raster surface using a radial basis function scheme.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/radial_basis_function_interpolation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#RadialBasisFunctionInterpolation",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "use_z": {
                "name": "Use z-coordinate instead of field?",
                "flags": "use_z",
                "description": "Use z-coordinate instead of field?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "radius": {
                "name": "Search Radius (map units)",
                "flags": "radius",
                "description": "Search Radius (in map units).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "min_points": {
                "name": "Min. Number of Points",
                "flags": "min_points",
                "description": "Minimum number of points.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "true"
            },
            "func_type": {
                "name": "Radial Basis Function Type",
                "flags": "func_type",
                "description": "Radial basis function type; options are 'ThinPlateSpline' (default), 'PolyHarmonic', 'Gaussian', 'MultiQuadric', 'InverseMultiQuadric'.",
                "parameter_type": {
                    "OptionList": [
                        "ThinPlateSpline",
                        "PolyHarmonic",
                        "Gaussian",
                        "MultiQuadric",
                        "InverseMultiQuadric"
                    ]
                },
                "default_value": "\"ThinPlateSpline\"",
                "optional": "true"
            },
            "poly_order": {
                "name": "Polynomial Order",
                "flags": "poly_order",
                "description": "Polynomial order; options are 'none' (default), 'constant', 'affine'.",
                "parameter_type": {
                    "OptionList": [
                        "none",
                        "constant",
                        "affine"
                    ]
                },
                "default_value": "\"none\"",
                "optional": "true"
            },
            "weight": {
                "name": "Weight",
                "flags": "weight",
                "description": "Weight parameter used in basis function.",
                "parameter_type": "Float",
                "default_value": "\"0.1\"",
                "optional": "false"
            },
            "cell_size": {
                "name": "Cell Size",
                "flags": "cell_size",
                "description": "Optionally specified cell size of output raster. Not used when base raster is specified.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "base": {
                "name": "Base Raster File",
                "flags": "base",
                "description": "Optionally specified input base raster file. Not used when a cell size is specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "RasterArea": {
        "name": "RasterArea",
        "Name": "Rasterarea",
        "category": "GIS Analysis",
        "label": "Raster Area",
        "description": "Calculates the area of polygons or classes within a raster image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/raster_area.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#RasterArea",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "out_text": {
                "name": "Output text?",
                "flags": "out_text",
                "description": "Would you like to output polygon areas to text?",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "false"
            },
            "units": {
                "name": "Units",
                "flags": "units",
                "description": "Area units; options include 'grid cells' and 'map units'.",
                "parameter_type": {
                    "OptionList": [
                        "grid cells",
                        "map units"
                    ]
                },
                "default_value": "\"grid cells\"",
                "optional": "true"
            },
            "zero_back": {
                "name": "Treat zero values as background?",
                "flags": "zero_back",
                "description": "Flag indicating whether zero values should be treated as a background.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "RasterCellAssignment": {
        "name": "RasterCellAssignment",
        "Name": "Rastercellassignment",
        "category": "GIS Analysis",
        "label": "Raster Cell Assignment",
        "description": "Assign row or column number to cells.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/raster_cell_assignment.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#RasterCellAssignment",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "assign": {
                "name": "Which spatial variable should be assigned?",
                "flags": "assign",
                "description": "Which variable would you like to assign to grid cells? Options include 'column', 'row', 'x', and 'y'.",
                "parameter_type": {
                    "OptionList": [
                        "column",
                        "row",
                        "x",
                        "y"
                    ]
                },
                "default_value": "\"column\"",
                "optional": "false"
            }
        }
    },
    "RasterPerimeter": {
        "name": "RasterPerimeter",
        "Name": "Rasterperimeter",
        "category": "GIS Analysis",
        "label": "Raster Perimeter",
        "description": "Calculates the perimeters of polygons or classes within a raster image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/raster_perimeter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#RasterPerimeter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "out_text": {
                "name": "Output text?",
                "flags": "out_text",
                "description": "Would you like to output polygon areas to text?",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "false"
            },
            "units": {
                "name": "Units",
                "flags": "units",
                "description": "Area units; options include 'grid cells' and 'map units'.",
                "parameter_type": {
                    "OptionList": [
                        "grid cells",
                        "map units"
                    ]
                },
                "default_value": "\"grid cells\"",
                "optional": "true"
            },
            "zero_back": {
                "name": "Treat zero values as background?",
                "flags": "zero_back",
                "description": "Flag indicating whether zero values should be treated as a background.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Reclass": {
        "name": "Reclass",
        "Name": "Reclass",
        "category": "GIS Analysis",
        "label": "Reclass",
        "description": "Reclassifies the values in a raster image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/reclass.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#Reclass",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "reclass_vals": {
                "name": "Reclass Values (new value; from value; to less than)",
                "flags": "reclass_vals",
                "description": "Reclassification triplet values (new value; from value; to less than), e.g. '0.0;0.0;1.0;1.0;1.0;2.0'",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "false"
            },
            "assign_mode": {
                "name": "Operate in assign mode? (i.e. Reclass data are pair values rather than triplets)",
                "flags": "assign_mode",
                "description": "Optional Boolean flag indicating whether to operate in assign mode, reclass_vals values are interpreted as new value; old value pairs.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "ReclassEqualInterval": {
        "name": "ReclassEqualInterval",
        "Name": "Reclassequalinterval",
        "category": "GIS Analysis",
        "label": "Reclass Equal Interval",
        "description": "Reclassifies the values in a raster image based on equal-ranges.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/reclass_equal_interval.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#ReclassEqualInterval",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "interval": {
                "name": "Class Interval Size",
                "flags": "interval",
                "description": "Class interval size.",
                "parameter_type": "Float",
                "default_value": "\"10.0\"",
                "optional": "false"
            },
            "start_val": {
                "name": "Starting Value",
                "flags": "start_val",
                "description": "Optional starting value (default is input minimum value).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "end_val": {
                "name": "Ending Value",
                "flags": "end_val",
                "description": "Optional ending value (default is input maximum value).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "ReclassFromFile": {
        "name": "ReclassFromFile",
        "Name": "Reclassfromfile",
        "category": "GIS Analysis",
        "label": "Reclass From File",
        "description": "Reclassifies the values in a raster image using reclass ranges in a text file.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/reclass_from_file.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#ReclassFromFile",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "reclass_file": {
                "name": "Input Reclass Text File",
                "flags": "reclass_file",
                "description": "Input text file containing reclass ranges.",
                "parameter_type": {
                    "ExistingFile": "Text"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "SmoothVectors": {
        "name": "SmoothVectors",
        "Name": "Smoothvectors",
        "category": "GIS Analysis",
        "label": "Smooth Vectors",
        "description": "Smooths a vector coverage of either a POLYLINE or POLYGON base ShapeType.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/smooth_vectors.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#SmoothVectors",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector POLYLINE or POLYGON file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "filter": {
                "name": "Filter Size",
                "flags": "filter",
                "description": "The filter size, any odd integer greater than or equal to 3; default is 3.",
                "parameter_type": "Integer",
                "default_value": "\"3\"",
                "optional": "true"
            }
        }
    },
    "SplitVectorLines": {
        "name": "SplitVectorLines",
        "Name": "Splitvectorlines",
        "category": "GIS Analysis",
        "label": "Split Vector Lines",
        "description": "This tool can be used to approximate the harvester pass lines from yield points.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#SplitVectorLines",
        "parameters": {
            "i": {
                "name": "Input Lines",
                "flags": "i",
                "description": "Name of the input lines shapefile.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Lines"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output Lines",
                "flags": "output",
                "description": "Name of the output lines shapefile.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Lines"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "length": {
                "name": "Max Segment Length",
                "flags": "length",
                "description": "Maximum segment length (m).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true,"
            }
        }
    },
    "TinGridding": {
        "name": "TinGridding",
        "Name": "Tingridding",
        "category": "GIS Analysis",
        "label": "Tin Gridding",
        "description": "Creates a raster grid based on a triangular irregular network (TIN) fitted to vector points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/tin_gridding.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#TinGridding",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "true"
            },
            "use_z": {
                "name": "Use Shapefile 'z' values?",
                "flags": "use_z",
                "description": "Use the 'z' dimension of the Shapefile's geometry instead of an attribute field?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "output": {
                "name": "Output Raster File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "base": {
                "name": "Base Raster File",
                "flags": "base",
                "description": "Optionally specified input base raster file. Not used when a cell size is specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "max_triangle_edge_length": {
                "name": "Maximum Triangle Edge Length",
                "flags": "max_triangle_edge_length",
                "description": "Optional maximum triangle edge length; triangles larger than this size will not be gridded.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "VectorHexBinning": {
        "name": "VectorHexBinning",
        "Name": "Vectorhexbinning",
        "category": "GIS Analysis",
        "label": "Vector Hex Binning",
        "description": "Hex-bins a set of vector points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/vector_hex_bin.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#VectorHexBinning",
        "parameters": {
            "i": {
                "name": "Input Base File",
                "flags": "i",
                "description": "Input base file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "width": {
                "name": "Hexagon Width",
                "flags": "width",
                "description": "The grid cell width.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "orientation": {
                "name": "Grid Orientation",
                "flags": "orientation",
                "description": "Grid Orientation, 'horizontal' or 'vertical'.",
                "parameter_type": {
                    "OptionList": [
                        "horizontal",
                        "vertical"
                    ]
                },
                "default_value": "\"horizontal\"",
                "optional": "true"
            }
        }
    },
    "VoronoiDiagram": {
        "name": "VoronoiDiagram",
        "Name": "Voronoidiagram",
        "category": "GIS Analysis",
        "label": "Voronoi Diagram",
        "description": "Creates a vector Voronoi diagram for a set of vector points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/voronoi_diagram.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#VoronoiDiagram",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "BufferRaster": {
        "name": "BufferRaster",
        "Name": "Bufferraster",
        "category": "GIS Analysis",
        "label": "Buffer Raster",
        "description": "Maps a distance-based buffer around each non-background (non-zero/non-nodata) grid cell in an input image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/buffer_raster.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#BufferRaster",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "size": {
                "name": "Buffer Size",
                "flags": "size",
                "description": "Buffer size.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "gridcells": {
                "name": "Buffer size measured in grid cells?",
                "flags": "gridcells",
                "description": "Optional flag to indicate that the 'size' threshold should be measured in grid cells instead of the default map units.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "CostAllocation": {
        "name": "CostAllocation",
        "Name": "Costallocation",
        "category": "GIS Analysis",
        "label": "Cost Allocation",
        "description": "Identifies the source cell to which each grid cell is connected by a least-cost pathway in a cost-distance analysis.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/cost_allocation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#CostAllocation",
        "parameters": {
            "source": {
                "name": "Input Source File",
                "flags": "source",
                "description": "Input source raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "backlink": {
                "name": "Input Backlink File",
                "flags": "backlink",
                "description": "Input backlink raster file generated by the cost-distance tool.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "CostDistance": {
        "name": "CostDistance",
        "Name": "Costdistance",
        "category": "GIS Analysis",
        "label": "Cost Distance",
        "description": "Performs cost-distance accumulation on a cost surface and a group of source cells.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/cost_distance.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#CostDistance",
        "parameters": {
            "source": {
                "name": "Input Source File",
                "flags": "source",
                "description": "Input source raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "cost": {
                "name": "Input Cost (Friction) File",
                "flags": "cost",
                "description": "Input cost (friction) raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_accum": {
                "name": "Output Cost Accumulation File",
                "flags": "out_accum",
                "description": "Output cost accumulation raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_backlink": {
                "name": "Output Backlink File",
                "flags": "out_backlink",
                "description": "Output backlink raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "CostPathway": {
        "name": "CostPathway",
        "Name": "Costpathway",
        "category": "GIS Analysis",
        "label": "Cost Pathway",
        "description": "Performs cost-distance pathway analysis using a series of destination grid cells.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/cost_pathway.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#CostPathway",
        "parameters": {
            "destination": {
                "name": "Input Destination File",
                "flags": "destination",
                "description": "Input destination raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "backlink": {
                "name": "Input Backlink File",
                "flags": "backlink",
                "description": "Input backlink raster file generated by the cost-distance tool.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output cost pathway raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "zero_background": {
                "name": "Treat zero values as background?",
                "flags": "zero_background",
                "description": "Flag indicating whether zero values should be treated as a background.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "EuclideanAllocation": {
        "name": "EuclideanAllocation",
        "Name": "Euclideanallocation",
        "category": "GIS Analysis",
        "label": "Euclidean Allocation",
        "description": "Assigns grid cells in the output raster the value of the nearest target cell in the input image, measured by the Shih and Wu (2004) Euclidean distance transform.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/euclidean_allocation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#EuclideanAllocation",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "EuclideanDistance": {
        "name": "EuclideanDistance",
        "Name": "Euclideandistance",
        "category": "GIS Analysis",
        "label": "Euclidean Distance",
        "description": "Calculates the Shih and Wu (2004) Euclidean distance transform.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/euclidean_distance.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#EuclideanDistance",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "AverageOverlay": {
        "name": "AverageOverlay",
        "Name": "Averageoverlay",
        "category": "GIS Analysis",
        "label": "Average Overlay",
        "description": "Calculates the average for each grid cell from a group of raster images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/average_overlay.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#AverageOverlay",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Clip": {
        "name": "Clip",
        "Name": "Clip",
        "category": "GIS Analysis",
        "label": "Clip",
        "description": "Extract all the features, or parts of features, that overlap with the features of the clip vector.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/clip.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#Clip",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "clip": {
                "name": "Input Clip Polygon Vector File",
                "flags": "clip",
                "description": "Input clip polygon vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ClipRasterToPolygon": {
        "name": "ClipRasterToPolygon",
        "Name": "Cliprastertopolygon",
        "category": "GIS Analysis",
        "label": "Clip Raster To Polygon",
        "description": "Clips a raster to a vector polygon.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/clip_raster_to_polygon.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#ClipRasterToPolygon",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "polygons": {
                "name": "Input Vector Polygon File",
                "flags": "polygons",
                "description": "Input vector polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "maintain_dimensions": {
                "name": "Maintain input raster dimensions?",
                "flags": "maintain_dimensions",
                "description": "Maintain input raster dimensions?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "CountIf": {
        "name": "CountIf",
        "Name": "Countif",
        "category": "GIS Analysis",
        "label": "Count If",
        "description": "Counts the number of occurrences of a specified value in a cell-stack of rasters.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/count_if.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#CountIf",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "value": {
                "name": "Value",
                "flags": "value",
                "description": "Search value (e.g. countif value = 5.0).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Difference": {
        "name": "Difference",
        "Name": "Difference",
        "category": "GIS Analysis",
        "label": "Difference",
        "description": "Outputs the features that occur in one of the two vector inputs but not both, i.e. no overlapping features.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/difference.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#Difference",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "overlay": {
                "name": "Input Overlay Vector File",
                "flags": "overlay",
                "description": "Input overlay vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Erase": {
        "name": "Erase",
        "Name": "Erase",
        "category": "GIS Analysis",
        "label": "Erase",
        "description": "Removes all the features, or parts of features, that overlap with the features of the erase vector polygon.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/erase.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#Erase",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "erase": {
                "name": "Input Erase Polygon Vector File",
                "flags": "erase",
                "description": "Input erase polygon vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ErasePolygonFromRaster": {
        "name": "ErasePolygonFromRaster",
        "Name": "Erasepolygonfromraster",
        "category": "GIS Analysis",
        "label": "Erase Polygon From Raster",
        "description": "Erases (cuts out) a vector polygon from a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/erase_polygon_from_raster.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#ErasePolygonFromRaster",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "polygons": {
                "name": "Input Vector Polygon File",
                "flags": "polygons",
                "description": "Input vector polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "HighestPosition": {
        "name": "HighestPosition",
        "Name": "Highestposition",
        "category": "GIS Analysis",
        "label": "Highest Position",
        "description": "Identifies the stack position of the maximum value within a raster stack on a cell-by-cell basis.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/highest_pos.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#HighestPosition",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Intersect": {
        "name": "Intersect",
        "Name": "Intersect",
        "category": "GIS Analysis",
        "label": "Intersect",
        "description": "Identifies the parts of features in common between two input vector layers.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/intersect.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#Intersect",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "overlay": {
                "name": "Input Overlay Vector File",
                "flags": "overlay",
                "description": "Input overlay vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "snap": {
                "name": "Snap Tolerance",
                "flags": "snap",
                "description": "Snap tolerance.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "LineIntersections": {
        "name": "LineIntersections",
        "Name": "Lineintersections",
        "category": "GIS Analysis",
        "label": "Line Intersections",
        "description": "Identifies points where the features of two vector line layers intersect.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/line_intersections.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#LineIntersections",
        "parameters": {
            "input1": {
                "name": "Input Vector Lines File",
                "flags": "input1",
                "description": "Input vector polyline file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "LineOrPolygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input Vector Lines File",
                "flags": "input2",
                "description": "Input vector polyline file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "LineOrPolygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector Point File",
                "flags": "output",
                "description": "Output vector point file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "LowestPosition": {
        "name": "LowestPosition",
        "Name": "Lowestposition",
        "category": "GIS Analysis",
        "label": "Lowest Position",
        "description": "Identifies the stack position of the minimum value within a raster stack on a cell-by-cell basis.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/lowest_pos.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#LowestPosition",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "MaxAbsoluteOverlay": {
        "name": "MaxAbsoluteOverlay",
        "Name": "Maxabsoluteoverlay",
        "category": "GIS Analysis",
        "label": "Max Absolute Overlay",
        "description": "Evaluates the maximum absolute value for each grid cell from a stack of input rasters.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/max_abs_overlay.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#MaxAbsoluteOverlay",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "MaxOverlay": {
        "name": "MaxOverlay",
        "Name": "Maxoverlay",
        "category": "GIS Analysis",
        "label": "Max Overlay",
        "description": "Evaluates the maximum value for each grid cell from a stack of input rasters.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/max_overlay.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#MaxOverlay",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "MergeLineSegments": {
        "name": "MergeLineSegments",
        "Name": "Mergelinesegments",
        "category": "GIS Analysis",
        "label": "Merge Line Segments",
        "description": "Merges vector line segments into larger features.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/merge_line_segments.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#MergeLineSegments",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "snap": {
                "name": "Snap Tolerance",
                "flags": "snap",
                "description": "Snap tolerance.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "MinAbsoluteOverlay": {
        "name": "MinAbsoluteOverlay",
        "Name": "Minabsoluteoverlay",
        "category": "GIS Analysis",
        "label": "Min Absolute Overlay",
        "description": "Evaluates the minimum absolute value for each grid cell from a stack of input rasters.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/min_abs_overlay.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#MinAbsoluteOverlay",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "MinOverlay": {
        "name": "MinOverlay",
        "Name": "Minoverlay",
        "category": "GIS Analysis",
        "label": "Min Overlay",
        "description": "Evaluates the minimum value for each grid cell from a stack of input rasters.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/min_overlay.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#MinOverlay",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "PercentEqualTo": {
        "name": "PercentEqualTo",
        "Name": "Percentequalto",
        "category": "GIS Analysis",
        "label": "Percent Equal To",
        "description": "Calculates the percentage of a raster stack that have cell values equal to an input on a cell-by-cell basis.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/percent_equal_to.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#PercentEqualTo",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "comparison": {
                "name": "Input Comparison File",
                "flags": "comparison",
                "description": "Input comparison raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "PercentGreaterThan": {
        "name": "PercentGreaterThan",
        "Name": "Percentgreaterthan",
        "category": "GIS Analysis",
        "label": "Percent Greater Than",
        "description": "Calculates the percentage of a raster stack that have cell values greather than an input on a cell-by-cell basis.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/percent_greater_than.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#PercentGreaterThan",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "comparison": {
                "name": "Input Comparison File",
                "flags": "comparison",
                "description": "Input comparison raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "PercentLessThan": {
        "name": "PercentLessThan",
        "Name": "Percentlessthan",
        "category": "GIS Analysis",
        "label": "Percent Less Than",
        "description": "Calculates the percentage of a raster stack that have cell values less than an input on a cell-by-cell basis.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/percent_less_than.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#PercentLessThan",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "comparison": {
                "name": "Input Comparison File",
                "flags": "comparison",
                "description": "Input comparison raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "PickFromList": {
        "name": "PickFromList",
        "Name": "Pickfromlist",
        "category": "GIS Analysis",
        "label": "Pick From List",
        "description": "Outputs the value from a raster stack specified by a position raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/pick_from_list.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#PickFromList",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "pos_input": {
                "name": "Input Position File",
                "flags": "pos_input",
                "description": "Input position raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Polygonize": {
        "name": "Polygonize",
        "Name": "Polygonize",
        "category": "GIS Analysis",
        "label": "Polygonize",
        "description": "Creates a polygon layer from two or more intersecting line features contained in one or more input vector line files.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/polygonize.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#Polygonize",
        "parameters": {
            "inputs": {
                "name": "Input Vector Lines File",
                "flags": "inputs",
                "description": "Input vector polyline file.",
                "parameter_type": {
                    "FileList": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "SplitWithLines": {
        "name": "SplitWithLines",
        "Name": "Splitwithlines",
        "category": "GIS Analysis",
        "label": "Split With Lines",
        "description": "Splits the lines or polygons in one layer using the lines in another layer.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/split_with_lines.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#SplitWithLines",
        "parameters": {
            "i": {
                "name": "Input Vector Lines or Polygon File",
                "flags": "i",
                "description": "Input vector line or polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "split": {
                "name": "Input Vector Lines File",
                "flags": "split",
                "description": "Input vector polyline file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "SumOverlay": {
        "name": "SumOverlay",
        "Name": "Sumoverlay",
        "category": "GIS Analysis",
        "label": "Sum Overlay",
        "description": "Calculates the sum for each grid cell from a group of raster images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/sum_overlay.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#SumOverlay",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "SymmetricalDifference": {
        "name": "SymmetricalDifference",
        "Name": "Symmetricaldifference",
        "category": "GIS Analysis",
        "label": "Symmetrical Difference",
        "description": "Outputs the features that occur in one of the two vector inputs but not both, i.e. no overlapping features.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/symmetrical_difference.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#SymmetricalDifference",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "overlay": {
                "name": "Input Overlay Vector File",
                "flags": "overlay",
                "description": "Input overlay vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "snap": {
                "name": "Snap Tolerance",
                "flags": "snap",
                "description": "Snap tolerance.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "Union": {
        "name": "Union",
        "Name": "Union",
        "category": "GIS Analysis",
        "label": "Union",
        "description": "Splits vector layers at their overlaps, creating a layer containing all the portions from both input and overlay layers.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/union.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#Union",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "overlay": {
                "name": "Input Overlay Vector File",
                "flags": "overlay",
                "description": "Input overlay vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "snap": {
                "name": "Snap Tolerance",
                "flags": "snap",
                "description": "Snap tolerance.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "UpdateNodataCells": {
        "name": "UpdateNodataCells",
        "Name": "Updatenodatacells",
        "category": "GIS Analysis",
        "label": "Update Nodata Cells",
        "description": "Replaces the NoData values in an input raster with the corresponding values contained in a second update layer.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/update_nodata_cells.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#UpdateNodataCells",
        "parameters": {
            "input1": {
                "name": "Input File 1",
                "flags": "input1",
                "description": "Input raster file 1.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File 2 (Update Layer)",
                "flags": "input2",
                "description": "Input raster file 2; update layer.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "WeightedOverlay": {
        "name": "WeightedOverlay",
        "Name": "Weightedoverlay",
        "category": "GIS Analysis",
        "label": "Weighted Overlay",
        "description": "Performs a weighted sum on multiple input rasters after converting each image to a common scale. The tool performs a multi-criteria evaluation (MCE).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/weighted_overlay.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#WeightedOverlay",
        "parameters": {
            "factors": {
                "name": "Input Factor Files",
                "flags": "factors",
                "description": "Input factor raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "weights": {
                "name": "Weight Values (e.g. 1.7;3.5;1.2)",
                "flags": "weights",
                "description": "Weight values, contained in quotes and separated by commas or semicolons. Must have the same number as factors.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "false"
            },
            "cost": {
                "name": "Cost Factor? (e.g. false;true;true)",
                "flags": "cost",
                "description": "Weight values, contained in quotes and separated by commas or semicolons. Must have the same number as factors.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "true"
            },
            "constraints": {
                "name": "Input Constraints Files",
                "flags": "constraints",
                "description": "Input constraints raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "scale_max": {
                "name": "Suitability Scale Maximum",
                "flags": "scale_max",
                "description": "Suitability scale maximum value (common values are 1.0, 100.0, and 255.0).",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            }
        }
    },
    "WeightedSum": {
        "name": "WeightedSum",
        "Name": "Weightedsum",
        "category": "GIS Analysis",
        "label": "Weighted Sum",
        "description": "Performs a weighted-sum overlay on multiple input raster images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/weighted_sum.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#WeightedSum",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "weights": {
                "name": "Weight Values (e.g. 1.7;3.5;1.2)",
                "flags": "weights",
                "description": "Weight values, contained in quotes and separated by commas or semicolons.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "BoundaryShapeComplexity": {
        "name": "BoundaryShapeComplexity",
        "Name": "Boundaryshapecomplexity",
        "category": "GIS Analysis",
        "label": "Boundary Shape Complexity",
        "description": "Calculates the complexity of the boundaries of raster polygons.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/boundary_shape_complexity.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#BoundaryShapeComplexity",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "CompactnessRatio": {
        "name": "CompactnessRatio",
        "Name": "Compactnessratio",
        "category": "GIS Analysis",
        "label": "Compactness Ratio",
        "description": "Calculates the compactness ratio (A/P), a measure of shape complexity, for vector polygons.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/compactness_ratio.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#CompactnessRatio",
        "parameters": {
            "i": {
                "name": "Input Vector Polygon File",
                "flags": "i",
                "description": "Input vector polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "EdgeProportion": {
        "name": "EdgeProportion",
        "Name": "Edgeproportion",
        "category": "GIS Analysis",
        "label": "Edge Proportion",
        "description": "Calculate the proportion of cells in a raster polygon that are edge cells.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/edge_proportion.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#EdgeProportion",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output_text": {
                "name": "Output a text report?",
                "flags": "output_text",
                "description": "flag indicating whether a text report should also be output.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "ElongationRatio": {
        "name": "ElongationRatio",
        "Name": "Elongationratio",
        "category": "GIS Analysis",
        "label": "Elongation Ratio",
        "description": "Calculates the elongation ratio for vector polygons.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/elongation_ratio.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#ElongationRatio",
        "parameters": {
            "i": {
                "name": "Input Vector Polygon File",
                "flags": "i",
                "description": "Input vector polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "FindPatchOrClassEdgeCells": {
        "name": "FindPatchOrClassEdgeCells",
        "Name": "Findpatchorclassedgecells",
        "category": "GIS Analysis",
        "label": "Find Patch Or Class Edge Cells",
        "description": "Finds all cells located on the edge of patch or class features.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/find_patch_edge_cells.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#FindPatchOrClassEdgeCells",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "HoleProportion": {
        "name": "HoleProportion",
        "Name": "Holeproportion",
        "category": "GIS Analysis",
        "label": "Hole Proportion",
        "description": "Calculates the proportion of the total area of a polygon's holes relative to the area of the polygon's hull.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/hole_proportion.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#HoleProportion",
        "parameters": {
            "i": {
                "name": "Input Vector Polygon File",
                "flags": "i",
                "description": "Input vector polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "LinearityIndex": {
        "name": "LinearityIndex",
        "Name": "Linearityindex",
        "category": "GIS Analysis",
        "label": "Linearity Index",
        "description": "Calculates the linearity index for vector polygons.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/linearity_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#LinearityIndex",
        "parameters": {
            "i": {
                "name": "Input Vector Polygon File",
                "flags": "i",
                "description": "Input vector polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "NarrownessIndex": {
        "name": "NarrownessIndex",
        "Name": "Narrownessindex",
        "category": "GIS Analysis",
        "label": "Narrowness Index",
        "description": "Calculates the narrowness of raster polygons.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/narrowness_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#NarrownessIndex",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "PatchOrientation": {
        "name": "PatchOrientation",
        "Name": "Patchorientation",
        "category": "GIS Analysis",
        "label": "Patch Orientation",
        "description": "Calculates the orientation of vector polygons.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/patch_orientation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#PatchOrientation",
        "parameters": {
            "i": {
                "name": "Input Vector Polygon File",
                "flags": "i",
                "description": "Input vector polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "PerimeterAreaRatio": {
        "name": "PerimeterAreaRatio",
        "Name": "Perimeterarearatio",
        "category": "GIS Analysis",
        "label": "Perimeter Area Ratio",
        "description": "Calculates the perimeter-area ratio of vector polygons.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/perimeter_area_ratio.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#PerimeterAreaRatio",
        "parameters": {
            "i": {
                "name": "Input Vector Polygon File",
                "flags": "i",
                "description": "Input vector polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "RadiusOfGyration": {
        "name": "RadiusOfGyration",
        "Name": "Radiusofgyration",
        "category": "GIS Analysis",
        "label": "Radius Of Gyration",
        "description": "Calculates the distance of cells from their polygon's centroid.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/radius_of_gyration.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#RadiusOfGyration",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "text_output": {
                "name": "Output text?",
                "flags": "text_output",
                "description": "Optional text output.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "RelatedCircumscribingCircle": {
        "name": "RelatedCircumscribingCircle",
        "Name": "Relatedcircumscribingcircle",
        "category": "GIS Analysis",
        "label": "Related Circumscribing Circle",
        "description": "Calculates the related circumscribing circle of vector polygons.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/related_circumscribing_circle.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#RelatedCircumscribingCircle",
        "parameters": {
            "i": {
                "name": "Input Vector Polygon File",
                "flags": "i",
                "description": "Input vector polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ShapeComplexityIndex": {
        "name": "ShapeComplexityIndex",
        "Name": "Shapecomplexityindex",
        "category": "GIS Analysis",
        "label": "Shape Complexity Index",
        "description": "Calculates overall polygon shape complexity or irregularity.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/shape_complexity_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#ShapeComplexityIndex",
        "parameters": {
            "i": {
                "name": "Input Vector Polygon File",
                "flags": "i",
                "description": "Input vector polygon file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ShapeComplexityIndexRaster": {
        "name": "ShapeComplexityIndexRaster",
        "Name": "Shapecomplexityindexraster",
        "category": "GIS Analysis",
        "label": "Shape Complexity Index Raster",
        "description": "Calculates the complexity of raster polygons or classes.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/gis_analysis/shape_complexity_raster.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/gis_analysis.html#ShapeComplexityIndexRaster",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Aspect": {
        "name": "Aspect",
        "Name": "Aspect",
        "category": "Geomorphometric Analysis",
        "label": "Aspect",
        "description": "Calculates an aspect raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/aspect.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#Aspect",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "AssessRoute": {
        "name": "AssessRoute",
        "Name": "Assessroute",
        "category": "Geomorphometric Analysis",
        "label": "Assess Route",
        "description": "This tool assesses a route for slope, elevation, and visibility variation.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#AssessRoute",
        "parameters": {
            "routes": {
                "name": "Input Routes Vector",
                "flags": "routes",
                "description": "Name of the input routes vector file.",
                "parameter_type": {
                    "ExistingFile": "Vector"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "dem": {
                "name": "Input DEM Raster",
                "flags": "dem",
                "description": "Name of the input DEM raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output Lines",
                "flags": "output",
                "description": "Name of the output lines shapefile.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Lines"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "length": {
                "name": "Max Segment Length",
                "flags": "length",
                "description": "Maximum segment length (m).",
                "parameter_type": "Float",
                "default_value": "\"\"",
                "optional": "true,"
            },
            "dist": {
                "name": "Search Distance (grid cells)",
                "flags": "dist",
                "description": "Search distance, in grid cells, used in visibility analysis.",
                "parameter_type": "Integer",
                "default_value": "\"20\"",
                "optional": "true,"
            }
        }
    },
    "AverageNormalVectorAngularDeviation": {
        "name": "AverageNormalVectorAngularDeviation",
        "Name": "Averagenormalvectorangulardeviation",
        "category": "Geomorphometric Analysis",
        "label": "Average Normal Vector Angular Deviation",
        "description": "Calculates the circular variance of aspect at a scale for a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/average_normal_vector_angular_deviation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#AverageNormalVectorAngularDeviation",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Raster File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filter": {
                "name": "Filter Dimension",
                "flags": "filter",
                "description": "Size of the filter kernel.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "CircularVarianceOfAspect": {
        "name": "CircularVarianceOfAspect",
        "Name": "Circularvarianceofaspect",
        "category": "Geomorphometric Analysis",
        "label": "Circular Variance Of Aspect",
        "description": "Calculates the circular variance of aspect at a scale for a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/circular_variance_of_aspect.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#CircularVarianceOfAspect",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Raster File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filter": {
                "name": "Filter Dimension",
                "flags": "filter",
                "description": "Size of the filter kernel.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "ContoursFromPoints": {
        "name": "ContoursFromPoints",
        "Name": "Contoursfrompoints",
        "category": "Geomorphometric Analysis",
        "label": "Contours From Points",
        "description": "Creates a contour coverage from a set of input points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/contours_from_points.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#ContoursFromPoints",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "true"
            },
            "use_z": {
                "name": "Use Shapefile 'z' values?",
                "flags": "use_z",
                "description": "Use the 'z' dimension of the Shapefile's geometry instead of an attribute field?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "output": {
                "name": "Output Vector Lines File",
                "flags": "output",
                "description": "Output vector lines file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "max_triangle_edge_length": {
                "name": "Maximum Triangle Edge Length",
                "flags": "max_triangle_edge_length",
                "description": "Optional maximum triangle edge length; triangles larger than this size will not be gridded.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "interval": {
                "name": "Contour Interval",
                "flags": "interval",
                "description": "Contour interval.",
                "parameter_type": "Float",
                "default_value": "\"10.0\"",
                "optional": "false"
            },
            "base": {
                "name": "Base Contour",
                "flags": "base",
                "description": "Base contour height.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            },
            "smooth": {
                "name": "Smoothing Filter Size",
                "flags": "smooth",
                "description": "Smoothing filter size (in num. points), e.g. 3, 5, 7, 9, 11...",
                "parameter_type": "Integer",
                "default_value": "\"5\"",
                "optional": "true"
            }
        }
    },
    "ContoursFromRaster": {
        "name": "ContoursFromRaster",
        "Name": "Contoursfromraster",
        "category": "Geomorphometric Analysis",
        "label": "Contours From Raster",
        "description": "Derives a vector contour coverage from a raster surface.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/contours_from_raster.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#ContoursFromRaster",
        "parameters": {
            "i": {
                "name": "Input Raster Surface File",
                "flags": "i",
                "description": "Input surface raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Contour File",
                "flags": "output",
                "description": "Output vector contour file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "interval": {
                "name": "Contour Interval",
                "flags": "interval",
                "description": "Contour interval.",
                "parameter_type": "Float",
                "default_value": "\"10.0\"",
                "optional": "false"
            },
            "base": {
                "name": "Base Contour",
                "flags": "base",
                "description": "Base contour height.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            },
            "smooth": {
                "name": "Smoothing Filter Size",
                "flags": "smooth",
                "description": "Smoothing filter size (in num. points), e.g. 3, 5, 7, 9, 11...",
                "parameter_type": "Integer",
                "default_value": "\"9\"",
                "optional": "true"
            },
            "tolerance": {
                "name": "Tolerance",
                "flags": "tolerance",
                "description": "Tolerance factor, in degrees (0-45); determines generalization level.",
                "parameter_type": "Float",
                "default_value": "\"10.0\"",
                "optional": "true"
            }
        }
    },
    "DevFromMeanElev": {
        "name": "DevFromMeanElev",
        "Name": "Devfrommeanelev",
        "category": "Geomorphometric Analysis",
        "label": "Dev From Mean Elev",
        "description": "Calculates deviation from mean elevation.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/dev_from_mean_elev.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#DevFromMeanElev",
        "parameters": {
            "dem": {
                "name": "Input File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "DiffFromMeanElev": {
        "name": "DiffFromMeanElev",
        "Name": "Difffrommeanelev",
        "category": "Geomorphometric Analysis",
        "label": "Diff From Mean Elev",
        "description": "Calculates difference from mean elevation (equivalent to a high-pass filter).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/diff_from_mean_elev.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#DiffFromMeanElev",
        "parameters": {
            "dem": {
                "name": "Input File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "DirectionalRelief": {
        "name": "DirectionalRelief",
        "Name": "Directionalrelief",
        "category": "Geomorphometric Analysis",
        "label": "Directional Relief",
        "description": "Calculates relief for cells in an input DEM for a specified direction.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/directional_relief.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#DirectionalRelief",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "azimuth": {
                "name": "Azimuth",
                "flags": "azimuth",
                "description": "Wind azimuth in degrees.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "false"
            },
            "max_dist": {
                "name": "Maximum Search Distance",
                "flags": "max_dist",
                "description": "Optional maximum search distance (unspecified if none; in xy units).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "DownslopeIndex": {
        "name": "DownslopeIndex",
        "Name": "Downslopeindex",
        "category": "Geomorphometric Analysis",
        "label": "Downslope Index",
        "description": "Calculates the Hjerdt et al. (2004) downslope index.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/downslope_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#DownslopeIndex",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "drop": {
                "name": "Verical Drop",
                "flags": "drop",
                "description": "Vertical drop value (default is 2.0).",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "false"
            },
            "out_type": {
                "name": "Output Type",
                "flags": "out_type",
                "description": "Output type, options include 'tangent', 'degrees', 'radians', 'distance' (default is 'tangent').",
                "parameter_type": {
                    "OptionList": [
                        "tangent",
                        "degrees",
                        "radians",
                        "distance"
                    ]
                },
                "default_value": "\"tangent\"",
                "optional": "true"
            }
        }
    },
    "EdgeDensity": {
        "name": "EdgeDensity",
        "Name": "Edgedensity",
        "category": "Geomorphometric Analysis",
        "label": "Edge Density",
        "description": "Calculates the density of edges, or breaks-in-slope within DEMs.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/edge_density.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#EdgeDensity",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filter": {
                "name": "Filter Size",
                "flags": "filter",
                "description": "Size of the filter kernel.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "norm_diff": {
                "name": "Normal Difference Threshold",
                "flags": "norm_diff",
                "description": "Maximum difference in normal vectors, in degrees.",
                "parameter_type": "Float",
                "default_value": "\"5.0\"",
                "optional": "true"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "ElevAbovePit": {
        "name": "ElevAbovePit",
        "Name": "Elevabovepit",
        "category": "Geomorphometric Analysis",
        "label": "Elev Above Pit",
        "description": "Calculate the elevation of each grid cell above the nearest downstream pit cell or grid edge cell.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/elev_above_pit.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#ElevAbovePit",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ElevPercentile": {
        "name": "ElevPercentile",
        "Name": "Elevpercentile",
        "category": "Geomorphometric Analysis",
        "label": "Elev Percentile",
        "description": "Calculates the elevation percentile raster from a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/elev_percentile.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#ElevPercentile",
        "parameters": {
            "dem": {
                "name": "Input File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "sig_digits": {
                "name": "Number of Significant Digits",
                "flags": "sig_digits",
                "description": "Number of significant digits.",
                "parameter_type": "Integer",
                "default_value": "\"2\"",
                "optional": "true"
            }
        }
    },
    "ElevRelativeToMinMax": {
        "name": "ElevRelativeToMinMax",
        "Name": "Elevrelativetominmax",
        "category": "Geomorphometric Analysis",
        "label": "Elev Relative To Min Max",
        "description": "Calculates the elevation of a location relative to the minimum and maximum elevations in a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/elev_relative_to_min_max.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#ElevRelativeToMinMax",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ElevRelativeToWatershedMinMax": {
        "name": "ElevRelativeToWatershedMinMax",
        "Name": "Elevrelativetowatershedminmax",
        "category": "Geomorphometric Analysis",
        "label": "Elev Relative To Watershed Min Max",
        "description": "Calculates the elevation of a location relative to the minimum and maximum elevations in a watershed.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/elev_relative_to_watershed_min_max.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#ElevRelativeToWatershedMinMax",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "watersheds": {
                "name": "Input Watersheds File",
                "flags": "watersheds",
                "description": "Input raster watersheds file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "EmbankmentMapping": {
        "name": "EmbankmentMapping",
        "Name": "Embankmentmapping",
        "category": "Geomorphometric Analysis",
        "label": "Embankment Mapping",
        "description": "Maps and/or removes road embankments from an input fine-resolution DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/embankment_mapping.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#EmbankmentMapping",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "road_vec": {
                "name": "Input Vector Transportation Line File",
                "flags": "road_vec",
                "description": "Input vector polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "search_dist": {
                "name": "Search Distance (in map units)",
                "flags": "search_dist",
                "description": "Search distance used to reposition transportation vectors onto road embankments (in map units).",
                "parameter_type": "Float",
                "default_value": "\"2.5\"",
                "optional": "false"
            },
            "min_road_width": {
                "name": "Minimum Road Width (in map units)",
                "flags": "min_road_width",
                "description": "Minimum road width; this is the width of the paved road surface (in map units).",
                "parameter_type": "Float",
                "default_value": "\"6.0\"",
                "optional": "false"
            },
            "typical_width": {
                "name": "Typical Embankment Width (in map units)",
                "flags": "typical_width",
                "description": "Typical embankment width; this is the maximum width of an embankment with roadside ditches (in map units).",
                "parameter_type": "Float",
                "default_value": "\"30.0\"",
                "optional": "false"
            },
            "max_height": {
                "name": "Typical Embankment Max Height (in map units)",
                "flags": "max_height",
                "description": "Typical embankment maximum height; this is the height a typical embankment with roadside ditches (in map units).",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "false"
            },
            "max_width": {
                "name": "Embankment Max Width (in map units)",
                "flags": "max_width",
                "description": "Maximum embankment width, typically where embankments traverse steep-sided valleys (in map units).",
                "parameter_type": "Float",
                "default_value": "\"60.0\"",
                "optional": "false"
            },
            "max_increment": {
                "name": "Max Upwards Increment (in elevation units)",
                "flags": "max_increment",
                "description": "Maximum upwards increment between neighbouring cells on an embankment (in elevation units).",
                "parameter_type": "Float",
                "default_value": "\"0.05\"",
                "optional": "false"
            },
            "spillout_slope": {
                "name": "Spillout Slope (in map units)",
                "flags": "spillout_slope",
                "description": "Spillout slope (in degrees).",
                "parameter_type": "Float",
                "default_value": "\"4.0\"",
                "optional": "false"
            },
            "remove_embankments": {
                "name": "Remove mapped embankments?",
                "flags": "remove_embankments",
                "description": "Optional flag indicating whether to output a DEM with embankments removed (true) or an embankment raster map (false).",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "FeaturePreservingSmoothing": {
        "name": "FeaturePreservingSmoothing",
        "Name": "Featurepreservingsmoothing",
        "category": "Geomorphometric Analysis",
        "label": "Feature Preserving Smoothing",
        "description": "Reduces short-scale variation in an input DEM using a modified Sun et al. (2007) algorithm.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/feature_preserving_smoothing.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#FeaturePreservingSmoothing",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filter": {
                "name": "Filter Size",
                "flags": "filter",
                "description": "Size of the filter kernel.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "norm_diff": {
                "name": "Normal Difference Threshold",
                "flags": "norm_diff",
                "description": "Maximum difference in normal vectors, in degrees.",
                "parameter_type": "Float",
                "default_value": "\"15.0\"",
                "optional": "true"
            },
            "num_iter": {
                "name": "Iterations",
                "flags": "num_iter",
                "description": "Number of iterations.",
                "parameter_type": "Integer",
                "default_value": "\"3\"",
                "optional": "true"
            },
            "max_diff": {
                "name": "Maximum Elevation Change",
                "flags": "max_diff",
                "description": "Maximum allowable absolute elevation change.",
                "parameter_type": "Float",
                "default_value": "\"0.5\"",
                "optional": "true"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "FetchAnalysis": {
        "name": "FetchAnalysis",
        "Name": "Fetchanalysis",
        "category": "Geomorphometric Analysis",
        "label": "Fetch Analysis",
        "description": "Performs an analysis of fetch or upwind distance to an obstacle.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/fetch_analysis.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#FetchAnalysis",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "azimuth": {
                "name": "Azimuth (degrees)",
                "flags": "azimuth",
                "description": "Wind azimuth in degrees in degrees.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            },
            "hgt_inc": {
                "name": "Height Increment Value",
                "flags": "hgt_inc",
                "description": "Height increment value.",
                "parameter_type": "Float",
                "default_value": "\"0.05\"",
                "optional": "true"
            }
        }
    },
    "FillMissingData": {
        "name": "FillMissingData",
        "Name": "Fillmissingdata",
        "category": "Geomorphometric Analysis",
        "label": "Fill Missing Data",
        "description": "Fills NoData holes in a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/fill_missing_data.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#FillMissingData",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filter": {
                "name": "Filter Dimension",
                "flags": "filter",
                "description": "Filter size (cells).",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "false"
            },
            "weight": {
                "name": "IDW Weight (Exponent) Value",
                "flags": "weight",
                "description": "IDW weight value.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            },
            "no_edges": {
                "name": "Exclude edge-of-raster-connected NoData cells?",
                "flags": "no_edges",
                "description": "Optional flag indicating whether to exclude NoData cells in edge regions.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            }
        }
    },
    "FindRidges": {
        "name": "FindRidges",
        "Name": "Findridges",
        "category": "Geomorphometric Analysis",
        "label": "Find Ridges",
        "description": "Identifies potential ridge and peak grid cells.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/find_ridges.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#FindRidges",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "line_thin": {
                "name": "Perform line-thinning?",
                "flags": "line_thin",
                "description": "Optional flag indicating whether post-processing line-thinning should be performed.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            }
        }
    },
    "Hillshade": {
        "name": "Hillshade",
        "Name": "Hillshade",
        "category": "Geomorphometric Analysis",
        "label": "Hillshade",
        "description": "Calculates a hillshade raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/hillshade.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#Hillshade",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "azimuth": {
                "name": "Azimuth (degrees)",
                "flags": "azimuth",
                "description": "Illumination source azimuth in degrees.",
                "parameter_type": "Float",
                "default_value": "\"315.0\"",
                "optional": "true"
            },
            "altitude": {
                "name": "Altitude (degrees)",
                "flags": "altitude",
                "description": "Illumination source altitude in degrees.",
                "parameter_type": "Float",
                "default_value": "\"30.0\"",
                "optional": "true"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "HorizonAngle": {
        "name": "HorizonAngle",
        "Name": "Horizonangle",
        "category": "Geomorphometric Analysis",
        "label": "Horizon Angle",
        "description": "Calculates horizon angle (maximum upwind slope) for each grid cell in an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/horizon_angle.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#HorizonAngle",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "azimuth": {
                "name": "Azimuth",
                "flags": "azimuth",
                "description": "Azimuth, in degrees.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "false"
            },
            "max_dist": {
                "name": "Maximum Search Distance",
                "flags": "max_dist",
                "description": "Optional maximum search distance (unspecified if none; in xy units). Minimum value is 5 x cell size.",
                "parameter_type": "Float",
                "default_value": "\"100.0\"",
                "optional": "true"
            }
        }
    },
    "HypsometricAnalysis": {
        "name": "HypsometricAnalysis",
        "Name": "Hypsometricanalysis",
        "category": "Geomorphometric Analysis",
        "label": "Hypsometric Analysis",
        "description": "Calculates a hypsometric curve for one or more DEMs.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/hypsometric_analysis.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#HypsometricAnalysis",
        "parameters": {
            "inputs": {
                "name": "Input DEM Files",
                "flags": "inputs",
                "description": "Input DEM files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "watershed": {
                "name": "Input Watershed Files",
                "flags": "watershed",
                "description": "Input watershed files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file (default name will be based on input file if unspecified).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "HypsometricallyTintedHillshade": {
        "name": "HypsometricallyTintedHillshade",
        "Name": "Hypsometricallytintedhillshade",
        "category": "Geomorphometric Analysis",
        "label": "Hypsometrically Tinted Hillshade",
        "description": "Creates an colour shaded relief image from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/hypsometrically_tinted_hillshade.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#HypsometricallyTintedHillshade",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "altitude": {
                "name": "Illumination Source Altitude (degrees)",
                "flags": "altitude",
                "description": "Illumination source altitude in degrees.",
                "parameter_type": "Float",
                "default_value": "\"45.0\"",
                "optional": "true"
            },
            "hs_weight": {
                "name": "Hillshade Weight",
                "flags": "hs_weight",
                "description": "Weight given to hillshade relative to relief (0.0-1.0).",
                "parameter_type": "Float",
                "default_value": "\"0.5\"",
                "optional": "true"
            },
            "brightness": {
                "name": "Brightness",
                "flags": "brightness",
                "description": "Brightness factor (0.0-1.0).",
                "parameter_type": "Float",
                "default_value": "\"0.5\"",
                "optional": "true"
            },
            "atmospheric": {
                "name": "Atmospheric Effects",
                "flags": "atmospheric",
                "description": "Atmospheric effects weight (0.0-1.0).",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            },
            "palette": {
                "name": "Palette",
                "flags": "palette",
                "description": "Options include 'atlas', 'high_relief', 'arid', 'soft', 'muted', 'purple', 'viridi', 'gn_yl', 'pi_y_g', 'bl_yl_rd', and 'deep'.",
                "parameter_type": {
                    "OptionList": [
                        "atlas",
                        "high_relief",
                        "arid",
                        "soft",
                        "muted",
                        "purple",
                        "viridi",
                        "gn_yl",
                        "pi_y_g",
                        "bl_yl_rd",
                        "deep"
                    ]
                },
                "default_value": "\"atlas\"",
                "optional": "true"
            },
            "reverse": {
                "name": "Reverse palette?",
                "flags": "reverse",
                "description": "Optional flag indicating whether to use reverse the palette.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "full_mode": {
                "name": "Full 360-degree hillshade mode?",
                "flags": "full_mode",
                "description": "Optional flag indicating whether to use full 360-degrees of illumination sources.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "MapOffTerrainObjects": {
        "name": "MapOffTerrainObjects",
        "Name": "Mapoffterrainobjects",
        "category": "Geomorphometric Analysis",
        "label": "Map Off Terrain Objects",
        "description": "Maps off-terrain objects in a digital elevation model (DEM).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/map_otos.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MapOffTerrainObjects",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "max_slope": {
                "name": "Maximum Slope",
                "flags": "max_slope",
                "description": "Maximum inter-cell absolute slope.",
                "parameter_type": "Float",
                "default_value": "\"40.0\"",
                "optional": "false"
            },
            "min_size": {
                "name": "Minimum Feature Size",
                "flags": "min_size",
                "description": "Minimum feature size, in grid cells.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "false"
            }
        }
    },
    "MaxAnisotropyDev": {
        "name": "MaxAnisotropyDev",
        "Name": "Maxanisotropydev",
        "category": "Geomorphometric Analysis",
        "label": "Max Anisotropy Dev",
        "description": "Calculates the maximum anisotropy (directionality) in elevation deviation over a range of spatial scales.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/max_anisotropy_dev.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MaxAnisotropyDev",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_mag": {
                "name": "Output DEVmax Magnitude File",
                "flags": "out_mag",
                "description": "Output raster DEVmax magnitude file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_scale": {
                "name": "Output DEVmax Scale File",
                "flags": "out_scale",
                "description": "Output raster DEVmax scale file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "min_scale": {
                "name": "Minimum Search Neighbourhood Radius (grid cells)",
                "flags": "min_scale",
                "description": "Minimum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "\"3\"",
                "optional": "false"
            },
            "max_scale": {
                "name": "Maximum Search Neighbourhood Radius (grid cells)",
                "flags": "max_scale",
                "description": "Maximum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "step": {
                "name": "Step Size",
                "flags": "step",
                "description": "Step size as any positive non-zero integer.",
                "parameter_type": "Integer",
                "default_value": "\"2\"",
                "optional": "false"
            }
        }
    },
    "MaxAnisotropyDevSignature": {
        "name": "MaxAnisotropyDevSignature",
        "Name": "Maxanisotropydevsignature",
        "category": "Geomorphometric Analysis",
        "label": "Max Anisotropy Dev Signature",
        "description": "Calculates the anisotropy in deviation from mean for points over a range of spatial scales.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/max_anisotropy_dev_signature.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MaxAnisotropyDevSignature",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "points": {
                "name": "Input Vector Points File",
                "flags": "points",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "min_scale": {
                "name": "Minimum Search Neighbourhood Radius (grid cells)",
                "flags": "min_scale",
                "description": "Minimum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            },
            "max_scale": {
                "name": "Maximum Search Neighbourhood Radius (grid cells)",
                "flags": "max_scale",
                "description": "Maximum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "step": {
                "name": "Step Size",
                "flags": "step",
                "description": "Step size as any positive non-zero integer.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            }
        }
    },
    "MaxBranchLength": {
        "name": "MaxBranchLength",
        "Name": "Maxbranchlength",
        "category": "Geomorphometric Analysis",
        "label": "Max Branch Length",
        "description": "Lindsay and Seibert's (2013) branch length index is used to map drainage divides or ridge lines.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/max_branch_length.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MaxBranchLength",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "log": {
                "name": "Log-transform the output?",
                "flags": "log",
                "description": "Optional flag to request the output be log-transformed.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "MaxDifferenceFromMean": {
        "name": "MaxDifferenceFromMean",
        "Name": "Maxdifferencefrommean",
        "category": "Geomorphometric Analysis",
        "label": "Max Difference From Mean",
        "description": "Calculates the maximum difference from mean elevation over a range of spatial scales.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/max_diff_from_mean.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MaxDifferenceFromMean",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_mag": {
                "name": "Output DIFFmax Magnitude File",
                "flags": "out_mag",
                "description": "Output raster DIFFmax magnitude file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_scale": {
                "name": "Output DIFFmax Scale File",
                "flags": "out_scale",
                "description": "Output raster DIFFmax scale file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "min_scale": {
                "name": "Minimum Search Neighbourhood Radius (grid cells)",
                "flags": "min_scale",
                "description": "Minimum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "max_scale": {
                "name": "Maximum Search Neighbourhood Radius (grid cells)",
                "flags": "max_scale",
                "description": "Maximum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "step": {
                "name": "Step Size",
                "flags": "step",
                "description": "Step size as any positive non-zero integer.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "false"
            }
        }
    },
    "MaxDownslopeElevChange": {
        "name": "MaxDownslopeElevChange",
        "Name": "Maxdownslopeelevchange",
        "category": "Geomorphometric Analysis",
        "label": "Max Downslope Elev Change",
        "description": "Calculates the maximum downslope change in elevation between a grid cell and its eight downslope neighbors.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/max_downslope_elev_change.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MaxDownslopeElevChange",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "MaxElevDevSignature": {
        "name": "MaxElevDevSignature",
        "Name": "Maxelevdevsignature",
        "category": "Geomorphometric Analysis",
        "label": "Max Elev Dev Signature",
        "description": "Calculates the maximum elevation deviation over a range of spatial scales and for a set of points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/max_elev_dev_signature.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MaxElevDevSignature",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "points": {
                "name": "Input Vector Points File",
                "flags": "points",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "min_scale": {
                "name": "Minimum Search Neighbourhood Radius (grid cells)",
                "flags": "min_scale",
                "description": "Minimum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "max_scale": {
                "name": "Maximum Search Neighbourhood Radius (grid cells)",
                "flags": "max_scale",
                "description": "Maximum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "step": {
                "name": "Step Size",
                "flags": "step",
                "description": "Step size as any positive non-zero integer.",
                "parameter_type": "Integer",
                "default_value": "\"10\"",
                "optional": "false"
            }
        }
    },
    "MaxElevationDeviation": {
        "name": "MaxElevationDeviation",
        "Name": "Maxelevationdeviation",
        "category": "Geomorphometric Analysis",
        "label": "Max Elevation Deviation",
        "description": "Calculates the maximum elevation deviation over a range of spatial scales.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/max_elev_deviation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MaxElevationDeviation",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_mag": {
                "name": "Output DEVmax Magnitude File",
                "flags": "out_mag",
                "description": "Output raster DEVmax magnitude file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_scale": {
                "name": "Output DEVmax Scale File",
                "flags": "out_scale",
                "description": "Output raster DEVmax scale file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "min_scale": {
                "name": "Minimum Search Neighbourhood Radius (grid cells)",
                "flags": "min_scale",
                "description": "Minimum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "max_scale": {
                "name": "Maximum Search Neighbourhood Radius (grid cells)",
                "flags": "max_scale",
                "description": "Maximum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "step": {
                "name": "Step Size",
                "flags": "step",
                "description": "Step size as any positive non-zero integer.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "false"
            }
        }
    },
    "MinDownslopeElevChange": {
        "name": "MinDownslopeElevChange",
        "Name": "Mindownslopeelevchange",
        "category": "Geomorphometric Analysis",
        "label": "Min Downslope Elev Change",
        "description": "Calculates the minimum downslope change in elevation between a grid cell and its eight downslope neighbors.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/min_downslope_elev_change.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MinDownslopeElevChange",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "MultidirectionalHillshade": {
        "name": "MultidirectionalHillshade",
        "Name": "Multidirectionalhillshade",
        "category": "Geomorphometric Analysis",
        "label": "Multidirectional Hillshade",
        "description": "Calculates a multi-direction hillshade raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/multidirectional_hillshade.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MultidirectionalHillshade",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "altitude": {
                "name": "Altitude (degrees)",
                "flags": "altitude",
                "description": "Illumination source altitude in degrees.",
                "parameter_type": "Float",
                "default_value": "\"45.0\"",
                "optional": "true"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "full_mode": {
                "name": "Full 360-degree mode?",
                "flags": "full_mode",
                "description": "Optional flag indicating whether to use full 360-degrees of illumination sources.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "MultiscaleElevationPercentile": {
        "name": "MultiscaleElevationPercentile",
        "Name": "Multiscaleelevationpercentile",
        "category": "Geomorphometric Analysis",
        "label": "Multiscale Elevation Percentile",
        "description": "Calculates surface roughness over a range of spatial scales.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/multiscale_elev_percentile.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MultiscaleElevationPercentile",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_mag": {
                "name": "Output Roughness Magnitude File",
                "flags": "out_mag",
                "description": "Output raster roughness magnitude file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_scale": {
                "name": "Output Roughness Scale File",
                "flags": "out_scale",
                "description": "Output raster roughness scale file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "sig_digits": {
                "name": "Number of Significant Digits",
                "flags": "sig_digits",
                "description": "Number of significant digits.",
                "parameter_type": "Integer",
                "default_value": "\"3\"",
                "optional": "true"
            },
            "min_scale": {
                "name": "Minimum Search Neighbourhood Radius (grid cells)",
                "flags": "min_scale",
                "description": "Minimum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "\"4\"",
                "optional": "true"
            },
            "step": {
                "name": "Base Step Size",
                "flags": "step",
                "description": "Step size as any positive non-zero integer.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            },
            "num_steps": {
                "name": "Number of Steps",
                "flags": "num_steps",
                "description": "Number of steps",
                "parameter_type": "Integer",
                "default_value": "\"10\"",
                "optional": "true"
            },
            "step_nonlinearity": {
                "name": "Step Nonlinearity",
                "flags": "step_nonlinearity",
                "description": "Step nonlinearity factor (1.0-2.0 is typical)",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            }
        }
    },
    "MultiscaleRoughness": {
        "name": "MultiscaleRoughness",
        "Name": "Multiscaleroughness",
        "category": "Geomorphometric Analysis",
        "label": "Multiscale Roughness",
        "description": "Calculates surface roughness over a range of spatial scales.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/multiscale_roughness.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MultiscaleRoughness",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_mag": {
                "name": "Output Roughness Magnitude File",
                "flags": "out_mag",
                "description": "Output raster roughness magnitude file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_scale": {
                "name": "Output Roughness Scale File",
                "flags": "out_scale",
                "description": "Output raster roughness scale file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "min_scale": {
                "name": "Minimum Search Neighbourhood Radius (grid cells)",
                "flags": "min_scale",
                "description": "Minimum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            },
            "max_scale": {
                "name": "Maximum Search Neighbourhood Radius (grid cells)",
                "flags": "max_scale",
                "description": "Maximum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "step": {
                "name": "Step Size",
                "flags": "step",
                "description": "Step size as any positive non-zero integer.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            }
        }
    },
    "MultiscaleRoughnessSignature": {
        "name": "MultiscaleRoughnessSignature",
        "Name": "Multiscaleroughnesssignature",
        "category": "Geomorphometric Analysis",
        "label": "Multiscale Roughness Signature",
        "description": "Calculates the surface roughness for points over a range of spatial scales.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/multiscale_roughness_signature.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MultiscaleRoughnessSignature",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "points": {
                "name": "Input Vector Points File",
                "flags": "points",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "min_scale": {
                "name": "Minimum Search Neighbourhood Radius (grid cells)",
                "flags": "min_scale",
                "description": "Minimum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            },
            "max_scale": {
                "name": "Maximum Search Neighbourhood Radius (grid cells)",
                "flags": "max_scale",
                "description": "Maximum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "step": {
                "name": "Step Size",
                "flags": "step",
                "description": "Step size as any positive non-zero integer.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            }
        }
    },
    "MultiscaleStdDevNormals": {
        "name": "MultiscaleStdDevNormals",
        "Name": "Multiscalestddevnormals",
        "category": "Geomorphometric Analysis",
        "label": "Multiscale Std Dev Normals",
        "description": "Calculates surface roughness over a range of spatial scales.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/multiscale_std_dev_normals.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MultiscaleStdDevNormals",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_mag": {
                "name": "Output Roughness Magnitude File",
                "flags": "out_mag",
                "description": "Output raster roughness magnitude file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_scale": {
                "name": "Output Roughness Scale File",
                "flags": "out_scale",
                "description": "Output raster roughness scale file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "min_scale": {
                "name": "Minimum Search Neighbourhood Radius (grid cells)",
                "flags": "min_scale",
                "description": "Minimum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            },
            "step": {
                "name": "Base Step Size",
                "flags": "step",
                "description": "Step size as any positive non-zero integer.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            },
            "num_steps": {
                "name": "Number of Steps",
                "flags": "num_steps",
                "description": "Number of steps",
                "parameter_type": "Integer",
                "default_value": "\"10\"",
                "optional": "false"
            },
            "step_nonlinearity": {
                "name": "Step Nonlinearity",
                "flags": "step_nonlinearity",
                "description": "Step nonlinearity factor (1.0-2.0 is typical)",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "false"
            }
        }
    },
    "MultiscaleStdDevNormalsSignature": {
        "name": "MultiscaleStdDevNormalsSignature",
        "Name": "Multiscalestddevnormalssignature",
        "category": "Geomorphometric Analysis",
        "label": "Multiscale Std Dev Normals Signature",
        "description": "Calculates the surface roughness for points over a range of spatial scales.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/multiscale_std_dev_normals_signature.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MultiscaleStdDevNormalsSignature",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "points": {
                "name": "Input Vector Points File",
                "flags": "points",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "min_scale": {
                "name": "Minimum Search Neighbourhood Radius (grid cells)",
                "flags": "min_scale",
                "description": "Minimum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            },
            "step": {
                "name": "Base Step Size",
                "flags": "step",
                "description": "Step size as any positive non-zero integer.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            },
            "num_steps": {
                "name": "Number of Steps",
                "flags": "num_steps",
                "description": "Number of steps",
                "parameter_type": "Integer",
                "default_value": "\"10\"",
                "optional": "false"
            },
            "step_nonlinearity": {
                "name": "Step Nonlinearity",
                "flags": "step_nonlinearity",
                "description": "Step nonlinearity factor (1.0-2.0 is typical)",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "false"
            }
        }
    },
    "MultiscaleTopographicPositionImage": {
        "name": "MultiscaleTopographicPositionImage",
        "Name": "Multiscaletopographicpositionimage",
        "category": "Geomorphometric Analysis",
        "label": "Multiscale Topographic Position Image",
        "description": "Creates a multiscale topographic position image from three DEVmax rasters of differing spatial scale ranges.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/multiscale_topographic_position_image.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#MultiscaleTopographicPositionImage",
        "parameters": {
            "local": {
                "name": "Input Local-Scale File",
                "flags": "local",
                "description": "Input local-scale topographic position (DEVmax) raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "meso": {
                "name": "Input Meso-Scale File",
                "flags": "meso",
                "description": "Input meso-scale topographic position (DEVmax) raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "broad": {
                "name": "Input Broad-Scale File",
                "flags": "broad",
                "description": "Input broad-scale topographic position (DEVmax) raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "lightness": {
                "name": "Image Lightness Value",
                "flags": "lightness",
                "description": "Image lightness value (default is 1.2).",
                "parameter_type": "Float",
                "default_value": "\"1.2\"",
                "optional": "true"
            }
        }
    },
    "NumDownslopeNeighbours": {
        "name": "NumDownslopeNeighbours",
        "Name": "Numdownslopeneighbours",
        "category": "Geomorphometric Analysis",
        "label": "Num Downslope Neighbours",
        "description": "Calculates the number of downslope neighbours to each grid cell in a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/num_downslope_neighbours.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#NumDownslopeNeighbours",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "NumUpslopeNeighbours": {
        "name": "NumUpslopeNeighbours",
        "Name": "Numupslopeneighbours",
        "category": "Geomorphometric Analysis",
        "label": "Num Upslope Neighbours",
        "description": "Calculates the number of upslope neighbours to each grid cell in a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/num_upslope_neighbours.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#NumUpslopeNeighbours",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Openness": {
        "name": "Openness",
        "Name": "Openness",
        "category": "Geomorphometric Analysis",
        "label": "Openness",
        "description": "This tool calculates the topographic openness index from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#Openness",
        "parameters": {
            "i": {
                "name": "Input Raster Image",
                "flags": "i",
                "description": "Name of the input raster image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "pos_output": {
                "name": "Positive Openness Output Raster",
                "flags": "pos_output",
                "description": "Name of the positive openenness output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "neg_output": {
                "name": "Negative Openness Output Raster",
                "flags": "neg_output",
                "description": "Name of the negative openenness output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "dist": {
                "name": "Search Distance (grid cells)",
                "flags": "dist",
                "description": "Search distance, in grid cells.",
                "parameter_type": "Integer",
                "default_value": "\"20\"",
                "optional": "true,"
            }
        }
    },
    "PennockLandformClass": {
        "name": "PennockLandformClass",
        "Name": "Pennocklandformclass",
        "category": "Geomorphometric Analysis",
        "label": "Pennock Landform Class",
        "description": "Classifies hillslope zones based on slope, profile curvature, and plan curvature.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/pennock_landform_class.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#PennockLandformClass",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "slope": {
                "name": "Slope Threshold (degrees)",
                "flags": "slope",
                "description": "Slope threshold value, in degrees (default is 3.0)",
                "parameter_type": "Float",
                "default_value": "\"3.0\"",
                "optional": "false"
            },
            "prof": {
                "name": "Profile Curvature Threshold",
                "flags": "prof",
                "description": "Profile curvature threshold value (default is 0.1)",
                "parameter_type": "Float",
                "default_value": "\"0.1\"",
                "optional": "false"
            },
            "plan": {
                "name": "Plan Curvature Threshold",
                "flags": "plan",
                "description": "Plan curvature threshold value (default is 0.0).",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "false"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "PercentElevRange": {
        "name": "PercentElevRange",
        "Name": "Percentelevrange",
        "category": "Geomorphometric Analysis",
        "label": "Percent Elev Range",
        "description": "Calculates percent of elevation range from a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/percent_elev_range.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#PercentElevRange",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"3\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"3\"",
                "optional": "true"
            }
        }
    },
    "PlanCurvature": {
        "name": "PlanCurvature",
        "Name": "Plancurvature",
        "category": "Geomorphometric Analysis",
        "label": "Plan Curvature",
        "description": "Calculates a plan (contour) curvature raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/plan_curvature.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#PlanCurvature",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "Profile": {
        "name": "Profile",
        "Name": "Profile",
        "category": "Geomorphometric Analysis",
        "label": "Profile",
        "description": "Plots profiles from digital surface models.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/profile.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#Profile",
        "parameters": {
            "lines": {
                "name": "Input Vector Line File",
                "flags": "lines",
                "description": "Input vector line file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "surface": {
                "name": "Input Surface File",
                "flags": "surface",
                "description": "Input raster surface file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ProfileCurvature": {
        "name": "ProfileCurvature",
        "Name": "Profilecurvature",
        "category": "Geomorphometric Analysis",
        "label": "Profile Curvature",
        "description": "Calculates a profile curvature raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/prof_curvature.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#ProfileCurvature",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "RelativeAspect": {
        "name": "RelativeAspect",
        "Name": "Relativeaspect",
        "category": "Geomorphometric Analysis",
        "label": "Relative Aspect",
        "description": "Calculates relative aspect (relative to a user-specified direction) from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/relative_aspect.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#RelativeAspect",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "azimuth": {
                "name": "Azimuth",
                "flags": "azimuth",
                "description": "Illumination source azimuth.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "false"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "RelativeTopographicPosition": {
        "name": "RelativeTopographicPosition",
        "Name": "Relativetopographicposition",
        "category": "Geomorphometric Analysis",
        "label": "Relative Topographic Position",
        "description": "Calculates the relative topographic position index from a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/relative_topographic_position.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#RelativeTopographicPosition",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "RemoveOffTerrainObjects": {
        "name": "RemoveOffTerrainObjects",
        "Name": "Removeoffterrainobjects",
        "category": "Geomorphometric Analysis",
        "label": "Remove Off Terrain Objects",
        "description": "Removes off-terrain objects from a raster digital elevation model (DEM).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/remove_off_terrain_objects.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#RemoveOffTerrainObjects",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filter": {
                "name": "Filter Dimension",
                "flags": "filter",
                "description": "Filter size (cells).",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "false"
            },
            "slope": {
                "name": "Slope Threshold",
                "flags": "slope",
                "description": "Slope threshold value.",
                "parameter_type": "Float",
                "default_value": "\"15.0\"",
                "optional": "false"
            }
        }
    },
    "RuggednessIndex": {
        "name": "RuggednessIndex",
        "Name": "Ruggednessindex",
        "category": "Geomorphometric Analysis",
        "label": "Ruggedness Index",
        "description": "Calculates the Riley et al.'s (1999) terrain ruggedness index from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/ruggedness_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#RuggednessIndex",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "SedimentTransportIndex": {
        "name": "SedimentTransportIndex",
        "Name": "Sedimenttransportindex",
        "category": "Geomorphometric Analysis",
        "label": "Sediment Transport Index",
        "description": "Calculates the sediment transport index.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/sediment_transport_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#SedimentTransportIndex",
        "parameters": {
            "sca": {
                "name": "Input Specific Contributing Area (SCA) File",
                "flags": "sca",
                "description": "Input raster specific contributing area (SCA) file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "slope": {
                "name": "Input Slope File",
                "flags": "slope",
                "description": "Input raster slope file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "sca_exponent": {
                "name": "Specific Contributing Area (SCA) Exponent",
                "flags": "sca_exponent",
                "description": "SCA exponent value.",
                "parameter_type": "Float",
                "default_value": "\"0.4\"",
                "optional": "false"
            },
            "slope_exponent": {
                "name": "Slope Exponent",
                "flags": "slope_exponent",
                "description": "Slope exponent value.",
                "parameter_type": "Float",
                "default_value": "\"1.3\"",
                "optional": "false"
            }
        }
    },
    "ShadowAnimation": {
        "name": "ShadowAnimation",
        "Name": "Shadowanimation",
        "category": "Geomorphometric Analysis",
        "label": "Shadow Animation",
        "description": "This tool creates an animated GIF of shadows based on an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#ShadowAnimation",
        "parameters": {
            "i": {
                "name": "Input Digital Surface Model (DSM) Raster",
                "flags": "i",
                "description": "Name of the input digital surface model (DSM) raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "palette": {
                "name": "DSM Palette",
                "flags": "palette",
                "description": "DSM image palette; options are 'atlas', 'high_relief', 'arid', 'soft', 'muted', 'light_quant', 'purple', 'viridi', 'gn_yl', 'pi_y_g', 'bl_yl_rd', 'deep', and 'none'.",
                "parameter_type": {
                    "OptionList": [
                        "atlas",
                        "high_relief",
                        "arid",
                        "soft",
                        "muted",
                        "light_quant",
                        "purple",
                        "viridi",
                        "gn_yl",
                        "pi_y_g",
                        "bl_yl_rd",
                        "deep",
                        "none"
                    ]
                },
                "default_value": "\"atlas\"",
                "optional": "true,"
            },
            "output": {
                "name": "Output File (*.html)",
                "flags": "output",
                "description": "Name of the output HTML file (*.html).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "max_dist": {
                "name": "Maximum Search Distance (grid cells)",
                "flags": "max_dist",
                "description": "Optional maximum search distance. Minimum value is 5 x cell size.",
                "parameter_type": "Integer",
                "default_value": "\"\"",
                "optional": "true,"
            },
            "date": {
                "name": "Date (DD/MM/YYYY)",
                "flags": "date",
                "description": "Date in format DD/MM/YYYY.",
                "parameter_type": "String",
                "default_value": "\"21/06/2021\"",
                "optional": "true,"
            },
            "interval": {
                "name": "Time Interval (in minutes)",
                "flags": "interval",
                "description": "Time interval, in minutes (1-60).",
                "parameter_type": "Integer",
                "default_value": "\"15\"",
                "optional": "true,"
            },
            "location": {
                "name": "Lat/Long/UTC-offset (e.g. 43.5448/-80.2482/-4)",
                "flags": "location",
                "description": "Location, defined as Lat/Long/UTC-offset (e.g. 43.5448/-80.2482/-4).",
                "parameter_type": "String",
                "default_value": "\"43.5448/-80.2482/-4\"",
                "optional": "true,"
            },
            "height": {
                "name": "Image Height (in pixels)",
                "flags": "height",
                "description": "Image height, in pixels.",
                "parameter_type": "Integer",
                "default_value": "\"600\"",
                "optional": "true,"
            },
            "delay": {
                "name": "Delay (in milliseconds)",
                "flags": "delay",
                "description": "GIF time delay in milliseconds.",
                "parameter_type": "Integer",
                "default_value": "\"250\"",
                "optional": "true,"
            },
            "label": {
                "name": "Label text (blank for none)",
                "flags": "label",
                "description": "Label text (leave blank for none)",
                "parameter_type": "String",
                "default_value": "\"\"",
                "optional": "true,"
            }
        }
    },
    "Slope": {
        "name": "Slope",
        "Name": "Slope",
        "category": "Geomorphometric Analysis",
        "label": "Slope",
        "description": "Calculates a slope raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/slope.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#Slope",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "units": {
                "name": "Units",
                "flags": "units",
                "description": "Units of output raster; options include 'degrees', 'radians', 'percent'",
                "parameter_type": {
                    "OptionList": [
                        "degrees",
                        "radians",
                        "percent"
                    ]
                },
                "default_value": "\"degrees\"",
                "optional": "true"
            }
        }
    },
    "SlopeVsElevationPlot": {
        "name": "SlopeVsElevationPlot",
        "Name": "Slopevselevationplot",
        "category": "Geomorphometric Analysis",
        "label": "Slope Vs Elevation Plot",
        "description": "Creates a slope vs. elevation plot for one or more DEMs.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/slope_vs_elev_plot.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#SlopeVsElevationPlot",
        "parameters": {
            "inputs": {
                "name": "Input DEM Files",
                "flags": "inputs",
                "description": "Input DEM files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "watershed": {
                "name": "Input Watershed Files",
                "flags": "watershed",
                "description": "Input watershed files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file (default name will be based on input file if unspecified).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "SmoothVegetationResidual": {
        "name": "SmoothVegetationResidual",
        "Name": "Smoothvegetationresidual",
        "category": "Geomorphometric Analysis",
        "label": "Smooth Vegetation Residual",
        "description": "This tool can smooth the residual roughness due to vegetation cover in LiDAR DEMs.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#SmoothVegetationResidual",
        "parameters": {
            "i": {
                "name": "Input Digital Elevation Model (DEM) Raster",
                "flags": "i",
                "description": "Name of the input digital elevation model (DEM) raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output Raster File",
                "flags": "output",
                "description": "Name of the output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "max_scale": {
                "name": "Maximum Search Neighbourhood Radius (grid cells)",
                "flags": "max_scale",
                "description": "Maximum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "\"30\"",
                "optional": "true,"
            },
            "dev_threshold": {
                "name": "DEVmax Threshold",
                "flags": "dev_threshold",
                "description": "DEVmax Threshold.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true,"
            },
            "scale_threshold": {
                "name": "DEVmax Scale Threshold",
                "flags": "scale_threshold",
                "description": "DEVmax scale threshold",
                "parameter_type": "Integer",
                "default_value": "\"5\"",
                "optional": "true,"
            }
        }
    },
    "SphericalStdDevOfNormals": {
        "name": "SphericalStdDevOfNormals",
        "Name": "Sphericalstddevofnormals",
        "category": "Geomorphometric Analysis",
        "label": "Spherical Std Dev Of Normals",
        "description": "Calculates the spherical standard deviation of surface normals for a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/spherical_std_dev_of_normals.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#SphericalStdDevOfNormals",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Raster File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filter": {
                "name": "Filter Dimension",
                "flags": "filter",
                "description": "Size of the filter kernel.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "StandardDeviationOfSlope": {
        "name": "StandardDeviationOfSlope",
        "Name": "Standarddeviationofslope",
        "category": "Geomorphometric Analysis",
        "label": "Standard Deviation Of Slope",
        "description": "Calculates the standard deviation of slope from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/standard_deviation_of_slope.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#StandardDeviationOfSlope",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster DEM file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "StreamPowerIndex": {
        "name": "StreamPowerIndex",
        "Name": "Streampowerindex",
        "category": "Geomorphometric Analysis",
        "label": "Stream Power Index",
        "description": "Calculates the relative stream power index.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/relative_stream_power_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#StreamPowerIndex",
        "parameters": {
            "sca": {
                "name": "Input Specific Contributing Area (SCA) File",
                "flags": "sca",
                "description": "Input raster specific contributing area (SCA) file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "slope": {
                "name": "Input Slope File",
                "flags": "slope",
                "description": "Input raster slope file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "exponent": {
                "name": "Specific Contributing Area (SCA) Exponent",
                "flags": "exponent",
                "description": "SCA exponent value.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "false"
            }
        }
    },
    "SurfaceAreaRatio": {
        "name": "SurfaceAreaRatio",
        "Name": "Surfacearearatio",
        "category": "Geomorphometric Analysis",
        "label": "Surface Area Ratio",
        "description": "Calculates a the surface area ratio of each grid cell in an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/surface_area_ratio.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#SurfaceAreaRatio",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "TangentialCurvature": {
        "name": "TangentialCurvature",
        "Name": "Tangentialcurvature",
        "category": "Geomorphometric Analysis",
        "label": "Tangential Curvature",
        "description": "Calculates a tangential curvature raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/tan_curvature.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#TangentialCurvature",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "TimeInDaylight": {
        "name": "TimeInDaylight",
        "Name": "Timeindaylight",
        "category": "Geomorphometric Analysis",
        "label": "Time In Daylight",
        "description": "Calculates the proportion of time a location is not within an area of shadow.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/time_in_daylight.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#TimeInDaylight",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "az_fraction": {
                "name": "Azimuth Fraction",
                "flags": "az_fraction",
                "description": "Azimuth fraction in degrees.",
                "parameter_type": "Float",
                "default_value": "\"10.0\"",
                "optional": "false"
            },
            "max_dist": {
                "name": "Maximum Search Distance",
                "flags": "max_dist",
                "description": "Optional maximum search distance. Minimum value is 5 x cell size.",
                "parameter_type": "Float",
                "default_value": "\"100.0\"",
                "optional": "false"
            },
            "lat": {
                "name": "Centre Point Latitude",
                "flags": "lat",
                "description": "Centre point latitude.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "long": {
                "name": "Centre Point Longitude",
                "flags": "long",
                "description": "Centre point longitude.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "utc_offset": {
                "name": "UTC Offset (e.g. -04:00, +06:00)",
                "flags": "utc_offset",
                "description": "UTC time offset, in hours (e.g. -04:00, +06:00).",
                "parameter_type": "String",
                "default_value": "\"00:00\"",
                "optional": "true"
            },
            "start_day": {
                "name": "Start Day Of The Year (1-365)",
                "flags": "start_day",
                "description": "Start day of the year (1-365).",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            },
            "end_day": {
                "name": "End Day Of The Year (1-365)",
                "flags": "end_day",
                "description": "End day of the year (1-365).",
                "parameter_type": "Integer",
                "default_value": "\"365\"",
                "optional": "true"
            },
            "start_time": {
                "name": "Starting Hour (24-hour time: HH:MM:SS e.g. 05:00:00)",
                "flags": "start_time",
                "description": "Starting hour to track shadows (e.g. 5, 5:00, 05:00:00). Assumes 24-hour time: HH:MM:SS. 'sunrise' is also a valid time.",
                "parameter_type": "String",
                "default_value": "\"00:00:00\"",
                "optional": "true"
            },
            "end_time": {
                "name": "Ending Hour (24-hour time: HH:MM:SS e.g. 21:00:00)",
                "flags": "end_time",
                "description": "Starting hour to track shadows (e.g. 21, 21:00, 21:00:00). Assumes 24-hour time: HH:MM:SS. 'sunset' is also a valid time.",
                "parameter_type": "String",
                "default_value": "\"23:59:59\"",
                "optional": "true"
            }
        }
    },
    "TopographicPositionAnimation": {
        "name": "TopographicPositionAnimation",
        "Name": "Topographicpositionanimation",
        "category": "Geomorphometric Analysis",
        "label": "Topographic Position Animation",
        "description": "This tool creates an animated GIF of multi-scale local topographic position (elevation deviation).",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#TopographicPositionAnimation",
        "parameters": {
            "i": {
                "name": "Input Digital Elevation Model (DEM) Raster",
                "flags": "i",
                "description": "Name of the input digital elevation model (DEM) raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "palette": {
                "name": "Palette",
                "flags": "palette",
                "description": "Image palette; options are 'bl_yl_rd', 'bl_w_rd', 'purple', 'gn_yl', 'pi_y_g', and 'viridi'.",
                "parameter_type": {
                    "OptionList": [
                        "bl_yl_rd",
                        "bl_w_rd",
                        "purple",
                        "gn_yl",
                        "pi_y_g",
                        "viridi"
                    ]
                },
                "default_value": "\"bl_yl_rd\"",
                "optional": "true,"
            },
            "output": {
                "name": "Output File (*.html)",
                "flags": "output",
                "description": "Name of the output HTML file (*.html).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "min_scale": {
                "name": "Minimum Search Neighbourhood Radius (grid cells)",
                "flags": "min_scale",
                "description": "Minimum search neighbourhood radius in grid cells.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true,"
            },
            "num_steps": {
                "name": "Number of Steps",
                "flags": "num_steps",
                "description": "Number of steps.",
                "parameter_type": "Integer",
                "default_value": "\"100\"",
                "optional": "true,"
            },
            "step_nonlinearity": {
                "name": "Step Nonlinearity",
                "flags": "step_nonlinearity",
                "description": "Step nonlinearity factor (1.0-2.0 is typical)",
                "parameter_type": "Float",
                "default_value": "\"1.5\"",
                "optional": "true,"
            },
            "height": {
                "name": "Image Height (in pixels)",
                "flags": "height",
                "description": "Image height, in pixels.",
                "parameter_type": "Integer",
                "default_value": "\"600\"",
                "optional": "true,"
            },
            "delay": {
                "name": "Delay (in milliseconds)",
                "flags": "delay",
                "description": "GIF time delay in milliseconds.",
                "parameter_type": "Integer",
                "default_value": "\"250\"",
                "optional": "true,"
            },
            "label": {
                "name": "Label text (blank for none)",
                "flags": "label",
                "description": "Label text (leave blank for none)",
                "parameter_type": "String",
                "default_value": "\"\"",
                "optional": "true,"
            },
            "dev_max": {
                "name": "Use DEVmax for topo position?",
                "flags": "dev_max",
                "description": "Do you want to use DEVmax instead of DEV for measuring local topographic position?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true,"
            }
        }
    },
    "TotalCurvature": {
        "name": "TotalCurvature",
        "Name": "Totalcurvature",
        "category": "Geomorphometric Analysis",
        "label": "Total Curvature",
        "description": "Calculates a total curvature raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/total_curvature.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#TotalCurvature",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "zfactor": {
                "name": "Z Conversion Factor",
                "flags": "zfactor",
                "description": "Optional multiplier for when the vertical and horizontal units are not the same.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "Viewshed": {
        "name": "Viewshed",
        "Name": "Viewshed",
        "category": "Geomorphometric Analysis",
        "label": "Viewshed",
        "description": "Identifies the viewshed for a point or set of points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/viewshed.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#Viewshed",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "stations": {
                "name": "Viewing Station Vector File",
                "flags": "stations",
                "description": "Input viewing station vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "height": {
                "name": "Station Height (in z units)",
                "flags": "height",
                "description": "Viewing station height, in z units.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "false"
            }
        }
    },
    "VisibilityIndex": {
        "name": "VisibilityIndex",
        "Name": "Visibilityindex",
        "category": "Geomorphometric Analysis",
        "label": "Visibility Index",
        "description": "Estimates the relative visibility of sites in a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/visibility_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#VisibilityIndex",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "height": {
                "name": "Station Height (in z units)",
                "flags": "height",
                "description": "Viewing station height, in z units.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "false"
            },
            "res_factor": {
                "name": "Resolution Factor",
                "flags": "res_factor",
                "description": "The resolution factor determines the density of measured viewsheds.",
                "parameter_type": "Integer",
                "default_value": "\"2\"",
                "optional": "false"
            }
        }
    },
    "WetnessIndex": {
        "name": "WetnessIndex",
        "Name": "Wetnessindex",
        "category": "Geomorphometric Analysis",
        "label": "Wetness Index",
        "description": "Calculates the topographic wetness index, Ln(A / tan(slope)).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/terrain_analysis/wetness_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/geomorphometric_analysis.html#WetnessIndex",
        "parameters": {
            "sca": {
                "name": "Input Specific Contributing Area (SCA) File",
                "flags": "sca",
                "description": "Input raster specific contributing area (SCA) file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "slope": {
                "name": "Input Slope File",
                "flags": "slope",
                "description": "Input raster slope file (in degrees).",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "AverageFlowpathSlope": {
        "name": "AverageFlowpathSlope",
        "Name": "Averageflowpathslope",
        "category": "Hydrological Analysis",
        "label": "Average Flowpath Slope",
        "description": "Measures the average slope gradient from each grid cell to all upslope divide cells.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/average_flowpath_slope.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#AverageFlowpathSlope",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "AverageUpslopeFlowpathLength": {
        "name": "AverageUpslopeFlowpathLength",
        "Name": "Averageupslopeflowpathlength",
        "category": "Hydrological Analysis",
        "label": "Average Upslope Flowpath Length",
        "description": "Measures the average length of all upslope flowpaths draining each grid cell.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/average_upslope_flowpath_length.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#AverageUpslopeFlowpathLength",
        "parameters": {
            "dem": {
                "name": "Input File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Basins": {
        "name": "Basins",
        "Name": "Basins",
        "category": "Hydrological Analysis",
        "label": "Basins",
        "description": "Identifies drainage basins that drain to the DEM edge.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/basins.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#Basins",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "BreachDepressions": {
        "name": "BreachDepressions",
        "Name": "Breachdepressions",
        "category": "Hydrological Analysis",
        "label": "Breach Depressions",
        "description": "Breaches all of the depressions in a DEM using Lindsay's (2016) algorithm. This should be preferred over depression filling in most cases.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/breach_depressions.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#BreachDepressions",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "max_depth": {
                "name": "Maximum Breach Depth (z units)",
                "flags": "max_depth",
                "description": "Optional maximum breach depth (default is Inf).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "max_length": {
                "name": "Maximum Breach Channel Length (grid cells)",
                "flags": "max_length",
                "description": "Optional maximum breach channel length (in grid cells; default is Inf).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "flat_increment": {
                "name": "Flat increment value (z units)",
                "flags": "flat_increment",
                "description": "Optional elevation increment applied to flat areas.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "fill_pits": {
                "name": "Fill single-cell pits?",
                "flags": "fill_pits",
                "description": "Optional flag indicating whether to fill single-cell pits.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "BreachDepressionsLeastCost": {
        "name": "BreachDepressionsLeastCost",
        "Name": "Breachdepressionsleastcost",
        "category": "Hydrological Analysis",
        "label": "Breach Depressions Least Cost",
        "description": "Breaches the depressions in a DEM using a least-cost pathway method.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/breach_depressions_least_cost.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#BreachDepressionsLeastCost",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "dist": {
                "name": "Maximum Search Distance (cells)",
                "flags": "dist",
                "description": "Maximum search distance for breach paths in cells.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "max_cost": {
                "name": "Maximum Breach Cost (z units)",
                "flags": "max_cost",
                "description": "Optional maximum breach cost (default is Inf).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "min_dist": {
                "name": "Minimize breach distances?",
                "flags": "min_dist",
                "description": "Optional flag indicating whether to minimize breach distances.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "flat_increment": {
                "name": "Flat increment value (z units)",
                "flags": "flat_increment",
                "description": "Optional elevation increment applied to flat areas.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "fill": {
                "name": "Fill unbreached depressions?",
                "flags": "fill",
                "description": "Optional flag indicating whether to fill any remaining unbreached depressions.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            }
        }
    },
    "BreachSingleCellPits": {
        "name": "BreachSingleCellPits",
        "Name": "Breachsinglecellpits",
        "category": "Hydrological Analysis",
        "label": "Breach Single Cell Pits",
        "description": "Removes single-cell pits from an input DEM by breaching.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/breach_pits.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#BreachSingleCellPits",
        "parameters": {
            "dem": {
                "name": "Input File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "BurnStreamsAtRoads": {
        "name": "BurnStreamsAtRoads",
        "Name": "Burnstreamsatroads",
        "category": "Hydrological Analysis",
        "label": "Burn Streams At Roads",
        "description": "Burns-in streams at the sites of road embankments.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/burn_streams_at_roads.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#BurnStreamsAtRoads",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster digital elevation model (DEM) file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Vector Streams File",
                "flags": "streams",
                "description": "Input vector streams file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "roads": {
                "name": "Input Vector Roads File",
                "flags": "roads",
                "description": "Input vector roads file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "width": {
                "name": "Road Embankment Width",
                "flags": "width",
                "description": "Maximum road embankment width, in map units",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "D8FlowAccumulation": {
        "name": "D8FlowAccumulation",
        "Name": "D8Flowaccumulation",
        "category": "Hydrological Analysis",
        "label": "D8 Flow Accumulation",
        "description": "Calculates a D8 flow accumulation raster from an input DEM or flow pointer.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/d8_flow_accum.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#D8FlowAccumulation",
        "parameters": {
            "i": {
                "name": "Input DEM or D8 Pointer File",
                "flags": "i",
                "description": "Input raster DEM or D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_type": {
                "name": "Output Type",
                "flags": "out_type",
                "description": "Output type; one of 'cells' (default), 'catchment area', and 'specific contributing area'.",
                "parameter_type": {
                    "OptionList": [
                        "cells",
                        "catchment area",
                        "specific contributing area"
                    ]
                },
                "default_value": "\"cells\"",
                "optional": "true"
            },
            "log": {
                "name": "Log-transform the output?",
                "flags": "log",
                "description": "Optional flag to request the output be log-transformed.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "clip": {
                "name": "Clip the upper tail by 1%?",
                "flags": "clip",
                "description": "Optional flag to request clipping the display max by 1%.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "pntr": {
                "name": "Is the input raster a D8 flow pointer?",
                "flags": "pntr",
                "description": "Is the input raster a D8 flow pointer rather than a DEM?",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "esri_pntr": {
                "name": "If a pointer is input, does it use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "Input  D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "D8MassFlux": {
        "name": "D8MassFlux",
        "Name": "D8Massflux",
        "category": "Hydrological Analysis",
        "label": "D8 Mass Flux",
        "description": "Performs a D8 mass flux calculation.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/d8_mass_flux.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#D8MassFlux",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "loading": {
                "name": "Input Loading File",
                "flags": "loading",
                "description": "Input loading raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "efficiency": {
                "name": "Input Efficiency File",
                "flags": "efficiency",
                "description": "Input efficiency raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "absorption": {
                "name": "Input Absorption File",
                "flags": "absorption",
                "description": "Input absorption raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "D8Pointer": {
        "name": "D8Pointer",
        "Name": "D8Pointer",
        "category": "Hydrological Analysis",
        "label": "D8 Pointer",
        "description": "Calculates a D8 flow pointer raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/d8_pointer.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#D8Pointer",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Should the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "DInfFlowAccumulation": {
        "name": "DInfFlowAccumulation",
        "Name": "Dinfflowaccumulation",
        "category": "Hydrological Analysis",
        "label": "D Inf Flow Accumulation",
        "description": "Calculates a D-infinity flow accumulation raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/dinf_flow_accum.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#DInfFlowAccumulation",
        "parameters": {
            "i": {
                "name": "Input DEM or D-inf Pointer File",
                "flags": "i",
                "description": "Input raster DEM or D-infinity pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_type": {
                "name": "Output Type",
                "flags": "out_type",
                "description": "Output type; one of 'cells', 'sca' (default), and 'ca'.",
                "parameter_type": {
                    "OptionList": [
                        "Cells",
                        "Specific Contributing Area",
                        "Catchment Area"
                    ]
                },
                "default_value": "\"Specific Contributing Area\"",
                "optional": "true"
            },
            "threshold": {
                "name": "Convergence Threshold (grid cells; blank for none)",
                "flags": "threshold",
                "description": "Optional convergence threshold parameter, in grid cells; default is inifinity.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "log": {
                "name": "Log-transform the output?",
                "flags": "log",
                "description": "Optional flag to request the output be log-transformed.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "clip": {
                "name": "Clip the upper tail by 1%?",
                "flags": "clip",
                "description": "Optional flag to request clipping the display max by 1%.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "pntr": {
                "name": "Is the input raster a D-inf flow pointer?",
                "flags": "pntr",
                "description": "Is the input raster a D-infinity flow pointer rather than a DEM?",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "DInfMassFlux": {
        "name": "DInfMassFlux",
        "Name": "Dinfmassflux",
        "category": "Hydrological Analysis",
        "label": "D Inf Mass Flux",
        "description": "Performs a D-infinity mass flux calculation.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/dinf_mass_flux.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#DInfMassFlux",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "loading": {
                "name": "Input Loading File",
                "flags": "loading",
                "description": "Input loading raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "efficiency": {
                "name": "Input Efficiency File",
                "flags": "efficiency",
                "description": "Input efficiency raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "absorption": {
                "name": "Input Absorption File",
                "flags": "absorption",
                "description": "Input absorption raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "DInfPointer": {
        "name": "DInfPointer",
        "Name": "Dinfpointer",
        "category": "Hydrological Analysis",
        "label": "D Inf Pointer",
        "description": "Calculates a D-infinity flow pointer (flow direction) raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/dinf_pointer.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#DInfPointer",
        "parameters": {
            "dem": {
                "name": "Input File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "DepthInSink": {
        "name": "DepthInSink",
        "Name": "Depthinsink",
        "category": "Hydrological Analysis",
        "label": "Depth In Sink",
        "description": "Measures the depth of sinks (depressions) in a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/depth_in_sink.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#DepthInSink",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether the background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "DownslopeDistanceToStream": {
        "name": "DownslopeDistanceToStream",
        "Name": "Downslopedistancetostream",
        "category": "Hydrological Analysis",
        "label": "Downslope Distance To Stream",
        "description": "Measures distance to the nearest downslope stream cell.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/downslope_distance_to_stream.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#DownslopeDistanceToStream",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "dinf": {
                "name": "Use the D-infinity flow algorithm instead of D8?",
                "flags": "dinf",
                "description": "Use the D-infinity flow algoirthm instead of D8?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "DownslopeFlowpathLength": {
        "name": "DownslopeFlowpathLength",
        "Name": "Downslopeflowpathlength",
        "category": "Hydrological Analysis",
        "label": "Downslope Flowpath Length",
        "description": "Calculates the downslope flowpath length from each cell to basin outlet.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/downslope_flowpath_length.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#DownslopeFlowpathLength",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input D8 pointer raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "watersheds": {
                "name": "Input Watersheds File",
                "flags": "watersheds",
                "description": "Optional input watershed raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "weights": {
                "name": "Input Weights File",
                "flags": "weights",
                "description": "Optional input weights raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "ElevationAboveStream": {
        "name": "ElevationAboveStream",
        "Name": "Elevationabovestream",
        "category": "Hydrological Analysis",
        "label": "Elevation Above Stream",
        "description": "Calculates the elevation of cells above the nearest downslope stream cell.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/elevation_above_stream.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#ElevationAboveStream",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ElevationAboveStreamEuclidean": {
        "name": "ElevationAboveStreamEuclidean",
        "Name": "Elevationabovestreameuclidean",
        "category": "Hydrological Analysis",
        "label": "Elevation Above Stream Euclidean",
        "description": "Calculates the elevation of cells above the nearest (Euclidean distance) stream cell.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/elevation_above_stream_euclidean.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#ElevationAboveStreamEuclidean",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Fd8FlowAccumulation": {
        "name": "Fd8FlowAccumulation",
        "Name": "Fd8Flowaccumulation",
        "category": "Hydrological Analysis",
        "label": "Fd8 Flow Accumulation",
        "description": "Calculates an FD8 flow accumulation raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/fd8_flow_accum.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#Fd8FlowAccumulation",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_type": {
                "name": "Output Type",
                "flags": "out_type",
                "description": "Output type; one of 'cells', 'specific contributing area' (default), and 'catchment area'.",
                "parameter_type": {
                    "OptionList": [
                        "cells",
                        "specific contributing area",
                        "catchment area"
                    ]
                },
                "default_value": "\"specific contributing area\"",
                "optional": "true"
            },
            "exponent": {
                "name": "Exponent Parameter",
                "flags": "exponent",
                "description": "Optional exponent parameter; default is 1.1.",
                "parameter_type": "Float",
                "default_value": "\"1.1\"",
                "optional": "true"
            },
            "threshold": {
                "name": "Convergence Threshold (grid cells; blank for none)",
                "flags": "threshold",
                "description": "Optional convergence threshold parameter, in grid cells; default is inifinity.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "log": {
                "name": "Log-transform the output?",
                "flags": "log",
                "description": "Optional flag to request the output be log-transformed.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "clip": {
                "name": "Clip the upper tail by 1%?",
                "flags": "clip",
                "description": "Optional flag to request clipping the display max by 1%.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "Fd8Pointer": {
        "name": "Fd8Pointer",
        "Name": "Fd8Pointer",
        "category": "Hydrological Analysis",
        "label": "Fd8 Pointer",
        "description": "Calculates an FD8 flow pointer raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/fd8_pointer.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#Fd8Pointer",
        "parameters": {
            "dem": {
                "name": "Input File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "FillBurn": {
        "name": "FillBurn",
        "Name": "Fillburn",
        "category": "Hydrological Analysis",
        "label": "Fill Burn",
        "description": "Burns streams into a DEM using the FillBurn (Saunders, 1999) method.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/fill_burn.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#FillBurn",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Vector Streams File",
                "flags": "streams",
                "description": "Input vector streams file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "FillDepressions": {
        "name": "FillDepressions",
        "Name": "Filldepressions",
        "category": "Hydrological Analysis",
        "label": "Fill Depressions",
        "description": "Fills all of the depressions in a DEM. Depression breaching should be preferred in most cases.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/fill_depressions.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#FillDepressions",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "fix_flats": {
                "name": "Fix flat areas?",
                "flags": "fix_flats",
                "description": "Optional flag indicating whether flat areas should have a small gradient applied.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "flat_increment": {
                "name": "Flat increment value (z units)",
                "flags": "flat_increment",
                "description": "Optional elevation increment applied to flat areas.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "max_depth": {
                "name": "Maximum depth (z units)",
                "flags": "max_depth",
                "description": "Optional maximum depression depth to fill.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "FillDepressionsPlanchonAndDarboux": {
        "name": "FillDepressionsPlanchonAndDarboux",
        "Name": "Filldepressionsplanchonanddarboux",
        "category": "Hydrological Analysis",
        "label": "Fill Depressions Planchon And Darboux",
        "description": "Fills all of the depressions in a DEM using the Planchon and Darboux (2002) method.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/fill_depressions_planchon_and_darboux.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#FillDepressionsPlanchonAndDarboux",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "fix_flats": {
                "name": "Fix flat areas?",
                "flags": "fix_flats",
                "description": "Optional flag indicating whether flat areas should have a small gradient applied.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "flat_increment": {
                "name": "Flat increment value (z units)",
                "flags": "flat_increment",
                "description": "Optional elevation increment applied to flat areas.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "FillDepressionsWangAndLiu": {
        "name": "FillDepressionsWangAndLiu",
        "Name": "Filldepressionswangandliu",
        "category": "Hydrological Analysis",
        "label": "Fill Depressions Wang And Liu",
        "description": "Fills all of the depressions in a DEM using the Wang and Liu (2006) method. Depression breaching should be preferred in most cases.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/fill_depressions_wang_and_liu.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#FillDepressionsWangAndLiu",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "fix_flats": {
                "name": "Fix flat areas?",
                "flags": "fix_flats",
                "description": "Optional flag indicating whether flat areas should have a small gradient applied.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "flat_increment": {
                "name": "Flat increment value (z units)",
                "flags": "flat_increment",
                "description": "Optional elevation increment applied to flat areas.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "FillSingleCellPits": {
        "name": "FillSingleCellPits",
        "Name": "Fillsinglecellpits",
        "category": "Hydrological Analysis",
        "label": "Fill Single Cell Pits",
        "description": "Raises pit cells to the elevation of their lowest neighbour.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/fill_pits.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#FillSingleCellPits",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "FindNoFlowCells": {
        "name": "FindNoFlowCells",
        "Name": "Findnoflowcells",
        "category": "Hydrological Analysis",
        "label": "Find No Flow Cells",
        "description": "Finds grid cells with no downslope neighbours.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/find_noflow_cells.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#FindNoFlowCells",
        "parameters": {
            "dem": {
                "name": "Input File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "FindParallelFlow": {
        "name": "FindParallelFlow",
        "Name": "Findparallelflow",
        "category": "Hydrological Analysis",
        "label": "Find Parallel Flow",
        "description": "Finds areas of parallel flow in D8 flow direction rasters.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/find_parallel_flow.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#FindParallelFlow",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input D8 pointer raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "FlattenLakes": {
        "name": "FlattenLakes",
        "Name": "Flattenlakes",
        "category": "Hydrological Analysis",
        "label": "Flatten Lakes",
        "description": "Flattens lake polygons in a raster DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/flatten_lakes.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#FlattenLakes",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "lakes": {
                "name": "Input Lakes Vector Polygon File",
                "flags": "lakes",
                "description": "Input lakes vector polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "FloodOrder": {
        "name": "FloodOrder",
        "Name": "Floodorder",
        "category": "Hydrological Analysis",
        "label": "Flood Order",
        "description": "Assigns each DEM grid cell its order in the sequence of inundations that are encountered during a search starting from the edges, moving inward at increasing elevations.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/flood_order.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#FloodOrder",
        "parameters": {
            "dem": {
                "name": "Input File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "FlowAccumulationFullWorkflow": {
        "name": "FlowAccumulationFullWorkflow",
        "Name": "Flowaccumulationfullworkflow",
        "category": "Hydrological Analysis",
        "label": "Flow Accumulation Full Workflow",
        "description": "Resolves all of the depressions in a DEM, outputting a breached DEM, an aspect-aligned non-divergent flow pointer, and a flow accumulation raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/flow_accum_full_workflow.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#FlowAccumulationFullWorkflow",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_dem": {
                "name": "Output DEM File",
                "flags": "out_dem",
                "description": "Output raster DEM file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_pntr": {
                "name": "Output Flow Pointer File",
                "flags": "out_pntr",
                "description": "Output raster flow pointer file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_accum": {
                "name": "Output Flow Accumulation File",
                "flags": "out_accum",
                "description": "Output raster flow accumulation file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_type": {
                "name": "Output Type",
                "flags": "out_type",
                "description": "Output type; one of 'cells', 'sca' (default), and 'ca'.",
                "parameter_type": {
                    "OptionList": [
                        "Cells",
                        "Specific Contributing Area",
                        "Catchment Area"
                    ]
                },
                "default_value": "\"Specific Contributing Area\"",
                "optional": "true"
            },
            "log": {
                "name": "Log-transform the output?",
                "flags": "log",
                "description": "Optional flag to request the output be log-transformed.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "clip": {
                "name": "Clip the upper tail by 1%?",
                "flags": "clip",
                "description": "Optional flag to request clipping the display max by 1%.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "FlowLengthDiff": {
        "name": "FlowLengthDiff",
        "Name": "Flowlengthdiff",
        "category": "Hydrological Analysis",
        "label": "Flow Length Diff",
        "description": "Calculates the local maximum absolute difference in downslope flowpath length, useful in mapping drainage divides and ridges.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/flow_length_diff.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#FlowLengthDiff",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input D8 pointer raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "Hillslopes": {
        "name": "Hillslopes",
        "Name": "Hillslopes",
        "category": "Hydrological Analysis",
        "label": "Hillslopes",
        "description": "Identifies the individual hillslopes draining to each link in a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/hillslopes.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#Hillslopes",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "ImpoundmentSizeIndex": {
        "name": "ImpoundmentSizeIndex",
        "Name": "Impoundmentsizeindex",
        "category": "Hydrological Analysis",
        "label": "Impoundment Size Index",
        "description": "Calculates the impoundment size resulting from damming a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/impoundment_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#ImpoundmentSizeIndex",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_type": {
                "name": "Output Type",
                "flags": "out_type",
                "description": "Output type; one of 'mean depth' (default), 'volume', 'area', 'max depth'.",
                "parameter_type": {
                    "OptionList": [
                        "mean depth",
                        "volume",
                        "area",
                        "max depth"
                    ]
                },
                "default_value": "\"mean depth\"",
                "optional": "true"
            },
            "damlength": {
                "name": "Max dam length (grid cells)",
                "flags": "damlength",
                "description": "Maximum length of the dam.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "InsertDams": {
        "name": "InsertDams",
        "Name": "Insertdams",
        "category": "Hydrological Analysis",
        "label": "Insert Dams",
        "description": "Calculates the impoundment size resulting from damming a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/insert_dams.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#InsertDams",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "dam_pts": {
                "name": "Input Dam Points",
                "flags": "dam_pts",
                "description": "Input vector dam points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "damlength": {
                "name": "Max dam length (grid cells)",
                "flags": "damlength",
                "description": "Maximum length of the dam.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Isobasins": {
        "name": "Isobasins",
        "Name": "Isobasins",
        "category": "Hydrological Analysis",
        "label": "Isobasins",
        "description": "Divides a landscape into nearly equal sized drainage basins (i.e. watersheds).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/isobasins.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#Isobasins",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "size": {
                "name": "Target Basin Size (grid cells)",
                "flags": "size",
                "description": "Target basin size, in grid cells.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "connections": {
                "name": "Output basin upstream-downstream connections?",
                "flags": "connections",
                "description": "Output upstream-downstream flow connections among basins?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "JensonSnapPourPoints": {
        "name": "JensonSnapPourPoints",
        "Name": "Jensonsnappourpoints",
        "category": "Hydrological Analysis",
        "label": "Jenson Snap Pour Points",
        "description": "Moves outlet points used to specify points of interest in a watershedding operation to the nearest stream cell.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/jenson_snap_pour_points.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#JensonSnapPourPoints",
        "parameters": {
            "pour_pts": {
                "name": "Input Pour Points (Outlet) File",
                "flags": "pour_pts",
                "description": "Input vector pour points (outlet) file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "snap_dist": {
                "name": "Maximum Snap Distance (map units)",
                "flags": "snap_dist",
                "description": "Maximum snap distance in map units.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "LongestFlowpath": {
        "name": "LongestFlowpath",
        "Name": "Longestflowpath",
        "category": "Hydrological Analysis",
        "label": "Longest Flowpath",
        "description": "Delineates the longest flowpaths for a group of subbasins or watersheds.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/longest_flowpath.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#LongestFlowpath",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "basins": {
                "name": "Basins File",
                "flags": "basins",
                "description": "Input raster basins file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "LowPointsOnHeadwaterDivides": {
        "name": "LowPointsOnHeadwaterDivides",
        "Name": "Lowpointsonheadwaterdivides",
        "category": "Hydrological Analysis",
        "label": "Low Points On Headwater Divides",
        "description": "This tool locates saddle points along ridges within a digital elevation model (DEM).",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#LowPointsOnHeadwaterDivides",
        "parameters": {
            "dem": {
                "name": "Input DEM Raster",
                "flags": "dem",
                "description": "Name of the input DEM raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "streams": {
                "name": "Input Streams Raster",
                "flags": "streams",
                "description": "Name of the input stream channel raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output Vector File",
                "flags": "output",
                "description": "Name of the output vector file.",
                "parameter_type": {
                    "NewFile": "Vector"
                },
                "default_value": "null",
                "optional": "false,"
            }
        }
    },
    "MaxUpslopeFlowpathLength": {
        "name": "MaxUpslopeFlowpathLength",
        "Name": "Maxupslopeflowpathlength",
        "category": "Hydrological Analysis",
        "label": "Max Upslope Flowpath Length",
        "description": "Measures the maximum length of all upslope flowpaths draining each grid cell.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/max_upslope_flowpath.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#MaxUpslopeFlowpathLength",
        "parameters": {
            "dem": {
                "name": "Input File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "MdInfFlowAccumulation": {
        "name": "MdInfFlowAccumulation",
        "Name": "Mdinfflowaccumulation",
        "category": "Hydrological Analysis",
        "label": "Md Inf Flow Accumulation",
        "description": "Calculates an FD8 flow accumulation raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/mdinf_flow_accum.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#MdInfFlowAccumulation",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_type": {
                "name": "Output Type",
                "flags": "out_type",
                "description": "Output type; one of 'cells', 'specific contributing area' (default), and 'catchment area'.",
                "parameter_type": {
                    "OptionList": [
                        "cells",
                        "specific contributing area",
                        "catchment area"
                    ]
                },
                "default_value": "\"specific contributing area\"",
                "optional": "true"
            },
            "exponent": {
                "name": "Exponent Parameter",
                "flags": "exponent",
                "description": "Optional exponent parameter; default is 1.1.",
                "parameter_type": "Float",
                "default_value": "\"1.1\"",
                "optional": "true"
            },
            "threshold": {
                "name": "Convergence Threshold (grid cells; blank for none)",
                "flags": "threshold",
                "description": "Optional convergence threshold parameter, in grid cells; default is inifinity.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "log": {
                "name": "Log-transform the output?",
                "flags": "log",
                "description": "Optional flag to request the output be log-transformed.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "clip": {
                "name": "Clip the upper tail by 1%?",
                "flags": "clip",
                "description": "Optional flag to request clipping the display max by 1%.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "NumInflowingNeighbours": {
        "name": "NumInflowingNeighbours",
        "Name": "Numinflowingneighbours",
        "category": "Hydrological Analysis",
        "label": "Num Inflowing Neighbours",
        "description": "Computes the number of inflowing neighbours to each cell in an input DEM based on the D8 algorithm.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/num_inflowing_neighbours.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#NumInflowingNeighbours",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "RaiseWalls": {
        "name": "RaiseWalls",
        "Name": "Raisewalls",
        "category": "Hydrological Analysis",
        "label": "Raise Walls",
        "description": "Raises walls in a DEM along a line or around a polygon, e.g. a watershed.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/raise_walls.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#RaiseWalls",
        "parameters": {
            "i": {
                "name": "Input Vector Line or Polygon File",
                "flags": "i",
                "description": "Input vector lines or polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "breach": {
                "name": "Input Breach Lines",
                "flags": "breach",
                "description": "Optional input vector breach lines.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "true"
            },
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "height": {
                "name": "Wall Height",
                "flags": "height",
                "description": "Wall height.",
                "parameter_type": "Float",
                "default_value": "\"100.0\"",
                "optional": "true"
            }
        }
    },
    "Rho8Pointer": {
        "name": "Rho8Pointer",
        "Name": "Rho8Pointer",
        "category": "Hydrological Analysis",
        "label": "Rho8 Pointer",
        "description": "Calculates a stochastic Rho8 flow pointer raster from an input DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/rho8_pointer.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#Rho8Pointer",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Should the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "Sink": {
        "name": "Sink",
        "Name": "Sink",
        "category": "Hydrological Analysis",
        "label": "Sink",
        "description": "Identifies the depressions in a DEM, giving each feature a unique identifier.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/sink.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#Sink",
        "parameters": {
            "i": {
                "name": "Input DEM File",
                "flags": "i",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "SnapPourPoints": {
        "name": "SnapPourPoints",
        "Name": "Snappourpoints",
        "category": "Hydrological Analysis",
        "label": "Snap Pour Points",
        "description": "Moves outlet points used to specify points of interest in a watershedding operation to the cell with the highest flow accumulation in its neighbourhood.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/snap_pour_points.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#SnapPourPoints",
        "parameters": {
            "pour_pts": {
                "name": "Input Pour Points (Outlet) File",
                "flags": "pour_pts",
                "description": "Input vector pour points (outlet) file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "flow_accum": {
                "name": "Input D8 Flow Accumulation File",
                "flags": "flow_accum",
                "description": "Input raster D8 flow accumulation file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "snap_dist": {
                "name": "Maximum Snap Distance (map units)",
                "flags": "snap_dist",
                "description": "Maximum snap distance in map units.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "StochasticDepressionAnalysis": {
        "name": "StochasticDepressionAnalysis",
        "Name": "Stochasticdepressionanalysis",
        "category": "Hydrological Analysis",
        "label": "Stochastic Depression Analysis",
        "description": "Preforms a stochastic analysis of depressions within a DEM.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/stochastic_depression_analysis.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#StochasticDepressionAnalysis",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "rmse": {
                "name": "DEM root-mean-square-error (z units)",
                "flags": "rmse",
                "description": "The DEM's root-mean-square-error (RMSE), in z units. This determines error magnitude.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "range": {
                "name": "Range of Autocorrelation (map units)",
                "flags": "range",
                "description": "The error field's correlation length, in xy-units.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "iterations": {
                "name": "Iterations",
                "flags": "iterations",
                "description": "The number of iterations.",
                "parameter_type": "Integer",
                "default_value": "\"100\"",
                "optional": "true"
            }
        }
    },
    "StrahlerOrderBasins": {
        "name": "StrahlerOrderBasins",
        "Name": "Strahlerorderbasins",
        "category": "Hydrological Analysis",
        "label": "Strahler Order Basins",
        "description": "Identifies Strahler-order basins from an input stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/strahler_basins.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#StrahlerOrderBasins",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "Subbasins": {
        "name": "Subbasins",
        "Name": "Subbasins",
        "category": "Hydrological Analysis",
        "label": "Subbasins",
        "description": "Identifies the catchments, or sub-basin, draining to each link in a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/subbasins.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#Subbasins",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input D8 pointer raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "TraceDownslopeFlowpaths": {
        "name": "TraceDownslopeFlowpaths",
        "Name": "Tracedownslopeflowpaths",
        "category": "Hydrological Analysis",
        "label": "Trace Downslope Flowpaths",
        "description": "Traces downslope flowpaths from one or more target sites (i.e. seed points).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/trace_downslope_flowpaths.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#TraceDownslopeFlowpaths",
        "parameters": {
            "seed_pts": {
                "name": "Input Vector Seed Points File",
                "flags": "seed_pts",
                "description": "Input vector seed points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input D8 pointer raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "UnnestBasins": {
        "name": "UnnestBasins",
        "Name": "Unnestbasins",
        "category": "Hydrological Analysis",
        "label": "Unnest Basins",
        "description": "Extract whole watersheds for a set of outlet points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/unnest_basins.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#UnnestBasins",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input D8 pointer raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "pour_pts": {
                "name": "Input Pour Points (Outlet) File",
                "flags": "pour_pts",
                "description": "Input vector pour points (outlet) file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "UpslopeDepressionStorage": {
        "name": "UpslopeDepressionStorage",
        "Name": "Upslopedepressionstorage",
        "category": "Hydrological Analysis",
        "label": "Upslope Depression Storage",
        "description": "Estimates the average upslope depression storage depth.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/upslope_depression_storage.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#UpslopeDepressionStorage",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Watershed": {
        "name": "Watershed",
        "Name": "Watershed",
        "category": "Hydrological Analysis",
        "label": "Watershed",
        "description": "Identifies the watershed, or drainage basin, draining to a set of target cells.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/hydro_analysis/watershed.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/hydrological_analysis.html#Watershed",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input D8 pointer raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "pour_pts": {
                "name": "Input Pour Points (Outlet) File",
                "flags": "pour_pts",
                "description": "Input pour points (outlet) file.",
                "parameter_type": {
                    "ExistingFile": {
                        "RasterAndVector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "ChangeVectorAnalysis": {
        "name": "ChangeVectorAnalysis",
        "Name": "Changevectoranalysis",
        "category": "Image Processing Tools",
        "label": "Change Vector Analysis",
        "description": "Performs a change vector analysis on a two-date multi-spectral dataset.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/change_vector_analysis.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#ChangeVectorAnalysis",
        "parameters": {
            "date1": {
                "name": "Earlier Date Input Files",
                "flags": "date1",
                "description": "Input raster files for the earlier date.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "date2": {
                "name": "Later Date Input Files",
                "flags": "date2",
                "description": "Input raster files for the later date.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "magnitude": {
                "name": "Output Vector Magnitude File",
                "flags": "magnitude",
                "description": "Output vector magnitude raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "direction": {
                "name": "Output Vector Direction File",
                "flags": "direction",
                "description": "Output vector Direction raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Closing": {
        "name": "Closing",
        "Name": "Closing",
        "category": "Image Processing Tools",
        "label": "Closing",
        "description": "A closing is a mathematical morphology operation involving an erosion (min filter) of a dilation (max filter) set.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/closing.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#Closing",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "CreateColourComposite": {
        "name": "CreateColourComposite",
        "Name": "Createcolourcomposite",
        "category": "Image Processing Tools",
        "label": "Create Colour Composite",
        "description": "Creates a colour-composite image from three bands of multispectral imagery.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/create_colour_composite.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#CreateColourComposite",
        "parameters": {
            "red": {
                "name": "Input Red Band Image File",
                "flags": "red",
                "description": "Input red band image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "green": {
                "name": "Input Green Band Image File",
                "flags": "green",
                "description": "Input green band image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "blue": {
                "name": "Input Blue Band Image File",
                "flags": "blue",
                "description": "Input blue band image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "opacity": {
                "name": "Input Opacity Band Image File (Optional)",
                "flags": "opacity",
                "description": "Input opacity band image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output Colour Composite File",
                "flags": "output",
                "description": "Output colour composite file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "enhance": {
                "name": "Perform balance contrast enhancement?",
                "flags": "enhance",
                "description": "Optional flag indicating whether a balance contrast enhancement is performed.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "zeros": {
                "name": "Treat zeros as nodata?",
                "flags": "zeros",
                "description": "Optional flag to indicate if zeros are nodata values.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "FlipImage": {
        "name": "FlipImage",
        "Name": "Flipimage",
        "category": "Image Processing Tools",
        "label": "Flip Image",
        "description": "Reflects an image in the vertical or horizontal axis.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/flip_image.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#FlipImage",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "direction": {
                "name": "Direction",
                "flags": "direction",
                "description": "Direction of reflection; options include 'v' (vertical), 'h' (horizontal), and 'b' (both).",
                "parameter_type": {
                    "OptionList": [
                        "vertical",
                        "horizontal",
                        "both"
                    ]
                },
                "default_value": "\"vertical\"",
                "optional": "true"
            }
        }
    },
    "IhsToRgb": {
        "name": "IhsToRgb",
        "Name": "Ihstorgb",
        "category": "Image Processing Tools",
        "label": "Ihs To Rgb",
        "description": "Converts intensity, hue, and saturation (IHS) images into red, green, and blue (RGB) images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/ihs_to_rgb.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#IhsToRgb",
        "parameters": {
            "intensity": {
                "name": "Input Intensity File",
                "flags": "intensity",
                "description": "Input intensity file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "hue": {
                "name": "Input Hue File",
                "flags": "hue",
                "description": "Input hue file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "saturation": {
                "name": "Input Saturation File",
                "flags": "saturation",
                "description": "Input saturation file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "red": {
                "name": "Output Red Band File (optional; only if colour-composite not specified)",
                "flags": "red",
                "description": "Output red band file. Optionally specified if colour-composite not specified.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "",
                "optional": "(optional; only if colour-composite not specified)\",\"flags\":[\"--red\"],\"description\":\"Output red band file. Optionally specified if colour-composite not specified.\",\"parameter_type\":{\"NewFile\":\"Raster\"},\"default_value\":null,true"
            },
            "green": {
                "name": "Output Green Band File (optional; only if colour-composite not specified)",
                "flags": "green",
                "description": "Output green band file. Optionally specified if colour-composite not specified.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "",
                "optional": "(optional; only if colour-composite not specified)\",\"flags\":[\"--green\"],\"description\":\"Output green band file. Optionally specified if colour-composite not specified.\",\"parameter_type\":{\"NewFile\":\"Raster\"},\"default_value\":null,true"
            },
            "blue": {
                "name": "Output Blue Band File (optional; only if colour-composite not specified)",
                "flags": "blue",
                "description": "Output blue band file. Optionally specified if colour-composite not specified.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "",
                "optional": "(optional; only if colour-composite not specified)\",\"flags\":[\"--blue\"],\"description\":\"Output blue band file. Optionally specified if colour-composite not specified.\",\"parameter_type\":{\"NewFile\":\"Raster\"},\"default_value\":null,true"
            },
            "output": {
                "name": "Output Colour-Composite File (optional; only if individual bands not specified)",
                "flags": "output",
                "description": "Output colour-composite file. Only used if individual bands are not specified.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "",
                "optional": "(optional; only if individual bands not specified)\",\"flags\":[\"-o\",\"--output\"],\"description\":\"Output colour-composite file. Only used if individual bands are not specified.\",\"parameter_type\":{\"NewFile\":\"Raster\"},\"default_value\":null,true"
            }
        }
    },
    "ImageSlider": {
        "name": "ImageSlider",
        "Name": "Imageslider",
        "category": "Image Processing Tools",
        "label": "Image Slider",
        "description": "This tool creates an image slider from two input images.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#ImageSlider",
        "parameters": {
            "input1": {
                "name": "Left Input Raster Image",
                "flags": "input1",
                "description": "Name of the left input image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "palette1": {
                "name": "Left Image Palette",
                "flags": "palette1",
                "description": "Left image palette; options are 'grey', 'atlas', 'high_relief', 'arid', 'soft', 'muted', 'purple', 'viridi', 'gn_yl', 'pi_y_g', 'bl_yl_rd', 'deep', and 'rgb'.",
                "parameter_type": {
                    "OptionList": [
                        "grey",
                        "atlas",
                        "high_relief",
                        "arid",
                        "soft",
                        "muted",
                        "purple",
                        "viridi",
                        "gn_yl",
                        "pi_y_g",
                        "bl_yl_rd",
                        "deep",
                        "rgb"
                    ]
                },
                "default_value": "\"grey\"",
                "optional": "true,"
            },
            "reverse1": {
                "name": "Reverse left image palette?",
                "flags": "reverse1",
                "description": "Reverse left image palette?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "false,"
            },
            "label1": {
                "name": "Left Image Label (blank for none)",
                "flags": "label1",
                "description": "Left image label (leave blank for none)",
                "parameter_type": "String",
                "default_value": "\"\"",
                "optional": "true,"
            },
            "input2": {
                "name": "Right Input Raster Image",
                "flags": "input2",
                "description": "Name of the right input image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "palette2": {
                "name": "Right Image Palette",
                "flags": "palette2",
                "description": "Right image palette; options are 'grey', 'atlas', 'high_relief', 'arid', 'soft', 'muted', 'purple', 'viridi', 'gn_yl', 'pi_y_g', 'bl_yl_rd', 'deep', and 'rgb'.",
                "parameter_type": {
                    "OptionList": [
                        "grey",
                        "atlas",
                        "high_relief",
                        "arid",
                        "soft",
                        "muted",
                        "purple",
                        "viridi",
                        "gn_yl",
                        "pi_y_g",
                        "bl_yl_rd",
                        "deep",
                        "rgb"
                    ]
                },
                "default_value": "\"grey\"",
                "optional": "true,"
            },
            "reverse2": {
                "name": "Reverse right image palette?",
                "flags": "reverse2",
                "description": "Reverse right image palette?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "false,"
            },
            "label2": {
                "name": "Right Image Label (blank for none)",
                "flags": "label2",
                "description": "Right image label (leave blank for none)",
                "parameter_type": "String",
                "default_value": "\"\"",
                "optional": "true,"
            },
            "output": {
                "name": "Output File (*.html)",
                "flags": "output",
                "description": "Name of the output HTML file (*.html).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "height": {
                "name": "Image Height (in pixels)",
                "flags": "height",
                "description": "Image height, in pixels.",
                "parameter_type": "Integer",
                "default_value": "\"600\"",
                "optional": "true,"
            }
        }
    },
    "ImageStackProfile": {
        "name": "ImageStackProfile",
        "Name": "Imagestackprofile",
        "category": "Image Processing Tools",
        "label": "Image Stack Profile",
        "description": "Plots an image stack profile (i.e. signature) for a set of points and multispectral images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/image_stack_profile.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#ImageStackProfile",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input multispectral image files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "points": {
                "name": "Input Vector Points File",
                "flags": "points",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "IntegralImage": {
        "name": "IntegralImage",
        "Name": "Integralimage",
        "category": "Image Processing Tools",
        "label": "Integral Image",
        "description": "Transforms an input image (summed area table) into its integral image equivalent.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/integral_image.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#IntegralImage",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "LineThinning": {
        "name": "LineThinning",
        "Name": "Linethinning",
        "category": "Image Processing Tools",
        "label": "Line Thinning",
        "description": "Performs line thinning a on Boolean raster image; intended to be used with the RemoveSpurs tool.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/line_thin.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#LineThinning",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Mosaic": {
        "name": "Mosaic",
        "Name": "Mosaic",
        "category": "Image Processing Tools",
        "label": "Mosaic",
        "description": "Mosaics two or more images together.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/mosaic.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#Mosaic",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "method": {
                "name": "Resampling Method",
                "flags": "method",
                "description": "Resampling method; options include 'nn' (nearest neighbour), 'bilinear', and 'cc' (cubic convolution)",
                "parameter_type": {
                    "OptionList": [
                        "nn",
                        "bilinear",
                        "cc"
                    ]
                },
                "default_value": "\"nn\"",
                "optional": "true"
            }
        }
    },
    "MosaicWithFeathering": {
        "name": "MosaicWithFeathering",
        "Name": "Mosaicwithfeathering",
        "category": "Image Processing Tools",
        "label": "Mosaic With Feathering",
        "description": "Mosaics two images together using a feathering technique in overlapping areas to reduce edge-effects.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/mosaic_with_feathering.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#MosaicWithFeathering",
        "parameters": {
            "input1": {
                "name": "Input File To Modify",
                "flags": "input1",
                "description": "Input raster file to modify.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input Reference File",
                "flags": "input2",
                "description": "Input reference raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "method": {
                "name": "Resampling Method",
                "flags": "method",
                "description": "Resampling method; options include 'nn' (nearest neighbour), 'bilinear', and 'cc' (cubic convolution)",
                "parameter_type": {
                    "OptionList": [
                        "nn",
                        "bilinear",
                        "cc"
                    ]
                },
                "default_value": "\"cc\"",
                "optional": "true"
            },
            "weight": {
                "name": "Distance Weight",
                "flags": "weight",
                "description": "",
                "parameter_type": "Float",
                "default_value": "\"4.0\"",
                "optional": "true"
            }
        }
    },
    "NormalizedDifferenceIndex": {
        "name": "NormalizedDifferenceIndex",
        "Name": "Normalizeddifferenceindex",
        "category": "Image Processing Tools",
        "label": "Normalized Difference Index",
        "description": "Calculate a normalized-difference index (NDI) from two bands of multispectral image data.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/normalized_difference_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#NormalizedDifferenceIndex",
        "parameters": {
            "input1": {
                "name": "Input 1 File",
                "flags": "input1",
                "description": "Input image 1 (e.g. near-infrared band).",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input 2 File",
                "flags": "input2",
                "description": "Input image 2 (e.g. red band).",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "clip": {
                "name": "Distribution Tail Clip Amount (%)",
                "flags": "clip",
                "description": "Optional amount to clip the distribution tails by, in percent.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            },
            "correction": {
                "name": "Correction value",
                "flags": "correction",
                "description": "Optional adjustment value (e.g. 1, or 0.16 for the optimal soil adjusted vegetation index, OSAVI).",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "Opening": {
        "name": "Opening",
        "Name": "Opening",
        "category": "Image Processing Tools",
        "label": "Opening",
        "description": "An opening is a mathematical morphology operation involving a dilation (max filter) of an erosion (min filter) set.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/opening.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#Opening",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "RemoveSpurs": {
        "name": "RemoveSpurs",
        "Name": "Removespurs",
        "category": "Image Processing Tools",
        "label": "Remove Spurs",
        "description": "Removes the spurs (pruning operation) from a Boolean line image; intended to be used on the output of the LineThinning tool.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/remove_spurs.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#RemoveSpurs",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "iterations": {
                "name": "Maximum Iterations",
                "flags": "iterations",
                "description": "Maximum number of iterations",
                "parameter_type": "Integer",
                "default_value": "\"10\"",
                "optional": "false"
            }
        }
    },
    "Resample": {
        "name": "Resample",
        "Name": "Resample",
        "category": "Image Processing Tools",
        "label": "Resample",
        "description": "Resamples one or more input images into a destination image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/resample.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#Resample",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "cell_size": {
                "name": "Cell Size",
                "flags": "cell_size",
                "description": "Optionally specified cell size of output raster. Not used when base raster is specified.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "base": {
                "name": "Base Raster File",
                "flags": "base",
                "description": "Optionally specified input base raster file. Not used when a cell size is specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "method": {
                "name": "Resampling Method",
                "flags": "method",
                "description": "Resampling method; options include 'nn' (nearest neighbour), 'bilinear', and 'cc' (cubic convolution)",
                "parameter_type": {
                    "OptionList": [
                        "nn",
                        "bilinear",
                        "cc"
                    ]
                },
                "default_value": "\"cc\"",
                "optional": "true"
            }
        }
    },
    "RgbToIhs": {
        "name": "RgbToIhs",
        "Name": "Rgbtoihs",
        "category": "Image Processing Tools",
        "label": "Rgb To Ihs",
        "description": "Converts red, green, and blue (RGB) images into intensity, hue, and saturation (IHS) images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/rgb_to_ihs.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#RgbToIhs",
        "parameters": {
            "red": {
                "name": "Input Red Band File (optional; only if colour-composite not specified)",
                "flags": "red",
                "description": "Input red band image file. Optionally specified if colour-composite not specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "",
                "optional": "(optional; only if colour-composite not specified)\",\"flags\":[\"--red\"],\"description\":\"Input red band image file. Optionally specified if colour-composite not specified.\",\"parameter_type\":{\"ExistingFile\":\"Raster\"},\"default_value\":null,true"
            },
            "green": {
                "name": "Input Green Band File (optional; only if colour-composite not specified)",
                "flags": "green",
                "description": "Input green band image file. Optionally specified if colour-composite not specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "",
                "optional": "(optional; only if colour-composite not specified)\",\"flags\":[\"--green\"],\"description\":\"Input green band image file. Optionally specified if colour-composite not specified.\",\"parameter_type\":{\"ExistingFile\":\"Raster\"},\"default_value\":null,true"
            },
            "blue": {
                "name": "Input Blue Band File (optional; only if colour-composite not specified)",
                "flags": "blue",
                "description": "Input blue band image file. Optionally specified if colour-composite not specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "",
                "optional": "(optional; only if colour-composite not specified)\",\"flags\":[\"--blue\"],\"description\":\"Input blue band image file. Optionally specified if colour-composite not specified.\",\"parameter_type\":{\"ExistingFile\":\"Raster\"},\"default_value\":null,true"
            },
            "composite": {
                "name": "Input Colour-Composite Image File (optional; only if individual bands not specified)",
                "flags": "composite",
                "description": "Input colour-composite image file. Only used if individual bands are not specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "",
                "optional": "(optional; only if individual bands not specified)\",\"flags\":[\"--composite\"],\"description\":\"Input colour-composite image file. Only used if individual bands are not specified.\",\"parameter_type\":{\"ExistingFile\":\"Raster\"},\"default_value\":null,true"
            },
            "intensity": {
                "name": "Output Intensity File",
                "flags": "intensity",
                "description": "Output intensity raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "hue": {
                "name": "Output Hue File",
                "flags": "hue",
                "description": "Output hue raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "saturation": {
                "name": "Output Saturation File",
                "flags": "saturation",
                "description": "Output saturation raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "SplitColourComposite": {
        "name": "SplitColourComposite",
        "Name": "Splitcolourcomposite",
        "category": "Image Processing Tools",
        "label": "Split Colour Composite",
        "description": "This tool splits an RGB colour composite image into seperate multispectral images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/split_colour_composite.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#SplitColourComposite",
        "parameters": {
            "i": {
                "name": "Input Colour Composite Image File",
                "flags": "i",
                "description": "Input colour composite image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "red": {
                "name": "Output Red Band File",
                "flags": "red",
                "description": "Output red band file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "green": {
                "name": "Output Green Band File",
                "flags": "green",
                "description": "Output green band file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "blue": {
                "name": "Output Blue Band File",
                "flags": "blue",
                "description": "Output blue band file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "ThickenRasterLine": {
        "name": "ThickenRasterLine",
        "Name": "Thickenrasterline",
        "category": "Image Processing Tools",
        "label": "Thicken Raster Line",
        "description": "Thickens single-cell wide lines within a raster image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/thicken_line.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#ThickenRasterLine",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "TophatTransform": {
        "name": "TophatTransform",
        "Name": "Tophattransform",
        "category": "Image Processing Tools",
        "label": "Tophat Transform",
        "description": "Performs either a white or black top-hat transform on an input image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/tophat.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#TophatTransform",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "variant": {
                "name": "Variant",
                "flags": "variant",
                "description": "Optional variant value. Options include 'white' and 'black'.",
                "parameter_type": {
                    "OptionList": [
                        "white",
                        "black"
                    ]
                },
                "default_value": "\"white\"",
                "optional": "true"
            }
        }
    },
    "WriteFunctionMemoryInsertion": {
        "name": "WriteFunctionMemoryInsertion",
        "Name": "Writefunctionmemoryinsertion",
        "category": "Image Processing Tools",
        "label": "Write Function Memory Insertion",
        "description": "Performs a write function memory insertion for single-band multi-date change detection.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/write_func_memory_insertion.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#WriteFunctionMemoryInsertion",
        "parameters": {
            "input1": {
                "name": "First Date Input File",
                "flags": "input1",
                "description": "Input raster file associated with the first date.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Second Date Input File",
                "flags": "input2",
                "description": "Input raster file associated with the second date.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input3": {
                "name": "Third Date Input File (Optional)",
                "flags": "input3",
                "description": "Optional input raster file associated with the third date.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "EvaluateTrainingSites": {
        "name": "EvaluateTrainingSites",
        "Name": "Evaluatetrainingsites",
        "category": "Image Processing Tools",
        "label": "Evaluate Training Sites",
        "description": "This tool can be used to inspect the overlap in spectral signatures of training sites for various classes.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#EvaluateTrainingSites",
        "parameters": {
            "inputs": {
                "name": "Input Band Images",
                "flags": "inputs",
                "description": "Name of the input band images.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "polys": {
                "name": "Input Training Polygons",
                "flags": "polys",
                "description": "Name of the input training site polygons shapefile.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygons"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "field": {
                "name": "Class Name Field",
                "flags": "field",
                "description": "Name of the attribute containing class name data.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output File (*.html)",
                "flags": "output",
                "description": "Name of the output report file (*.html).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false,"
            }
        }
    },
    "ImageSegmentation": {
        "name": "ImageSegmentation",
        "Name": "Imagesegmentation",
        "category": "Image Processing Tools",
        "label": "Image Segmentation",
        "description": "Performs a region-growing based segmentation on a set of multi-spectral images.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#ImageSegmentation",
        "parameters": {
            "inputs": {
                "name": "Input Band Images",
                "flags": "inputs",
                "description": "Names of the input band images.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output Raster File",
                "flags": "output",
                "description": "Name of the output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "threshold": {
                "name": "Distance Threshold (z-scores)",
                "flags": "threshold",
                "description": "Distance threshold, in z-scores.",
                "parameter_type": "Float",
                "default_value": "\"0.5\"",
                "optional": "true,"
            },
            "steps": {
                "name": "Number of Steps",
                "flags": "steps",
                "description": "Number of steps.",
                "parameter_type": "Integer",
                "default_value": "\"10\"",
                "optional": "true,"
            },
            "min_area": {
                "name": "Min. Object Area (in grid cells)",
                "flags": "min_area",
                "description": "Minimum object area, in grid cells (1-8).",
                "parameter_type": "Integer",
                "default_value": "\"4\"",
                "optional": "true,"
            }
        }
    },
    "KMeansClustering": {
        "name": "KMeansClustering",
        "Name": "Kmeansclustering",
        "category": "Image Processing Tools",
        "label": "K Means Clustering",
        "description": "Performs a k-means clustering operation on a multi-spectral dataset.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/k_means_clustering.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#KMeansClustering",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Raster File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_html": {
                "name": "Output HTML Report File",
                "flags": "out_html",
                "description": "Output HTML report file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "true"
            },
            "classes": {
                "name": "Num. Classes (k)",
                "flags": "classes",
                "description": "Number of classes",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "false"
            },
            "max_iterations": {
                "name": "Max. Iterations",
                "flags": "max_iterations",
                "description": "Maximum number of iterations",
                "parameter_type": "Integer",
                "default_value": "\"10\"",
                "optional": "true"
            },
            "class_change": {
                "name": "Percent Class Change Threshold",
                "flags": "class_change",
                "description": "Minimum percent of cells changed between iterations before completion",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            },
            "initialize": {
                "name": "How to Initialize Cluster Centres?",
                "flags": "initialize",
                "description": "How to initialize cluster centres?",
                "parameter_type": {
                    "OptionList": [
                        "diagonal",
                        "random"
                    ]
                },
                "default_value": "\"diagonal\"",
                "optional": "true"
            },
            "min_class_size": {
                "name": "Min. Class Size",
                "flags": "min_class_size",
                "description": "Minimum class size, in pixels",
                "parameter_type": "Integer",
                "default_value": "\"10\"",
                "optional": "true"
            }
        }
    },
    "MinDistClassification": {
        "name": "MinDistClassification",
        "Name": "Mindistclassification",
        "category": "Image Processing Tools",
        "label": "Min Dist Classification",
        "description": "Performs a supervised minimum-distance classification using training site polygons and multi-spectral images.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#MinDistClassification",
        "parameters": {
            "inputs": {
                "name": "Input Band Images",
                "flags": "inputs",
                "description": "Names of the input band images.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "polys": {
                "name": "Input Training Polygons",
                "flags": "polys",
                "description": "Name of the input training site polygons shapefile.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygons"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "field": {
                "name": "Class Name Field",
                "flags": "field",
                "description": "Name of the attribute containing class name data.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output Raster File",
                "flags": "output",
                "description": "Name of the output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "threshold": {
                "name": "Distance Threshold (z-scores; blank for none)",
                "flags": "threshold",
                "description": "Distance threshold, in z-scores; blank for none.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true,"
            }
        }
    },
    "ModifiedKMeansClustering": {
        "name": "ModifiedKMeansClustering",
        "Name": "Modifiedkmeansclustering",
        "category": "Image Processing Tools",
        "label": "Modified K Means Clustering",
        "description": "Performs a modified k-means clustering operation on a multi-spectral dataset.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/modified_k_means_clustering.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#ModifiedKMeansClustering",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Raster File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_html": {
                "name": "Output HTML Report File",
                "flags": "out_html",
                "description": "Output HTML report file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "true"
            },
            "start_clusters": {
                "name": "Initial Num. of Clusters",
                "flags": "start_clusters",
                "description": "Initial number of clusters",
                "parameter_type": "Integer",
                "default_value": "\"1000\"",
                "optional": "true"
            },
            "merge_dist": {
                "name": "Cluster Merger Distance",
                "flags": "merge_dist",
                "description": "Cluster merger distance",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "max_iterations": {
                "name": "Max. Iterations",
                "flags": "max_iterations",
                "description": "Maximum number of iterations",
                "parameter_type": "Integer",
                "default_value": "\"10\"",
                "optional": "true"
            },
            "class_change": {
                "name": "Percent Class Change Threshold",
                "flags": "class_change",
                "description": "Minimum percent of cells changed between iterations before completion",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            }
        }
    },
    "ParallelepipedClassification": {
        "name": "ParallelepipedClassification",
        "Name": "Parallelepipedclassification",
        "category": "Image Processing Tools",
        "label": "Parallelepiped Classification",
        "description": "Performs a supervised parallelepiped classification using training site polygons and multi-spectral images.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#ParallelepipedClassification",
        "parameters": {
            "inputs": {
                "name": "Input Band Images",
                "flags": "inputs",
                "description": "Name of the input band images.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "polys": {
                "name": "Input Training Polygons",
                "flags": "polys",
                "description": "Name of the input training site polygons shapefile.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygons"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "field": {
                "name": "Class Name Field",
                "flags": "field",
                "description": "Name of the attribute containing class name data.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output Raster File",
                "flags": "output",
                "description": "Name of the output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            }
        }
    },
    "AdaptiveFilter": {
        "name": "AdaptiveFilter",
        "Name": "Adaptivefilter",
        "category": "Image Processing Tools",
        "label": "Adaptive Filter",
        "description": "Performs an adaptive filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/adaptive_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#AdaptiveFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "threshold": {
                "name": "Difference From Mean Threshold (# Std. Dev.)",
                "flags": "threshold",
                "description": "Difference from mean threshold, in standard deviations.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            }
        }
    },
    "BilateralFilter": {
        "name": "BilateralFilter",
        "Name": "Bilateralfilter",
        "category": "Image Processing Tools",
        "label": "Bilateral Filter",
        "description": "A bilateral filter is an edge-preserving smoothing filter introduced by Tomasi and Manduchi (1998).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/bilateral_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#BilateralFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "sigma_dist": {
                "name": "Distance Standard Deviation (pixels)",
                "flags": "sigma_dist",
                "description": "Standard deviation in distance in pixels.",
                "parameter_type": "Float",
                "default_value": "\"0.75\"",
                "optional": "true"
            },
            "sigma_int": {
                "name": "Intensity Standard Deviation (intensity units)",
                "flags": "sigma_int",
                "description": "Standard deviation in intensity in pixels.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            }
        }
    },
    "CannyEdgeDetection": {
        "name": "CannyEdgeDetection",
        "Name": "Cannyedgedetection",
        "category": "Image Processing Tools",
        "label": "Canny Edge Detection",
        "description": "This tool performs a Canny edge-detection filter on an input image.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#CannyEdgeDetection",
        "parameters": {
            "i": {
                "name": "Input Raster Image",
                "flags": "i",
                "description": "Name of the input raster image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output Raster Image",
                "flags": "output",
                "description": "Name of the output raster image file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "sigma": {
                "name": "Sigma Value",
                "flags": "sigma",
                "description": "Sigma value used in Gaussian filtering, default = 0.5",
                "parameter_type": "Float",
                "default_value": "\"0.5\"",
                "optional": "true,"
            },
            "low": {
                "name": "Low Threshold",
                "flags": "low",
                "description": "Low threshold, default = 0.05",
                "parameter_type": "Float",
                "default_value": "\"0.05\"",
                "optional": "true,"
            },
            "high": {
                "name": "High Threshold",
                "flags": "high",
                "description": "High threshold, default = 0.15",
                "parameter_type": "Float",
                "default_value": "\"0.15\"",
                "optional": "true,"
            },
            "add_back": {
                "name": "Add edge back to the image?",
                "flags": "add_back",
                "description": "Add the edge cells back to the input image",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true,"
            }
        }
    },
    "ConservativeSmoothingFilter": {
        "name": "ConservativeSmoothingFilter",
        "Name": "Conservativesmoothingfilter",
        "category": "Image Processing Tools",
        "label": "Conservative Smoothing Filter",
        "description": "Performs a conservative-smoothing filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/conservative_smoothing_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#ConservativeSmoothingFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"3\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"3\"",
                "optional": "true"
            }
        }
    },
    "CornerDetection": {
        "name": "CornerDetection",
        "Name": "Cornerdetection",
        "category": "Image Processing Tools",
        "label": "Corner Detection",
        "description": "Identifies corner patterns in boolean images using hit-and-miss pattern matching.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/corner_detection.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#CornerDetection",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input boolean image.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "DiffOfGaussianFilter": {
        "name": "DiffOfGaussianFilter",
        "Name": "Diffofgaussianfilter",
        "category": "Image Processing Tools",
        "label": "Diff Of Gaussian Filter",
        "description": "Performs a Difference of Gaussian (DoG) filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/dog_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#DiffOfGaussianFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "sigma1": {
                "name": "Sigma 1 (pixels)",
                "flags": "sigma1",
                "description": "Standard deviation distance in pixels.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            },
            "sigma2": {
                "name": "Sigma 2 (pixels)",
                "flags": "sigma2",
                "description": "Standard deviation distance in pixels.",
                "parameter_type": "Float",
                "default_value": "\"4.0\"",
                "optional": "true"
            }
        }
    },
    "DiversityFilter": {
        "name": "DiversityFilter",
        "Name": "Diversityfilter",
        "category": "Image Processing Tools",
        "label": "Diversity Filter",
        "description": "Assigns each cell in the output grid the number of different values in a moving window centred on each grid cell in the input raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/diversity_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#DiversityFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "EdgePreservingMeanFilter": {
        "name": "EdgePreservingMeanFilter",
        "Name": "Edgepreservingmeanfilter",
        "category": "Image Processing Tools",
        "label": "Edge Preserving Mean Filter",
        "description": "Performs a simple edge-preserving mean filter on an input image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/edge_preserving_mean_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#EdgePreservingMeanFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filter": {
                "name": "Filter Size",
                "flags": "filter",
                "description": "Size of the filter kernel.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "threshold": {
                "name": "Value Difference Threshold",
                "flags": "threshold",
                "description": "Maximum difference in values.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "EmbossFilter": {
        "name": "EmbossFilter",
        "Name": "Embossfilter",
        "category": "Image Processing Tools",
        "label": "Emboss Filter",
        "description": "Performs an emboss filter on an image, similar to a hillshade operation.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/emboss_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#EmbossFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "direction": {
                "name": "Direction",
                "flags": "direction",
                "description": "Direction of reflection; options include 'n', 's', 'e', 'w', 'ne', 'se', 'nw', 'sw'",
                "parameter_type": {
                    "OptionList": [
                        "n",
                        "s",
                        "e",
                        "w",
                        "ne",
                        "se",
                        "nw",
                        "sw"
                    ]
                },
                "default_value": "\"n\"",
                "optional": "true"
            },
            "clip": {
                "name": "Percent to clip the distribution tails",
                "flags": "clip",
                "description": "Optional amount to clip the distribution tails by, in percent.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "FastAlmostGaussianFilter": {
        "name": "FastAlmostGaussianFilter",
        "Name": "Fastalmostgaussianfilter",
        "category": "Image Processing Tools",
        "label": "Fast Almost Gaussian Filter",
        "description": "Performs a fast approximate Gaussian filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/fast_almost_gaussian_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#FastAlmostGaussianFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "sigma": {
                "name": "Standard Deviation (pixels)",
                "flags": "sigma",
                "description": "Standard deviation distance in pixels.",
                "parameter_type": "Float",
                "default_value": "\"1.8\"",
                "optional": "false"
            }
        }
    },
    "GaussianFilter": {
        "name": "GaussianFilter",
        "Name": "Gaussianfilter",
        "category": "Image Processing Tools",
        "label": "Gaussian Filter",
        "description": "Performs a Gaussian filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/gaussian_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#GaussianFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "sigma": {
                "name": "Standard Deviation (pixels)",
                "flags": "sigma",
                "description": "Standard deviation distance in pixels.",
                "parameter_type": "Float",
                "default_value": "\"0.75\"",
                "optional": "false"
            }
        }
    },
    "HighPassFilter": {
        "name": "HighPassFilter",
        "Name": "Highpassfilter",
        "category": "Image Processing Tools",
        "label": "High Pass Filter",
        "description": "Performs a high-pass filter on an input image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/highpass_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#HighPassFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "HighPassMedianFilter": {
        "name": "HighPassMedianFilter",
        "Name": "Highpassmedianfilter",
        "category": "Image Processing Tools",
        "label": "High Pass Median Filter",
        "description": "Performs a high pass median filter on an input image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/highpass_median_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#HighPassMedianFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "sig_digits": {
                "name": "Number of Significant Digits",
                "flags": "sig_digits",
                "description": "Number of significant digits.",
                "parameter_type": "Integer",
                "default_value": "\"2\"",
                "optional": "true"
            }
        }
    },
    "KNearestMeanFilter": {
        "name": "KNearestMeanFilter",
        "Name": "Knearestmeanfilter",
        "category": "Image Processing Tools",
        "label": "K Nearest Mean Filter",
        "description": "A k-nearest mean filter is a type of edge-preserving smoothing filter.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/k_nearest_mean_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#KNearestMeanFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "k": {
                "name": "K-value (pixels)",
                "flags": "k",
                "description": "k-value in pixels; this is the number of nearest-valued neighbours to use.",
                "parameter_type": "Integer",
                "default_value": "\"5\"",
                "optional": "true"
            }
        }
    },
    "LaplacianFilter": {
        "name": "LaplacianFilter",
        "Name": "Laplacianfilter",
        "category": "Image Processing Tools",
        "label": "Laplacian Filter",
        "description": "Performs a Laplacian filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/laplacian_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#LaplacianFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "variant": {
                "name": "Variant",
                "flags": "variant",
                "description": "Optional variant value. Options include 3x3(1), 3x3(2), 3x3(3), 3x3(4), 5x5(1), and 5x5(2) (default is 3x3(1)).",
                "parameter_type": {
                    "OptionList": [
                        "3x3(1)",
                        "3x3(2)",
                        "3x3(3)",
                        "3x3(4)",
                        "5x5(1)",
                        "5x5(2)"
                    ]
                },
                "default_value": "\"3x3(1)\"",
                "optional": "true"
            },
            "clip": {
                "name": "Distribution Tail Clip Amount (%)",
                "flags": "clip",
                "description": "Optional amount to clip the distribution tails by, in percent.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "LaplacianOfGaussianFilter": {
        "name": "LaplacianOfGaussianFilter",
        "Name": "Laplacianofgaussianfilter",
        "category": "Image Processing Tools",
        "label": "Laplacian Of Gaussian Filter",
        "description": "Performs a Laplacian-of-Gaussian (LoG) filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/log_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#LaplacianOfGaussianFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "sigma": {
                "name": "Standard Deviation (Pixels)",
                "flags": "sigma",
                "description": "Standard deviation in pixels.",
                "parameter_type": "Float",
                "default_value": "\"0.75\"",
                "optional": "true"
            }
        }
    },
    "LeeSigmaFilter": {
        "name": "LeeSigmaFilter",
        "Name": "Leesigmafilter",
        "category": "Image Processing Tools",
        "label": "Lee Sigma Filter",
        "description": "Performs a Lee (Sigma) smoothing filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/lee_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#LeeSigmaFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "sigma": {
                "name": "Sigma",
                "flags": "sigma",
                "description": "Sigma value should be related to the standarad deviation of the distribution of image speckle noise.",
                "parameter_type": "Float",
                "default_value": "\"10.0\"",
                "optional": "true"
            },
            "m": {
                "name": "M-value",
                "flags": "m",
                "description": "M-threshold value the minimum allowable number of pixels within the intensity range",
                "parameter_type": "Float",
                "default_value": "\"5.0\"",
                "optional": "true"
            }
        }
    },
    "LineDetectionFilter": {
        "name": "LineDetectionFilter",
        "Name": "Linedetectionfilter",
        "category": "Image Processing Tools",
        "label": "Line Detection Filter",
        "description": "Performs a line-detection filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/line_detection_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#LineDetectionFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "variant": {
                "name": "Variant",
                "flags": "variant",
                "description": "Optional variant value. Options include 'v' (vertical), 'h' (horizontal), '45', and '135' (default is 'v').",
                "parameter_type": {
                    "OptionList": [
                        "vertical",
                        "horizontal",
                        "45",
                        "135"
                    ]
                },
                "default_value": "\"vertical\"",
                "optional": "true"
            },
            "absvals": {
                "name": "Output absolute values?",
                "flags": "absvals",
                "description": "Optional flag indicating whether outputs should be absolute values.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "clip": {
                "name": "Distribution Tail Clip Amount (%)",
                "flags": "clip",
                "description": "Optional amount to clip the distribution tails by, in percent.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "MajorityFilter": {
        "name": "MajorityFilter",
        "Name": "Majorityfilter",
        "category": "Image Processing Tools",
        "label": "Majority Filter",
        "description": "Assigns each cell in the output grid the most frequently occurring value (mode) in a moving window centred on each grid cell in the input raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/majority_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#MajorityFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "MaximumFilter": {
        "name": "MaximumFilter",
        "Name": "Maximumfilter",
        "category": "Image Processing Tools",
        "label": "Maximum Filter",
        "description": "Assigns each cell in the output grid the maximum value in a moving window centred on each grid cell in the input raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/max_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#MaximumFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "MeanFilter": {
        "name": "MeanFilter",
        "Name": "Meanfilter",
        "category": "Image Processing Tools",
        "label": "Mean Filter",
        "description": "Performs a mean filter (low-pass filter) on an input image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/mean_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#MeanFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"3\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"3\"",
                "optional": "true"
            }
        }
    },
    "MedianFilter": {
        "name": "MedianFilter",
        "Name": "Medianfilter",
        "category": "Image Processing Tools",
        "label": "Median Filter",
        "description": "Performs a median filter on an input image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/median_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#MedianFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "sig_digits": {
                "name": "Number of Significant Digits",
                "flags": "sig_digits",
                "description": "Number of significant digits.",
                "parameter_type": "Integer",
                "default_value": "\"2\"",
                "optional": "true"
            }
        }
    },
    "MinimumFilter": {
        "name": "MinimumFilter",
        "Name": "Minimumfilter",
        "category": "Image Processing Tools",
        "label": "Minimum Filter",
        "description": "Assigns each cell in the output grid the minimum value in a moving window centred on each grid cell in the input raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/min_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#MinimumFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "OlympicFilter": {
        "name": "OlympicFilter",
        "Name": "Olympicfilter",
        "category": "Image Processing Tools",
        "label": "Olympic Filter",
        "description": "Performs an olympic smoothing filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/olympic_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#OlympicFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "PercentileFilter": {
        "name": "PercentileFilter",
        "Name": "Percentilefilter",
        "category": "Image Processing Tools",
        "label": "Percentile Filter",
        "description": "Performs a percentile filter on an input image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/percentile_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#PercentileFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "sig_digits": {
                "name": "Number of Significant Digits",
                "flags": "sig_digits",
                "description": "Number of significant digits.",
                "parameter_type": "Integer",
                "default_value": "\"2\"",
                "optional": "true"
            }
        }
    },
    "PrewittFilter": {
        "name": "PrewittFilter",
        "Name": "Prewittfilter",
        "category": "Image Processing Tools",
        "label": "Prewitt Filter",
        "description": "Performs a Prewitt edge-detection filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/prewitt_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#PrewittFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "clip": {
                "name": "Distribution Tail Clip Amount (Percent)",
                "flags": "clip",
                "description": "Optional amount to clip the distribution tails by, in percent.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "RangeFilter": {
        "name": "RangeFilter",
        "Name": "Rangefilter",
        "category": "Image Processing Tools",
        "label": "Range Filter",
        "description": "Assigns each cell in the output grid the range of values in a moving window centred on each grid cell in the input raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/range_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#RangeFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "RobertsCrossFilter": {
        "name": "RobertsCrossFilter",
        "Name": "Robertscrossfilter",
        "category": "Image Processing Tools",
        "label": "Roberts Cross Filter",
        "description": "Performs a Robert's cross edge-detection filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/roberts_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#RobertsCrossFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "clip": {
                "name": "Distribution Tail Clip Amount (Percent)",
                "flags": "clip",
                "description": "Optional amount to clip the distribution tails by, in percent.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "ScharrFilter": {
        "name": "ScharrFilter",
        "Name": "Scharrfilter",
        "category": "Image Processing Tools",
        "label": "Scharr Filter",
        "description": "Performs a Scharr edge-detection filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/scharr_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#ScharrFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "clip": {
                "name": "Distribution Tail Clip Amount (Percent)",
                "flags": "clip",
                "description": "Optional amount to clip the distribution tails by, in percent.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "SobelFilter": {
        "name": "SobelFilter",
        "Name": "Sobelfilter",
        "category": "Image Processing Tools",
        "label": "Sobel Filter",
        "description": "Performs a Sobel edge-detection filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/sobel_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#SobelFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "variant": {
                "name": "Variant",
                "flags": "variant",
                "description": "Optional variant value. Options include 3x3 and 5x5 (default is 3x3).",
                "parameter_type": {
                    "OptionList": [
                        "3x3",
                        "5x5"
                    ]
                },
                "default_value": "\"3x3\"",
                "optional": "true"
            },
            "clip": {
                "name": "Clip Tails (%)",
                "flags": "clip",
                "description": "Optional amount to clip the distribution tails by, in percent (default is 0.0).",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "StandardDeviationFilter": {
        "name": "StandardDeviationFilter",
        "Name": "Standarddeviationfilter",
        "category": "Image Processing Tools",
        "label": "Standard Deviation Filter",
        "description": "Assigns each cell in the output grid the standard deviation of values in a moving window centred on each grid cell in the input raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/stdev_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#StandardDeviationFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "TotalFilter": {
        "name": "TotalFilter",
        "Name": "Totalfilter",
        "category": "Image Processing Tools",
        "label": "Total Filter",
        "description": "Performs a total filter on an input image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/total_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#TotalFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filterx": {
                "name": "Filter X-Dimension",
                "flags": "filterx",
                "description": "Size of the filter kernel in the x-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "filtery": {
                "name": "Filter Y-Dimension",
                "flags": "filtery",
                "description": "Size of the filter kernel in the y-direction.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            }
        }
    },
    "UnsharpMasking": {
        "name": "UnsharpMasking",
        "Name": "Unsharpmasking",
        "category": "Image Processing Tools",
        "label": "Unsharp Masking",
        "description": "An image sharpening technique that enhances edges.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/unsharp_masking.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#UnsharpMasking",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "sigma": {
                "name": "Standard Deviation (pixels)",
                "flags": "sigma",
                "description": "Standard deviation distance in pixels.",
                "parameter_type": "Float",
                "default_value": "\"0.75\"",
                "optional": "true"
            },
            "amount": {
                "name": "Amount (%)",
                "flags": "amount",
                "description": "A percentage and controls the magnitude of each overshoot.",
                "parameter_type": "Float",
                "default_value": "\"100.0\"",
                "optional": "true"
            },
            "threshold": {
                "name": "Threshold",
                "flags": "threshold",
                "description": "Controls the minimal brightness change that will be sharpened.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            }
        }
    },
    "UserDefinedWeightsFilter": {
        "name": "UserDefinedWeightsFilter",
        "Name": "Userdefinedweightsfilter",
        "category": "Image Processing Tools",
        "label": "User Defined Weights Filter",
        "description": "Performs a user-defined weights filter on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/user_defined_weights_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#UserDefinedWeightsFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "weights": {
                "name": "Input Weights File",
                "flags": "weights",
                "description": "Input weights file.",
                "parameter_type": {
                    "ExistingFile": "Csv"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "center": {
                "name": "Kernel Center",
                "flags": "center",
                "description": "Kernel center cell; options include 'center', 'upper-left', 'upper-right', 'lower-left', 'lower-right'",
                "parameter_type": {
                    "OptionList": [
                        "center",
                        "upper-left",
                        "upper-right",
                        "lower-left",
                        "lower-right"
                    ]
                },
                "default_value": "\"center\"",
                "optional": "true"
            },
            "normalize": {
                "name": "Normalize kernel weights?",
                "flags": "normalize",
                "description": "Normalize kernel weights? This can reduce edge effects and lessen the impact of data gaps (nodata) but is not suited when the kernel weights sum to zero.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "BalanceContrastEnhancement": {
        "name": "BalanceContrastEnhancement",
        "Name": "Balancecontrastenhancement",
        "category": "Image Processing Tools",
        "label": "Balance Contrast Enhancement",
        "description": "Performs a balance contrast enhancement on a colour-composite image of multispectral data.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/balance_contrast_enhancement.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#BalanceContrastEnhancement",
        "parameters": {
            "i": {
                "name": "Input Colour Composite Image File",
                "flags": "i",
                "description": "Input colour composite image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "band_mean": {
                "name": "Band Mean Value",
                "flags": "band_mean",
                "description": "Band mean value.",
                "parameter_type": "Float",
                "default_value": "\"100.0\"",
                "optional": "true"
            }
        }
    },
    "CorrectVignetting": {
        "name": "CorrectVignetting",
        "Name": "Correctvignetting",
        "category": "Image Processing Tools",
        "label": "Correct Vignetting",
        "description": "Corrects the darkening of images towards corners.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/correct_vignetting.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#CorrectVignetting",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "pp": {
                "name": "Input Principal Point File",
                "flags": "pp",
                "description": "Input principal point file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "focal_length": {
                "name": "Camera Focal Length (mm)",
                "flags": "focal_length",
                "description": "Camera focal length, in millimeters.",
                "parameter_type": "Float",
                "default_value": "\"304.8\"",
                "optional": "true"
            },
            "image_width": {
                "name": "Distance Between Left-Right Edges (mm)",
                "flags": "image_width",
                "description": "Distance between photograph edges, in millimeters.",
                "parameter_type": "Float",
                "default_value": "\"228.6\"",
                "optional": "true"
            },
            "n": {
                "name": "n Parameter",
                "flags": "n",
                "description": "The 'n' parameter.",
                "parameter_type": "Float",
                "default_value": "\"4.0\"",
                "optional": "true"
            }
        }
    },
    "DirectDecorrelationStretch": {
        "name": "DirectDecorrelationStretch",
        "Name": "Directdecorrelationstretch",
        "category": "Image Processing Tools",
        "label": "Direct Decorrelation Stretch",
        "description": "Performs a direct decorrelation stretch enhancement on a colour-composite image of multispectral data.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/direct_decorrelation_stretch.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#DirectDecorrelationStretch",
        "parameters": {
            "i": {
                "name": "Input Colour Composite Image File",
                "flags": "i",
                "description": "Input colour composite image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "k": {
                "name": "Achromatic Factor (0-1)",
                "flags": "k",
                "description": "Achromatic factor (k) ranges between 0 (no effect) and 1 (full saturation stretch), although typical values range from 0.3 to 0.7.",
                "parameter_type": "Float",
                "default_value": "\"0.5\"",
                "optional": "true"
            },
            "clip": {
                "name": "Percent to clip the upper tail",
                "flags": "clip",
                "description": "Optional percent to clip the upper tail by during the stretch.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            }
        }
    },
    "GammaCorrection": {
        "name": "GammaCorrection",
        "Name": "Gammacorrection",
        "category": "Image Processing Tools",
        "label": "Gamma Correction",
        "description": "Performs a gamma correction on an input images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/gamma_correction.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#GammaCorrection",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "gamma": {
                "name": "Gamma Value",
                "flags": "gamma",
                "description": "Gamma value.",
                "parameter_type": "Float",
                "default_value": "\"0.5\"",
                "optional": "true"
            }
        }
    },
    "GaussianContrastStretch": {
        "name": "GaussianContrastStretch",
        "Name": "Gaussiancontraststretch",
        "category": "Image Processing Tools",
        "label": "Gaussian Contrast Stretch",
        "description": "Performs a Gaussian contrast stretch on input images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/gaussian_contrast_stretch.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#GaussianContrastStretch",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "num_tones": {
                "name": "Number of Tones",
                "flags": "num_tones",
                "description": "Number of tones in the output image.",
                "parameter_type": "Integer",
                "default_value": "\"256\"",
                "optional": "false"
            }
        }
    },
    "HistogramEqualization": {
        "name": "HistogramEqualization",
        "Name": "Histogramequalization",
        "category": "Image Processing Tools",
        "label": "Histogram Equalization",
        "description": "Performs a histogram equalization contrast enhancment on an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/histogram_equalization.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#HistogramEqualization",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "num_tones": {
                "name": "Number of Tones",
                "flags": "num_tones",
                "description": "Number of tones in the output image.",
                "parameter_type": "Integer",
                "default_value": "\"256\"",
                "optional": "false"
            }
        }
    },
    "HistogramMatching": {
        "name": "HistogramMatching",
        "Name": "Histogrammatching",
        "category": "Image Processing Tools",
        "label": "Histogram Matching",
        "description": "Alters the statistical distribution of a raster image matching it to a specified PDF.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/histogram_matching.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#HistogramMatching",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "histo_file": {
                "name": "Input Probability Distribution Function (PDF) Text File",
                "flags": "histo_file",
                "description": "Input reference probability distribution function (pdf) text file.",
                "parameter_type": {
                    "ExistingFile": "Text"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "HistogramMatchingTwoImages": {
        "name": "HistogramMatchingTwoImages",
        "Name": "Histogrammatchingtwoimages",
        "category": "Image Processing Tools",
        "label": "Histogram Matching Two Images",
        "description": "This tool alters the cumulative distribution function of a raster image to that of another image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/histogram_matching_two_images.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#HistogramMatchingTwoImages",
        "parameters": {
            "input1": {
                "name": "Input File To Modify",
                "flags": "input1",
                "description": "Input raster file to modify.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input Reference File",
                "flags": "input2",
                "description": "Input reference raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "MinMaxContrastStretch": {
        "name": "MinMaxContrastStretch",
        "Name": "Minmaxcontraststretch",
        "category": "Image Processing Tools",
        "label": "Min Max Contrast Stretch",
        "description": "Performs a min-max contrast stretch on an input greytone image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/min_max_contrast_stretch.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#MinMaxContrastStretch",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "min_val": {
                "name": "Lower Tail Clip Value",
                "flags": "min_val",
                "description": "Lower tail clip value.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "max_val": {
                "name": "Upper Tail Clip Value",
                "flags": "max_val",
                "description": "Upper tail clip value.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "num_tones": {
                "name": "Number of Tones",
                "flags": "num_tones",
                "description": "Number of tones in the output image.",
                "parameter_type": "Integer",
                "default_value": "\"256\"",
                "optional": "false"
            }
        }
    },
    "PanchromaticSharpening": {
        "name": "PanchromaticSharpening",
        "Name": "Panchromaticsharpening",
        "category": "Image Processing Tools",
        "label": "Panchromatic Sharpening",
        "description": "Increases the spatial resolution of image data by combining multispectral bands with panchromatic data.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/pan_sharpening.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#PanchromaticSharpening",
        "parameters": {
            "red": {
                "name": "Input Red Band File (optional; only if colour-composite not specified)",
                "flags": "red",
                "description": "Input red band image file. Optionally specified if colour-composite not specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "",
                "optional": "(optional; only if colour-composite not specified)\",\"flags\":[\"--red\"],\"description\":\"Input red band image file. Optionally specified if colour-composite not specified.\",\"parameter_type\":{\"ExistingFile\":\"Raster\"},\"default_value\":null,true"
            },
            "green": {
                "name": "Input Green Band File (optional; only if colour-composite not specified)",
                "flags": "green",
                "description": "Input green band image file. Optionally specified if colour-composite not specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "",
                "optional": "(optional; only if colour-composite not specified)\",\"flags\":[\"--green\"],\"description\":\"Input green band image file. Optionally specified if colour-composite not specified.\",\"parameter_type\":{\"ExistingFile\":\"Raster\"},\"default_value\":null,true"
            },
            "blue": {
                "name": "Input Blue Band File (optional; only if colour-composite not specified)",
                "flags": "blue",
                "description": "Input blue band image file. Optionally specified if colour-composite not specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "",
                "optional": "(optional; only if colour-composite not specified)\",\"flags\":[\"--blue\"],\"description\":\"Input blue band image file. Optionally specified if colour-composite not specified.\",\"parameter_type\":{\"ExistingFile\":\"Raster\"},\"default_value\":null,true"
            },
            "composite": {
                "name": "Input Colour-Composite Image File (optional; only if individual bands not specified)",
                "flags": "composite",
                "description": "Input colour-composite image file. Only used if individual bands are not specified.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "",
                "optional": "(optional; only if individual bands not specified)\",\"flags\":[\"--composite\"],\"description\":\"Input colour-composite image file. Only used if individual bands are not specified.\",\"parameter_type\":{\"ExistingFile\":\"Raster\"},\"default_value\":null,true"
            },
            "pan": {
                "name": "Input Panchromatic Band File",
                "flags": "pan",
                "description": "Input panchromatic band file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Colour Composite File",
                "flags": "output",
                "description": "Output colour composite file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "method": {
                "name": "Pan-Sharpening Method",
                "flags": "method",
                "description": "Options include 'brovey' (default) and 'ihs'",
                "parameter_type": {
                    "OptionList": [
                        "brovey",
                        "ihs"
                    ]
                },
                "default_value": "\"brovey\"",
                "optional": "true"
            }
        }
    },
    "PercentageContrastStretch": {
        "name": "PercentageContrastStretch",
        "Name": "Percentagecontraststretch",
        "category": "Image Processing Tools",
        "label": "Percentage Contrast Stretch",
        "description": "Performs a percentage linear contrast stretch on input images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/percentage_contrast_stretch.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#PercentageContrastStretch",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "clip": {
                "name": "Distribution Tail Clip Amount (%)",
                "flags": "clip",
                "description": "Optional amount to clip the distribution tails by, in percent.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "tail": {
                "name": "Tail",
                "flags": "tail",
                "description": "Specified which tails to clip; options include 'upper', 'lower', and 'both' (default is 'both').",
                "parameter_type": {
                    "OptionList": [
                        "upper",
                        "lower",
                        "both"
                    ]
                },
                "default_value": "\"both\"",
                "optional": "true"
            },
            "num_tones": {
                "name": "Number of Tones",
                "flags": "num_tones",
                "description": "Number of tones in the output image.",
                "parameter_type": "Integer",
                "default_value": "\"256\"",
                "optional": "false"
            }
        }
    },
    "SigmoidalContrastStretch": {
        "name": "SigmoidalContrastStretch",
        "Name": "Sigmoidalcontraststretch",
        "category": "Image Processing Tools",
        "label": "Sigmoidal Contrast Stretch",
        "description": "Performs a sigmoidal contrast stretch on input images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/sigmoidal_contrast_stretch.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#SigmoidalContrastStretch",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "cutoff": {
                "name": "Cutoff Value (0.0 - 0.95)",
                "flags": "cutoff",
                "description": "Cutoff value between 0.0 and 0.95.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            },
            "gain": {
                "name": "Gain Value",
                "flags": "gain",
                "description": "Gain value.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "false"
            },
            "num_tones": {
                "name": "Number of Tones",
                "flags": "num_tones",
                "description": "Number of tones in the output image.",
                "parameter_type": "Integer",
                "default_value": "\"256\"",
                "optional": "false"
            }
        }
    },
    "StandardDeviationContrastStretch": {
        "name": "StandardDeviationContrastStretch",
        "Name": "Standarddeviationcontraststretch",
        "category": "Image Processing Tools",
        "label": "Standard Deviation Contrast Stretch",
        "description": "Performs a standard-deviation contrast stretch on input images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/image_analysis/stdev_contrast_stretch.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/image_processing_tools.html#StandardDeviationContrastStretch",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "stdev": {
                "name": "Standard Deviation Threshold",
                "flags": "stdev",
                "description": "Standard deviation clip value.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "false"
            },
            "num_tones": {
                "name": "Number of Tones",
                "flags": "num_tones",
                "description": "Number of tones in the output image.",
                "parameter_type": "Integer",
                "default_value": "\"256\"",
                "optional": "false"
            }
        }
    },
    "AsciiToLas": {
        "name": "AsciiToLas",
        "Name": "Asciitolas",
        "category": "LiDAR Tools",
        "label": "Ascii To Las",
        "description": "Converts one or more ASCII files containing LiDAR points into LAS files.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/ascii_to_las.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#AsciiToLas",
        "parameters": {
            "inputs": {
                "name": "Input LiDAR point ASCII Files (.csv)",
                "flags": "inputs",
                "description": "Input LiDAR  ASCII files (.csv).",
                "parameter_type": {
                    "FileList": "Csv"
                },
                "default_value": "null",
                "optional": "false"
            },
            "pattern": {
                "name": "Pattern",
                "flags": "pattern",
                "description": "Input field pattern.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "false"
            },
            "proj": {
                "name": "Well-known-text (WKT) string or EPSG code",
                "flags": "proj",
                "description": "Well-known-text string or EPSG code describing projection.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "ClassifyBuildingsInLidar": {
        "name": "ClassifyBuildingsInLidar",
        "Name": "Classifybuildingsinlidar",
        "category": "LiDAR Tools",
        "label": "Classify Buildings In Lidar",
        "description": "Reclassifies a LiDAR points that lie within vector building footprints.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/classify_buildings.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#ClassifyBuildingsInLidar",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "buildings": {
                "name": "Input Building Polygon File",
                "flags": "buildings",
                "description": "Input vector polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ClassifyOverlapPoints": {
        "name": "ClassifyOverlapPoints",
        "Name": "Classifyoverlappoints",
        "category": "LiDAR Tools",
        "label": "Classify Overlap Points",
        "description": "Classifies or filters LAS points in regions of overlapping flight lines.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/classify_overlap_points.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#ClassifyOverlapPoints",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "resolution": {
                "name": "Sample Resolution",
                "flags": "resolution",
                "description": "The size of the square area used to evaluate nearby points in the LiDAR data.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            },
            "filter": {
                "name": "Filter out points from overlapping flightlines?",
                "flags": "filter",
                "description": "Filter out points from overlapping flightlines? If false, overlaps will simply be classified.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "ClipLidarToPolygon": {
        "name": "ClipLidarToPolygon",
        "Name": "Cliplidartopolygon",
        "category": "LiDAR Tools",
        "label": "Clip Lidar To Polygon",
        "description": "Clips a LiDAR point cloud to a vector polygon or polygons.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/clip_lidar_to_polygon.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#ClipLidarToPolygon",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "polygons": {
                "name": "Input Vector Polygon File",
                "flags": "polygons",
                "description": "Input vector polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ErasePolygonFromLidar": {
        "name": "ErasePolygonFromLidar",
        "Name": "Erasepolygonfromlidar",
        "category": "LiDAR Tools",
        "label": "Erase Polygon From Lidar",
        "description": "Erases (cuts out) a vector polygon or polygons from a LiDAR point cloud.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/erase_polygon_from_lidar.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#ErasePolygonFromLidar",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "polygons": {
                "name": "Input Vector Polygon File",
                "flags": "polygons",
                "description": "Input vector polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "FilterLidarClasses": {
        "name": "FilterLidarClasses",
        "Name": "Filterlidarclasses",
        "category": "LiDAR Tools",
        "label": "Filter Lidar Classes",
        "description": "Removes points in a LAS file with certain specified class values.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/filter_lidar_classes.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#FilterLidarClasses",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "exclude_cls": {
                "name": "Exclusion Classes (0-18, based on LAS spec; e.g. 7,18)",
                "flags": "exclude_cls",
                "description": "Optional exclude classes from interpolation; Valid class values range from 0 to 18, based on LAS specifications. Example, --exclude_cls='3,4,5,6,7,18'.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "FilterLidarScanAngles": {
        "name": "FilterLidarScanAngles",
        "Name": "Filterlidarscanangles",
        "category": "LiDAR Tools",
        "label": "Filter Lidar Scan Angles",
        "description": "Removes points in a LAS file with scan angles greater than a threshold.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/filter_lidar_scan_angles.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#FilterLidarScanAngles",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "threshold": {
                "name": "Threshold (degrees)",
                "flags": "threshold",
                "description": "Scan angle threshold.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "FindFlightlineEdgePoints": {
        "name": "FindFlightlineEdgePoints",
        "Name": "Findflightlineedgepoints",
        "category": "LiDAR Tools",
        "label": "Find Flightline Edge Points",
        "description": "Identifies points along a flightline's edge in a LAS file.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/find_flightline_edge_points.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#FindFlightlineEdgePoints",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "FlightlineOverlap": {
        "name": "FlightlineOverlap",
        "Name": "Flightlineoverlap",
        "category": "LiDAR Tools",
        "label": "Flightline Overlap",
        "description": "Reads a LiDAR (LAS) point file and outputs a raster containing the number of overlapping flight lines in each grid cell.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/flightline_overlap.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#FlightlineOverlap",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            }
        }
    },
    "HeightAboveGround": {
        "name": "HeightAboveGround",
        "Name": "Heightaboveground",
        "category": "LiDAR Tools",
        "label": "Height Above Ground",
        "description": "Normalizes a LiDAR point cloud, providing the height above the nearest ground-classified point.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/height_above_ground.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#HeightAboveGround",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file (including extension).",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file (including extension).",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LasToAscii": {
        "name": "LasToAscii",
        "Name": "Lastoascii",
        "category": "LiDAR Tools",
        "label": "Las To Ascii",
        "description": "Converts one or more LAS files into ASCII text files.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/las_to_ascii.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LasToAscii",
        "parameters": {
            "inputs": {
                "name": "Input LiDAR Files",
                "flags": "inputs",
                "description": "Input LiDAR files.",
                "parameter_type": {
                    "FileList": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "LasToMultipointShapefile": {
        "name": "LasToMultipointShapefile",
        "Name": "Lastomultipointshapefile",
        "category": "LiDAR Tools",
        "label": "Las To Multipoint Shapefile",
        "description": "Converts one or more LAS files into MultipointZ vector Shapefiles. When the input parameter is not specified, the tool grids all LAS files contained within the working directory.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/las_to_multipoint_shapefile.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LasToMultipointShapefile",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LasToShapefile": {
        "name": "LasToShapefile",
        "Name": "Lastoshapefile",
        "category": "LiDAR Tools",
        "label": "Las To Shapefile",
        "description": "Converts one or more LAS files into a vector Shapefile of POINT ShapeType.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/las_to_shapefile.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LasToShapefile",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LasToZlidar": {
        "name": "LasToZlidar",
        "Name": "Lastozlidar",
        "category": "LiDAR Tools",
        "label": "Las To Zlidar",
        "description": "Converts one or more LAS files into the zlidar compressed LiDAR data format.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/las_to_zlidar.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LasToZlidar",
        "parameters": {
            "inputs": {
                "name": "Input LAS Files",
                "flags": "inputs",
                "description": "Input LAS files.",
                "parameter_type": {
                    "FileList": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "outdir": {
                "name": "Output Directory",
                "flags": "outdir",
                "description": "Output directory into which zlidar files are created. If unspecified, it is assumed to be the same as the inputs.",
                "parameter_type": "Directory",
                "default_value": "null",
                "optional": "true"
            },
            "compress": {
                "name": "Compression Method",
                "flags": "compress",
                "description": "Compression method, including 'brotli' and 'deflate'.",
                "parameter_type": {
                    "OptionList": [
                        "brotli",
                        "deflate"
                    ]
                },
                "default_value": "\"brotli\"",
                "optional": "true"
            },
            "level": {
                "name": "Compression Level",
                "flags": "level",
                "description": "Compression level (1-9).",
                "parameter_type": "Integer",
                "default_value": "\"5\"",
                "optional": "true"
            }
        }
    },
    "LidarBlockMaximum": {
        "name": "LidarBlockMaximum",
        "Name": "Lidarblockmaximum",
        "category": "LiDAR Tools",
        "label": "Lidar Block Maximum",
        "description": "Creates a block-maximum raster from an input LAS file. When the input/output parameters are not specified, the tool grids all LAS files contained within the working directory.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/block_maximum.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarBlockMaximum",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            }
        }
    },
    "LidarBlockMinimum": {
        "name": "LidarBlockMinimum",
        "Name": "Lidarblockminimum",
        "category": "LiDAR Tools",
        "label": "Lidar Block Minimum",
        "description": "Creates a block-minimum raster from an input LAS file. When the input/output parameters are not specified, the tool grids all LAS files contained within the working directory.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/block_minimum.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarBlockMinimum",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            }
        }
    },
    "LidarClassifySubset": {
        "name": "LidarClassifySubset",
        "Name": "Lidarclassifysubset",
        "category": "LiDAR Tools",
        "label": "Lidar Classify Subset",
        "description": "Classifies the values in one LiDAR point cloud that correpond with points in a subset cloud.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_classify_subset.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarClassifySubset",
        "parameters": {
            "base": {
                "name": "Input Base LiDAR File",
                "flags": "base",
                "description": "Input base LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "subset": {
                "name": "Input Subset LiDAR File",
                "flags": "subset",
                "description": "Input subset LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output LiDAR File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "subset_class": {
                "name": "Subset Point Class Value",
                "flags": "subset_class",
                "description": "Subset point class value (must be 0-18; see LAS specifications).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "nonsubset_class": {
                "name": "Non-Subset Point Class Value (Optional)",
                "flags": "nonsubset_class",
                "description": "Non-subset point class value (must be 0-18; see LAS specifications).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LidarColourize": {
        "name": "LidarColourize",
        "Name": "Lidarcolourize",
        "category": "LiDAR Tools",
        "label": "Lidar Colourize",
        "description": "Adds the red-green-blue colour fields of a LiDAR (LAS) file based on an input image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_colourize.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarColourize",
        "parameters": {
            "in_lidar": {
                "name": "Input LiDAR File",
                "flags": "in_lidar",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "in_image": {
                "name": "Input Colour Image File",
                "flags": "in_image",
                "description": "Input colour image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output LiDAR File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "LidarDigitalSurfaceModel": {
        "name": "LidarDigitalSurfaceModel",
        "Name": "Lidardigitalsurfacemodel",
        "category": "LiDAR Tools",
        "label": "Lidar Digital Surface Model",
        "description": "Creates a top-surface digital surface model (DSM) from a LiDAR point cloud.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_dsm.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarDigitalSurfaceModel",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file (including extension).",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file (including extension).",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search Radius.",
                "parameter_type": "Float",
                "default_value": "\"0.5\"",
                "optional": "true"
            },
            "minz": {
                "name": "Minimum Elevation Value",
                "flags": "minz",
                "description": "Optional minimum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "maxz": {
                "name": "Maximum Elevation Value",
                "flags": "maxz",
                "description": "Optional maximum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "max_triangle_edge_length": {
                "name": "Maximum Triangle Edge Length",
                "flags": "max_triangle_edge_length",
                "description": "Optional maximum triangle edge length; triangles larger than this size will not be gridded.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LidarElevationSlice": {
        "name": "LidarElevationSlice",
        "Name": "Lidarelevationslice",
        "category": "LiDAR Tools",
        "label": "Lidar Elevation Slice",
        "description": "Outputs all of the points within a LiDAR (LAS) point file that lie between a specified elevation range.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_elevation_slice.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarElevationSlice",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "minz": {
                "name": "Minimum Elevation Value",
                "flags": "minz",
                "description": "Minimum elevation value.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "maxz": {
                "name": "Maximum Elevation Value",
                "flags": "maxz",
                "description": "Maximum elevation value.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "class": {
                "name": "Retain but reclass points outside the specified elevation range?",
                "flags": "class",
                "description": "Optional boolean flag indicating whether points outside the range should be retained in output but reclassified.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "inclassval": {
                "name": "Class Value Assigned to Points Within Range (Optional)",
                "flags": "inclassval",
                "description": "Optional parameter specifying the class value assigned to points within the slice.",
                "parameter_type": "Integer",
                "default_value": "\"2\"",
                "optional": "true"
            },
            "outclassval": {
                "name": "Class Value Assigned to Points Outside Range (Optional)",
                "flags": "outclassval",
                "description": "Optional parameter specifying the class value assigned to points within the slice.",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            }
        }
    },
    "LidarGroundPointFilter": {
        "name": "LidarGroundPointFilter",
        "Name": "Lidargroundpointfilter",
        "category": "LiDAR Tools",
        "label": "Lidar Ground Point Filter",
        "description": "Identifies ground points within LiDAR dataset using a slope-based method.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_ground_point_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarGroundPointFilter",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search Radius.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "false"
            },
            "min_neighbours": {
                "name": "Minimum Number of Neighbours",
                "flags": "min_neighbours",
                "description": "The minimum number of neighbouring points within search areas. If fewer points than this threshold are idenfied during the fixed-radius search, a subsequent kNN search is performed to identify the k number of neighbours.",
                "parameter_type": "Integer",
                "default_value": "\"0\"",
                "optional": "true"
            },
            "slope_threshold": {
                "name": "Inter-point Slope Threshold",
                "flags": "slope_threshold",
                "description": "Maximum inter-point slope to be considered an off-terrain point.",
                "parameter_type": "Float",
                "default_value": "\"45.0\"",
                "optional": "true"
            },
            "height_threshold": {
                "name": "Off-terrain Point Height Threshold",
                "flags": "height_threshold",
                "description": "Inter-point height difference to be considered an off-terrain point.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "classify": {
                "name": "Classify Points",
                "flags": "classify",
                "description": "Classify points as ground (2) or off-ground (1).",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "slope_norm": {
                "name": "Perform initial ground slope normalization?",
                "flags": "slope_norm",
                "description": "Perform initial ground slope normalization?",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "height_above_ground": {
                "name": "Transform output to height above average ground elevation?",
                "flags": "height_above_ground",
                "description": "Transform output to height above average ground elevation?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "LidarHexBinning": {
        "name": "LidarHexBinning",
        "Name": "Lidarhexbinning",
        "category": "LiDAR Tools",
        "label": "Lidar Hex Binning",
        "description": "Hex-bins a set of LiDAR points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_hex_bin.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarHexBinning",
        "parameters": {
            "i": {
                "name": "Input Base File",
                "flags": "i",
                "description": "Input base file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "width": {
                "name": "Hexagon Width",
                "flags": "width",
                "description": "The grid cell width.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "orientation": {
                "name": "Grid Orientation",
                "flags": "orientation",
                "description": "Grid Orientation, 'horizontal' or 'vertical'.",
                "parameter_type": {
                    "OptionList": [
                        "horizontal",
                        "vertical"
                    ]
                },
                "default_value": "\"horizontal\"",
                "optional": "true"
            }
        }
    },
    "LidarHillshade": {
        "name": "LidarHillshade",
        "Name": "Lidarhillshade",
        "category": "LiDAR Tools",
        "label": "Lidar Hillshade",
        "description": "Calculates a hillshade value for points within a LAS file and stores these data in the RGB field.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_hillshade.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarHillshade",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "azimuth": {
                "name": "Azimuth (degrees)",
                "flags": "azimuth",
                "description": "Illumination source azimuth in degrees.",
                "parameter_type": "Float",
                "default_value": "\"315.0\"",
                "optional": "true"
            },
            "altitude": {
                "name": "Altitude (degrees)",
                "flags": "altitude",
                "description": "Illumination source altitude in degrees.",
                "parameter_type": "Float",
                "default_value": "\"30.0\"",
                "optional": "true"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search Radius.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "false"
            }
        }
    },
    "LidarHistogram": {
        "name": "LidarHistogram",
        "Name": "Lidarhistogram",
        "category": "LiDAR Tools",
        "label": "Lidar Histogram",
        "description": "Creates a histogram of LiDAR data.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_histogram.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarHistogram",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file (default name will be based on input file if unspecified).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "parameter": {
                "name": "Parameter",
                "flags": "parameter",
                "description": "Parameter; options are 'elevation' (default), 'intensity', 'scan angle', 'class'.",
                "parameter_type": {
                    "OptionList": [
                        "elevation",
                        "intensity",
                        "scan angle",
                        "class"
                    ]
                },
                "default_value": "\"elevation\"",
                "optional": "true"
            },
            "clip": {
                "name": "Tail Clip Percent",
                "flags": "clip",
                "description": "Amount to clip distribution tails (in percent).",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            }
        }
    },
    "LidarIdwInterpolation": {
        "name": "LidarIdwInterpolation",
        "Name": "Lidaridwinterpolation",
        "category": "LiDAR Tools",
        "label": "Lidar Idw Interpolation",
        "description": "Interpolates LAS files using an inverse-distance weighted (IDW) scheme. When the input/output parameters are not specified, the tool interpolates all LAS files contained within the working directory.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_idw_interpolation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarIdwInterpolation",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file (including extension).",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file (including extension).",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "parameter": {
                "name": "Interpolation Parameter",
                "flags": "parameter",
                "description": "Interpolation parameter; options are 'elevation' (default), 'intensity', 'class', 'return_number', 'number_of_returns', 'scan angle', 'rgb', 'user data'.",
                "parameter_type": {
                    "OptionList": [
                        "elevation",
                        "intensity",
                        "class",
                        "return_number",
                        "number_of_returns",
                        "scan angle",
                        "rgb",
                        "user data"
                    ]
                },
                "default_value": "\"elevation\"",
                "optional": "true"
            },
            "returns": {
                "name": "Point Returns Included",
                "flags": "returns",
                "description": "Point return types to include; options are 'all' (default), 'last', 'first'.",
                "parameter_type": {
                    "OptionList": [
                        "all",
                        "last",
                        "first"
                    ]
                },
                "default_value": "\"all\"",
                "optional": "true"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "weight": {
                "name": "IDW Weight (Exponent) Value",
                "flags": "weight",
                "description": "IDW weight value.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search Radius.",
                "parameter_type": "Float",
                "default_value": "\"2.5\"",
                "optional": "true"
            },
            "exclude_cls": {
                "name": "Exclusion Classes (0-18, based on LAS spec; e.g. 3,4,5,6,7)",
                "flags": "exclude_cls",
                "description": "Optional exclude classes from interpolation; Valid class values range from 0 to 18, based on LAS specifications. Example, --exclude_cls='3,4,5,6,7,18'.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "true"
            },
            "minz": {
                "name": "Minimum Elevation Value",
                "flags": "minz",
                "description": "Optional minimum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "maxz": {
                "name": "Maximum Elevation Value",
                "flags": "maxz",
                "description": "Optional maximum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LidarInfo": {
        "name": "LidarInfo",
        "Name": "Lidarinfo",
        "category": "LiDAR Tools",
        "label": "Lidar Info",
        "description": "Prints information about a LiDAR (LAS) dataset, including header, point return frequency, and classification data and information about the variable length records (VLRs) and geokeys.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_info.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarInfo",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Summary Report File",
                "flags": "output",
                "description": "Output HTML file for summary report.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "true"
            },
            "vlr": {
                "name": "Print the variable length records (VLRs)?",
                "flags": "vlr",
                "description": "Flag indicating whether or not to print the variable length records (VLRs).",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "geokeys": {
                "name": "Print the geokeys?",
                "flags": "geokeys",
                "description": "Flag indicating whether or not to print the geokeys.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            }
        }
    },
    "LidarJoin": {
        "name": "LidarJoin",
        "Name": "Lidarjoin",
        "category": "LiDAR Tools",
        "label": "Lidar Join",
        "description": "Joins multiple LiDAR (LAS) files into a single LAS file.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_join.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarJoin",
        "parameters": {
            "inputs": {
                "name": "Input LiDAR Files",
                "flags": "inputs",
                "description": "Input LiDAR files.",
                "parameter_type": {
                    "FileList": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "LidarKappaIndex": {
        "name": "LidarKappaIndex",
        "Name": "Lidarkappaindex",
        "category": "LiDAR Tools",
        "label": "Lidar Kappa Index",
        "description": "Performs a kappa index of agreement (KIA) analysis on the classifications of two LAS files.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_kappa.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarKappaIndex",
        "parameters": {
            "input1": {
                "name": "Input LiDAR File (Classification)",
                "flags": "input1",
                "description": "Input LiDAR classification file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input LiDAR File (Reference)",
                "flags": "input2",
                "description": "Input LiDAR reference file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "class_accuracy": {
                "name": "Output Class Accuracy Raster File",
                "flags": "class_accuracy",
                "description": "Output classification accuracy raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            }
        }
    },
    "LidarNearestNeighbourGridding": {
        "name": "LidarNearestNeighbourGridding",
        "Name": "Lidarnearestneighbourgridding",
        "category": "LiDAR Tools",
        "label": "Lidar Nearest Neighbour Gridding",
        "description": "Grids LiDAR files using nearest-neighbour scheme. When the input/output parameters are not specified, the tool grids all LAS files contained within the working directory.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_nn_gridding.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarNearestNeighbourGridding",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file (including extension).",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file (including extension).",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "parameter": {
                "name": "Interpolation Parameter",
                "flags": "parameter",
                "description": "Interpolation parameter; options are 'elevation' (default), 'intensity', 'class', 'return_number', 'number_of_returns', 'scan angle', 'rgb', 'user data'.",
                "parameter_type": {
                    "OptionList": [
                        "elevation",
                        "intensity",
                        "class",
                        "return_number",
                        "number_of_returns",
                        "scan angle",
                        "rgb",
                        "user data"
                    ]
                },
                "default_value": "\"elevation\"",
                "optional": "true"
            },
            "returns": {
                "name": "Point Returns Included",
                "flags": "returns",
                "description": "Point return types to include; options are 'all' (default), 'last', 'first'.",
                "parameter_type": {
                    "OptionList": [
                        "all",
                        "last",
                        "first"
                    ]
                },
                "default_value": "\"all\"",
                "optional": "true"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search Radius.",
                "parameter_type": "Float",
                "default_value": "\"2.5\"",
                "optional": "true"
            },
            "exclude_cls": {
                "name": "Exclusion Classes (0-18, based on LAS spec; e.g. 3,4,5,6,7)",
                "flags": "exclude_cls",
                "description": "Optional exclude classes from interpolation; Valid class values range from 0 to 18, based on LAS specifications. Example, --exclude_cls='3,4,5,6,7,18'.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "true"
            },
            "minz": {
                "name": "Minimum Elevation Value",
                "flags": "minz",
                "description": "Optional minimum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "maxz": {
                "name": "Maximum Elevation Value",
                "flags": "maxz",
                "description": "Optional maximum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LidarPointDensity": {
        "name": "LidarPointDensity",
        "Name": "Lidarpointdensity",
        "category": "LiDAR Tools",
        "label": "Lidar Point Density",
        "description": "Calculates the spatial pattern of point density for a LiDAR data set. When the input/output parameters are not specified, the tool grids all LAS files contained within the working directory.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_point_density.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarPointDensity",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file (including extension).",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file (including extension).",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "returns": {
                "name": "Point Returns Included",
                "flags": "returns",
                "description": "Point return types to include; options are 'all' (default), 'last', 'first'.",
                "parameter_type": {
                    "OptionList": [
                        "all",
                        "last",
                        "first"
                    ]
                },
                "default_value": "\"all\"",
                "optional": "true"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search radius.",
                "parameter_type": "Float",
                "default_value": "\"2.5\"",
                "optional": "true"
            },
            "exclude_cls": {
                "name": "Exclusion Classes (0-18, based on LAS spec; e.g. 3,4,5,6,7)",
                "flags": "exclude_cls",
                "description": "Optional exclude classes from interpolation; Valid class values range from 0 to 18, based on LAS specifications. Example, --exclude_cls='3,4,5,6,7,18'.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "true"
            },
            "minz": {
                "name": "Minimum Elevation Value",
                "flags": "minz",
                "description": "Optional minimum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "maxz": {
                "name": "Maximum Elevation Value",
                "flags": "maxz",
                "description": "Optional maximum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LidarPointStats": {
        "name": "LidarPointStats",
        "Name": "Lidarpointstats",
        "category": "LiDAR Tools",
        "label": "Lidar Point Stats",
        "description": "Creates several rasters summarizing the distribution of LAS point data. When the input/output parameters are not specified, the tool works on all LAS files contained within the working directory.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_point_stats.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarPointStats",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "num_points": {
                "name": "Output number of points?",
                "flags": "num_points",
                "description": "Flag indicating whether or not to output the number of points (returns) raster.",
                "parameter_type": "Boolean",
                "default_value": "\"True\"",
                "optional": "true"
            },
            "num_pulses": {
                "name": "Output number of pulses?",
                "flags": "num_pulses",
                "description": "Flag indicating whether or not to output the number of pulses raster.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "avg_points_per_pulse": {
                "name": "Output average number of points per pulse?",
                "flags": "avg_points_per_pulse",
                "description": "Flag indicating whether or not to output the average number of points (returns) per pulse raster.",
                "parameter_type": "Boolean",
                "default_value": "\"True\"",
                "optional": "true"
            },
            "z_range": {
                "name": "Output elevation range?",
                "flags": "z_range",
                "description": "Flag indicating whether or not to output the elevation range raster.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "intensity_range": {
                "name": "Output intensity range?",
                "flags": "intensity_range",
                "description": "Flag indicating whether or not to output the intensity range raster.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "predom_class": {
                "name": "Output predominant class?",
                "flags": "predom_class",
                "description": "Flag indicating whether or not to output the predominant classification raster.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LidarRansacPlanes": {
        "name": "LidarRansacPlanes",
        "Name": "Lidarransacplanes",
        "category": "LiDAR Tools",
        "label": "Lidar Ransac Planes",
        "description": "Performs a RANSAC analysis to identify points within a LiDAR point cloud that belong to linear planes.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_ransac_planes.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarRansacPlanes",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search Radius.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            },
            "num_iter": {
                "name": "Number of Iterations",
                "flags": "num_iter",
                "description": "Number of iterations.",
                "parameter_type": "Integer",
                "default_value": "\"50\"",
                "optional": "true"
            },
            "num_samples": {
                "name": "Number of Sample Points",
                "flags": "num_samples",
                "description": "Number of sample points on which to build the model.",
                "parameter_type": "Integer",
                "default_value": "\"5\"",
                "optional": "true"
            },
            "threshold": {
                "name": "Inlier Threshold",
                "flags": "threshold",
                "description": "Threshold used to determine inlier points.",
                "parameter_type": "Float",
                "default_value": "\"0.35\"",
                "optional": "true"
            },
            "model_size": {
                "name": "Acceptable Model Size",
                "flags": "model_size",
                "description": "Acceptable model size.",
                "parameter_type": "Integer",
                "default_value": "\"8\"",
                "optional": "true"
            },
            "max_slope": {
                "name": "Maximum Planar Slope",
                "flags": "max_slope",
                "description": "Maximum planar slope.",
                "parameter_type": "Float",
                "default_value": "\"80.0\"",
                "optional": "true"
            },
            "classify": {
                "name": "Classify Points",
                "flags": "classify",
                "description": "Classify points as ground (2) or off-ground (1).",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "last_returns": {
                "name": "Last Returns Only",
                "flags": "last_returns",
                "description": "Only include last- and only-return points.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "LidarRbfInterpolation": {
        "name": "LidarRbfInterpolation",
        "Name": "Lidarrbfinterpolation",
        "category": "LiDAR Tools",
        "label": "Lidar Rbf Interpolation",
        "description": "Interpolates LAS files using a radial basis function (RBF) scheme. When the input/output parameters are not specified, the tool interpolates all LAS files contained within the working directory.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_radial_basis_function_interpolation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarRbfInterpolation",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file (including extension).",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file (including extension).",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "parameter": {
                "name": "Interpolation Parameter",
                "flags": "parameter",
                "description": "Interpolation parameter; options are 'elevation' (default), 'intensity', 'class', 'return_number', 'number_of_returns', 'scan angle', 'rgb', 'user data'.",
                "parameter_type": {
                    "OptionList": [
                        "elevation",
                        "intensity",
                        "class",
                        "return_number",
                        "number_of_returns",
                        "scan angle",
                        "rgb",
                        "user data"
                    ]
                },
                "default_value": "\"elevation\"",
                "optional": "true"
            },
            "returns": {
                "name": "Point Returns Included",
                "flags": "returns",
                "description": "Point return types to include; options are 'all' (default), 'last', 'first'.",
                "parameter_type": {
                    "OptionList": [
                        "all",
                        "last",
                        "first"
                    ]
                },
                "default_value": "\"all\"",
                "optional": "true"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "num_points": {
                "name": "Number of Points",
                "flags": "num_points",
                "description": "Number of points.",
                "parameter_type": "Integer",
                "default_value": "\"20\"",
                "optional": "false"
            },
            "exclude_cls": {
                "name": "Exclusion Classes (0-18, based on LAS spec; e.g. 3,4,5,6,7)",
                "flags": "exclude_cls",
                "description": "Optional exclude classes from interpolation; Valid class values range from 0 to 18, based on LAS specifications. Example, --exclude_cls='3,4,5,6,7,18'.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "true"
            },
            "minz": {
                "name": "Minimum Elevation Value",
                "flags": "minz",
                "description": "Optional minimum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "maxz": {
                "name": "Maximum Elevation Value",
                "flags": "maxz",
                "description": "Optional maximum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "func_type": {
                "name": "Radial Basis Function Type",
                "flags": "func_type",
                "description": "Radial basis function type; options are 'ThinPlateSpline' (default), 'PolyHarmonic', 'Gaussian', 'MultiQuadric', 'InverseMultiQuadric'.",
                "parameter_type": {
                    "OptionList": [
                        "ThinPlateSpline",
                        "PolyHarmonic",
                        "Gaussian",
                        "MultiQuadric",
                        "InverseMultiQuadric"
                    ]
                },
                "default_value": "\"ThinPlateSpline\"",
                "optional": "true"
            },
            "poly_order": {
                "name": "Polynomial Order",
                "flags": "poly_order",
                "description": "Polynomial order; options are 'none' (default), 'constant', 'affine'.",
                "parameter_type": {
                    "OptionList": [
                        "none",
                        "constant",
                        "affine"
                    ]
                },
                "default_value": "\"none\"",
                "optional": "true"
            },
            "weight": {
                "name": "Weight",
                "flags": "weight",
                "description": "Weight parameter used in basis function.",
                "parameter_type": "Float",
                "default_value": "\"5\"",
                "optional": "false"
            }
        }
    },
    "LidarRemoveDuplicates": {
        "name": "LidarRemoveDuplicates",
        "Name": "Lidarremoveduplicates",
        "category": "LiDAR Tools",
        "label": "Lidar Remove Duplicates",
        "description": "Removes duplicate points from a LiDAR data set.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/remove_duplicates.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarRemoveDuplicates",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "include_z": {
                "name": "Include z-values in point comparison?",
                "flags": "include_z",
                "description": "Include z-values in point comparison?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "LidarRemoveOutliers": {
        "name": "LidarRemoveOutliers",
        "Name": "Lidarremoveoutliers",
        "category": "LiDAR Tools",
        "label": "Lidar Remove Outliers",
        "description": "Removes outliers (high and low points) in a LiDAR point cloud.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_outliers.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarRemoveOutliers",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search Radius.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            },
            "elev_diff": {
                "name": "Max. Elevation Difference",
                "flags": "elev_diff",
                "description": "Max. elevation difference.",
                "parameter_type": "Float",
                "default_value": "\"50.0\"",
                "optional": "true"
            },
            "use_median": {
                "name": "Use difference from median elevation?",
                "flags": "use_median",
                "description": "Optional flag indicating whether to use the difference from median elevation rather than mean.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "classify": {
                "name": "Classify Points",
                "flags": "classify",
                "description": "Classify points as ground (2) or off-ground (1).",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            }
        }
    },
    "LidarRooftopAnalysis": {
        "name": "LidarRooftopAnalysis",
        "Name": "Lidarrooftopanalysis",
        "category": "LiDAR Tools",
        "label": "Lidar Rooftop Analysis",
        "description": "Identifies roof segments in a LiDAR point cloud.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_rooftop_analysis.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarRooftopAnalysis",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "buildings": {
                "name": "Input Building Footprint Polygon File",
                "flags": "buildings",
                "description": "Input vector build footprint polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search Radius.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            },
            "num_iter": {
                "name": "Number of Iterations",
                "flags": "num_iter",
                "description": "Number of iterations.",
                "parameter_type": "Integer",
                "default_value": "\"50\"",
                "optional": "true"
            },
            "num_samples": {
                "name": "Number of Sample Points",
                "flags": "num_samples",
                "description": "Number of sample points on which to build the model.",
                "parameter_type": "Integer",
                "default_value": "\"10\"",
                "optional": "true"
            },
            "threshold": {
                "name": "Inlier Threshold",
                "flags": "threshold",
                "description": "Threshold used to determine inlier points (in elevation units).",
                "parameter_type": "Float",
                "default_value": "\"0.15\"",
                "optional": "true"
            },
            "model_size": {
                "name": "Acceptable Model Size (points)",
                "flags": "model_size",
                "description": "Acceptable model size, in points.",
                "parameter_type": "Integer",
                "default_value": "\"15\"",
                "optional": "true"
            },
            "max_slope": {
                "name": "Maximum Planar Slope (degrees)",
                "flags": "max_slope",
                "description": "Maximum planar slope, in degrees.",
                "parameter_type": "Float",
                "default_value": "\"65.0\"",
                "optional": "true"
            },
            "norm_diff": {
                "name": "Normal Difference Threshold (degrees)",
                "flags": "norm_diff",
                "description": "Maximum difference in normal vectors, in degrees.",
                "parameter_type": "Float",
                "default_value": "\"10.0\"",
                "optional": "true"
            },
            "azimuth": {
                "name": "Azimuth (degrees)",
                "flags": "azimuth",
                "description": "Illumination source azimuth, in degrees.",
                "parameter_type": "Float",
                "default_value": "\"180.0\"",
                "optional": "true"
            },
            "altitude": {
                "name": "Altitude (degrees)",
                "flags": "altitude",
                "description": "Illumination source altitude in degrees.",
                "parameter_type": "Float",
                "default_value": "\"30.0\"",
                "optional": "true"
            }
        }
    },
    "LidarSegmentation": {
        "name": "LidarSegmentation",
        "Name": "Lidarsegmentation",
        "category": "LiDAR Tools",
        "label": "Lidar Segmentation",
        "description": "Segments a LiDAR point cloud based on differences in the orientation of fitted planar surfaces and point proximity.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_segmentation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarSegmentation",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search Radius.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            },
            "num_iter": {
                "name": "Number of Iterations",
                "flags": "num_iter",
                "description": "Number of iterations.",
                "parameter_type": "Integer",
                "default_value": "\"50\"",
                "optional": "true"
            },
            "num_samples": {
                "name": "Number of Sample Points",
                "flags": "num_samples",
                "description": "Number of sample points on which to build the model.",
                "parameter_type": "Integer",
                "default_value": "\"10\"",
                "optional": "true"
            },
            "threshold": {
                "name": "Inlier Threshold",
                "flags": "threshold",
                "description": "Threshold used to determine inlier points.",
                "parameter_type": "Float",
                "default_value": "\"0.15\"",
                "optional": "true"
            },
            "model_size": {
                "name": "Acceptable Model Size",
                "flags": "model_size",
                "description": "Acceptable model size.",
                "parameter_type": "Integer",
                "default_value": "\"15\"",
                "optional": "true"
            },
            "max_slope": {
                "name": "Maximum Planar Slope",
                "flags": "max_slope",
                "description": "Maximum planar slope.",
                "parameter_type": "Float",
                "default_value": "\"80.0\"",
                "optional": "true"
            },
            "norm_diff": {
                "name": "Normal Difference Threshold",
                "flags": "norm_diff",
                "description": "Maximum difference in normal vectors, in degrees.",
                "parameter_type": "Float",
                "default_value": "\"10.0\"",
                "optional": "true"
            },
            "maxzdiff": {
                "name": "Maximum Elevation Difference Between Points",
                "flags": "maxzdiff",
                "description": "Maximum difference in elevation (z units) between neighbouring points of the same segment.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "classes": {
                "name": "Don't cross class boundaries?",
                "flags": "classes",
                "description": "Segments don't cross class boundaries.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "ground": {
                "name": "Classify largest segment as ground?",
                "flags": "ground",
                "description": "Classify the largest segment as ground points?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "LidarSegmentationBasedFilter": {
        "name": "LidarSegmentationBasedFilter",
        "Name": "Lidarsegmentationbasedfilter",
        "category": "LiDAR Tools",
        "label": "Lidar Segmentation Based Filter",
        "description": "Identifies ground points within LiDAR point clouds using a segmentation based approach.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_segmentation_based_filter.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarSegmentationBasedFilter",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search Radius.",
                "parameter_type": "Float",
                "default_value": "\"5.0\"",
                "optional": "false"
            },
            "norm_diff": {
                "name": "Normal Difference Threshold",
                "flags": "norm_diff",
                "description": "Maximum difference in normal vectors, in degrees.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            },
            "maxzdiff": {
                "name": "Maximum Elevation Difference Between Points",
                "flags": "maxzdiff",
                "description": "Maximum difference in elevation (z units) between neighbouring points of the same segment.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "classify": {
                "name": "Classify Points",
                "flags": "classify",
                "description": "Classify points as ground (2) or off-ground (1).",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LidarSibsonInterpolation": {
        "name": "LidarSibsonInterpolation",
        "Name": "Lidarsibsoninterpolation",
        "category": "LiDAR Tools",
        "label": "Lidar Sibson Interpolation",
        "description": "This interpolates one or more LiDAR tiles using Sibson's natural neighbour method.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarSibsonInterpolation",
        "parameters": {
            "i": {
                "name": "Input LiDAR Points",
                "flags": "i",
                "description": "Name of the input LiDAR points (leave blank to use all files in WorkingDirectory.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true,"
            },
            "output": {
                "name": "Output Raster",
                "flags": "output",
                "description": "Output raster file (including extension).",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true,"
            },
            "parameter": {
                "name": "Interpolation Parameter",
                "flags": "parameter",
                "description": "Interpolation parameter; options are 'elevation' (default), 'intensity', 'class', 'return_number', 'number_of_returns', 'scan angle', 'user_data'.",
                "parameter_type": {
                    "OptionList": [
                        "elevation",
                        "intensity",
                        "class",
                        "return_number",
                        "number_of_returns",
                        "scan_angle",
                        "user_data"
                    ]
                },
                "default_value": "\"elevation\"",
                "optional": "true,"
            },
            "returns": {
                "name": "Point Returns Included",
                "flags": "returns",
                "description": "Point return types to include; options are 'all' (default), 'last', 'first'.",
                "parameter_type": {
                    "OptionList": [
                        "all",
                        "last",
                        "first"
                    ]
                },
                "default_value": "\"all\"",
                "optional": "true,"
            },
            "resolution": {
                "name": "Output Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true,"
            },
            "exclude_cls": {
                "name": "Exclusion Classes (0-18",
                "flags": "exclude_cls",
                "description": "Optional exclude classes from interpolation; Valid class values range from 0 to 18, based on LAS specifications. Example, --exclude_cls='3,4,5,6,7,18'.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "true,"
            },
            "minz": {
                "name": "Minimum Elevation Value",
                "flags": "minz",
                "description": "Optional minimum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true,"
            },
            "maxz": {
                "name": "Maximum Elevation Value",
                "flags": "maxz",
                "description": "Optional maximum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true,"
            }
        }
    },
    "LidarSortByTime": {
        "name": "LidarSortByTime",
        "Name": "Lidarsortbytime",
        "category": "LiDAR Tools",
        "label": "Lidar Sort By Time",
        "description": "This sorts the points in a LiDAR file by the GPS time.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarSortByTime",
        "parameters": {
            "i": {
                "name": "Input LiDAR Points",
                "flags": "i",
                "description": "Name of the input LiDAR points.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output LiDAR Points",
                "flags": "output",
                "description": "Name of the output LiDAR points.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false,"
            }
        }
    },
    "LidarThin": {
        "name": "LidarThin",
        "Name": "Lidarthin",
        "category": "LiDAR Tools",
        "label": "Lidar Thin",
        "description": "Thins a LiDAR point cloud, reducing point density.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_thin.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarThin",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "resolution": {
                "name": "Sample Resolution",
                "flags": "resolution",
                "description": "The size of the square area used to evaluate nearby points in the LiDAR data.",
                "parameter_type": "Float",
                "default_value": "\"2.0\"",
                "optional": "true"
            },
            "method": {
                "name": "Point Selection Method",
                "flags": "method",
                "description": "Point selection method; options are 'first', 'last', 'lowest' (default), 'highest', 'nearest'.",
                "parameter_type": {
                    "OptionList": [
                        "first",
                        "last",
                        "lowest",
                        "highest",
                        "nearest"
                    ]
                },
                "default_value": "\"lowest\"",
                "optional": "true"
            },
            "save_filtered": {
                "name": "Save filtered points to seperate file?",
                "flags": "save_filtered",
                "description": "Save filtered points to seperate file?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "LidarThinHighDensity": {
        "name": "LidarThinHighDensity",
        "Name": "Lidarthinhighdensity",
        "category": "LiDAR Tools",
        "label": "Lidar Thin High Density",
        "description": "Thins points from high density areas within a LiDAR point cloud.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_thin_high_density.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarThinHighDensity",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "density": {
                "name": "Max. Point Density (pts/m^2)",
                "flags": "density",
                "description": "Max. point density (points / m^3).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "save_filtered": {
                "name": "Save filtered points to seperate file?",
                "flags": "save_filtered",
                "description": "Save filtered points to seperate file?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "LidarTile": {
        "name": "LidarTile",
        "Name": "Lidartile",
        "category": "LiDAR Tools",
        "label": "Lidar Tile",
        "description": "Tiles a LiDAR LAS file into multiple LAS files.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_tile.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarTile",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "width": {
                "name": "Tile Width",
                "flags": "width",
                "description": "Width of tiles in the X dimension; default 1000.0.",
                "parameter_type": "Float",
                "default_value": "\"1000.0\"",
                "optional": "true"
            },
            "height": {
                "name": "Tile Height",
                "flags": "height",
                "description": "Height of tiles in the Y dimension.",
                "parameter_type": "Float",
                "default_value": "\"1000.0\"",
                "optional": "true"
            },
            "origin_x": {
                "name": "Origin Point X-Coordinate",
                "flags": "origin_x",
                "description": "Origin point X coordinate for tile grid.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            },
            "origin_y": {
                "name": "Origin Point Y-Coordinate",
                "flags": "origin_y",
                "description": "Origin point Y coordinate for tile grid.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true"
            },
            "min_points": {
                "name": "Minimum Number of Tile Points",
                "flags": "min_points",
                "description": "Minimum number of points contained in a tile for it to be saved.",
                "parameter_type": "Integer",
                "default_value": "\"2\"",
                "optional": "true"
            }
        }
    },
    "LidarTileFootprint": {
        "name": "LidarTileFootprint",
        "Name": "Lidartilefootprint",
        "category": "LiDAR Tools",
        "label": "Lidar Tile Footprint",
        "description": "Creates a vector polygon of the convex hull of a LiDAR point cloud. When the input/output parameters are not specified, the tool works with all LAS files contained within the working directory.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_tile_footprint.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarTileFootprint",
        "parameters": {
            "i": {
                "name": "Input LiDAR File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output Polygon File",
                "flags": "output",
                "description": "Output vector polygon file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "hull": {
                "name": "Create Convex Hull Around Points",
                "flags": "hull",
                "description": "Identify the convex hull around points.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "LidarTinGridding": {
        "name": "LidarTinGridding",
        "Name": "Lidartingridding",
        "category": "LiDAR Tools",
        "label": "Lidar Tin Gridding",
        "description": "Creates a raster grid based on a Delaunay triangular irregular network (TIN) fitted to LiDAR points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_tin_gridding.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarTinGridding",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file (including extension).",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file (including extension).",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "parameter": {
                "name": "Interpolation Parameter",
                "flags": "parameter",
                "description": "Interpolation parameter; options are 'elevation' (default), 'intensity', 'class', 'return_number', 'number_of_returns', 'scan angle', 'rgb', 'user data'.",
                "parameter_type": {
                    "OptionList": [
                        "elevation",
                        "intensity",
                        "class",
                        "return_number",
                        "number_of_returns",
                        "scan angle",
                        "rgb",
                        "user data"
                    ]
                },
                "default_value": "\"elevation\"",
                "optional": "true"
            },
            "returns": {
                "name": "Point Returns Included",
                "flags": "returns",
                "description": "Point return types to include; options are 'all' (default), 'last', 'first'.",
                "parameter_type": {
                    "OptionList": [
                        "all",
                        "last",
                        "first"
                    ]
                },
                "default_value": "\"all\"",
                "optional": "true"
            },
            "resolution": {
                "name": "Grid Resolution",
                "flags": "resolution",
                "description": "Output raster's grid resolution.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "true"
            },
            "exclude_cls": {
                "name": "Exclusion Classes (0-18, based on LAS spec; e.g. 3,4,5,6,7)",
                "flags": "exclude_cls",
                "description": "Optional exclude classes from interpolation; Valid class values range from 0 to 18, based on LAS specifications. Example, --exclude_cls='3,4,5,6,7,18'.",
                "parameter_type": "String",
                "default_value": "\"7,18\"",
                "optional": "true"
            },
            "minz": {
                "name": "Minimum Elevation Value",
                "flags": "minz",
                "description": "Optional minimum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "maxz": {
                "name": "Maximum Elevation Value",
                "flags": "maxz",
                "description": "Optional maximum elevation for inclusion in interpolation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "max_triangle_edge_length": {
                "name": "Maximum Triangle Edge Length",
                "flags": "max_triangle_edge_length",
                "description": "Optional maximum triangle edge length; triangles larger than this size will not be gridded.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LidarTophatTransform": {
        "name": "LidarTophatTransform",
        "Name": "Lidartophattransform",
        "category": "LiDAR Tools",
        "label": "Lidar Tophat Transform",
        "description": "Performs a white top-hat transform on a Lidar dataset; as an estimate of height above ground, this is useful for modelling the vegetation canopy.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/lidar_tophat_transform.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#LidarTophatTransform",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search Radius.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "false"
            }
        }
    },
    "NormalVectors": {
        "name": "NormalVectors",
        "Name": "Normalvectors",
        "category": "LiDAR Tools",
        "label": "Normal Vectors",
        "description": "Calculates normal vectors for points within a LAS file and stores these data (XYZ vector components) in the RGB field.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/normal_vectors.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#NormalVectors",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input LiDAR file.",
                "parameter_type": {
                    "ExistingFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output LiDAR file.",
                "parameter_type": {
                    "NewFile": "Lidar"
                },
                "default_value": "null",
                "optional": "false"
            },
            "radius": {
                "name": "Search Radius",
                "flags": "radius",
                "description": "Search Radius.",
                "parameter_type": "Float",
                "default_value": "\"1.0\"",
                "optional": "false"
            }
        }
    },
    "SelectTilesByPolygon": {
        "name": "SelectTilesByPolygon",
        "Name": "Selecttilesbypolygon",
        "category": "LiDAR Tools",
        "label": "Select Tiles By Polygon",
        "description": "Copies LiDAR tiles overlapping with a polygon into an output directory.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/select_tiles_by_polygon.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#SelectTilesByPolygon",
        "parameters": {
            "indir": {
                "name": "Input Directory",
                "flags": "indir",
                "description": "Input LAS file source directory.",
                "parameter_type": "Directory",
                "default_value": "null",
                "optional": "false"
            },
            "outdir": {
                "name": "Output Directory",
                "flags": "outdir",
                "description": "Output directory into which LAS files within the polygon are copied.",
                "parameter_type": "Directory",
                "default_value": "null",
                "optional": "false"
            },
            "polygons": {
                "name": "Input Vector Polygon File",
                "flags": "polygons",
                "description": "Input vector polygons file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Polygon"
                    }
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ZlidarToLas": {
        "name": "ZlidarToLas",
        "Name": "Zlidartolas",
        "category": "LiDAR Tools",
        "label": "Zlidar To Las",
        "description": "Converts one or more zlidar files into the LAS data format.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/lidar_analysis/zlidar_to_las.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/lidar_tools.html#ZlidarToLas",
        "parameters": {
            "inputs": {
                "name": "Input ZLidar Files",
                "flags": "inputs",
                "description": "Input ZLidar files.",
                "parameter_type": {
                    "FileList": "Lidar"
                },
                "default_value": "null",
                "optional": "true"
            },
            "outdir": {
                "name": "Output Directory",
                "flags": "outdir",
                "description": "Output directory into which zlidar files are created. If unspecified, it is assumed to be the same as the inputs.",
                "parameter_type": "Directory",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "And": {
        "name": "And",
        "Name": "And",
        "category": "Math and Stats Tools",
        "label": "And",
        "description": "Performs a logical AND operator on two Boolean raster images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/and.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#And",
        "parameters": {
            "input1": {
                "name": "Input File",
                "flags": "input1",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File",
                "flags": "input2",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Not": {
        "name": "Not",
        "Name": "Not",
        "category": "Math and Stats Tools",
        "label": "Not",
        "description": "Performs a logical NOT operator on two Boolean raster images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/not.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Not",
        "parameters": {
            "input1": {
                "name": "Input File",
                "flags": "input1",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File",
                "flags": "input2",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Or": {
        "name": "Or",
        "Name": "Or",
        "category": "Math and Stats Tools",
        "label": "Or",
        "description": "Performs a logical OR operator on two Boolean raster images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/or.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Or",
        "parameters": {
            "input1": {
                "name": "Input File",
                "flags": "input1",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File",
                "flags": "input2",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "AbsoluteValue": {
        "name": "AbsoluteValue",
        "Name": "Absolutevalue",
        "category": "Math and Stats Tools",
        "label": "Absolute Value",
        "description": "Calculates the absolute value of every cell in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/abs.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#AbsoluteValue",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Add": {
        "name": "Add",
        "Name": "Add",
        "category": "Math and Stats Tools",
        "label": "Add",
        "description": "Performs an addition operation on two rasters or a raster and a constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/add.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Add",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Anova": {
        "name": "Anova",
        "Name": "Anova",
        "category": "Math and Stats Tools",
        "label": "Anova",
        "description": "Performs an analysis of variance (ANOVA) test on a raster dataset.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/anova.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Anova",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "features": {
                "name": "Feature Definition (Class) File",
                "flags": "features",
                "description": "Feature definition (or class) raster.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ArcCos": {
        "name": "ArcCos",
        "Name": "Arccos",
        "category": "Math and Stats Tools",
        "label": "Arc Cos",
        "description": "Returns the inverse cosine (arccos) of each values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/arccos.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#ArcCos",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ArcSin": {
        "name": "ArcSin",
        "Name": "Arcsin",
        "category": "Math and Stats Tools",
        "label": "Arc Sin",
        "description": "Returns the inverse sine (arcsin) of each values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/arcsin.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#ArcSin",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ArcTan": {
        "name": "ArcTan",
        "Name": "Arctan",
        "category": "Math and Stats Tools",
        "label": "Arc Tan",
        "description": "Returns the inverse tangent (arctan) of each values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/arctan.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#ArcTan",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Arcosh": {
        "name": "Arcosh",
        "Name": "Arcosh",
        "category": "Math and Stats Tools",
        "label": "Arcosh",
        "description": "Returns the inverse hyperbolic cosine (arcosh) of each values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/arcosh.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Arcosh",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Arsinh": {
        "name": "Arsinh",
        "Name": "Arsinh",
        "category": "Math and Stats Tools",
        "label": "Arsinh",
        "description": "Returns the inverse hyperbolic sine (arsinh) of each values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/arsinh.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Arsinh",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Artanh": {
        "name": "Artanh",
        "Name": "Artanh",
        "category": "Math and Stats Tools",
        "label": "Artanh",
        "description": "Returns the inverse hyperbolic tangent (arctanh) of each values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/artanh.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Artanh",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Atan2": {
        "name": "Atan2",
        "Name": "Atan2",
        "category": "Math and Stats Tools",
        "label": "Atan2",
        "description": "Returns the 2-argument inverse tangent (atan2).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/atan2.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Atan2",
        "parameters": {
            "input_y": {
                "name": "Input Y File Or Constant Value",
                "flags": "input_y",
                "description": "Input y raster file or constant value (rise).",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input_x": {
                "name": "Input X File Or Constant Value",
                "flags": "input_x",
                "description": "Input x raster file or constant value (run).",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "AttributeCorrelation": {
        "name": "AttributeCorrelation",
        "Name": "Attributecorrelation",
        "category": "Math and Stats Tools",
        "label": "Attribute Correlation",
        "description": "Performs a correlation analysis on attribute fields from a vector database.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/attribute_correlation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#AttributeCorrelation",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file (default name will be based on input file if unspecified).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "AttributeCorrelationNeighbourhoodAnalysis": {
        "name": "AttributeCorrelationNeighbourhoodAnalysis",
        "Name": "Attributecorrelationneighbourhoodanalysis",
        "category": "Math and Stats Tools",
        "label": "Attribute Correlation Neighbourhood Analysis",
        "description": "Performs a correlation on two input vector attributes within a neighbourhood search windows.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/attribute_correlation_neighbourhood_analysis.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#AttributeCorrelationNeighbourhoodAnalysis",
        "parameters": {
            "i": {
                "name": "Input Vector File",
                "flags": "i",
                "description": "Input vector file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field1": {
                "name": "Field Name 1",
                "flags": "field1",
                "description": "First input field name (dependent variable) in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "field2": {
                "name": "Field Name 2",
                "flags": "field2",
                "description": "Second input field name (independent variable) in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "radius": {
                "name": "Search Radius (map units)",
                "flags": "radius",
                "description": "Search Radius (in map units).",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "min_points": {
                "name": "Min. Number of Points",
                "flags": "min_points",
                "description": "Minimum number of points.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "true"
            },
            "stat": {
                "name": "Correlation Statistic Type",
                "flags": "stat",
                "description": "Correlation type; one of 'pearson' (default) and 'spearman'.",
                "parameter_type": {
                    "OptionList": [
                        "pearson",
                        "kendall",
                        "spearman"
                    ]
                },
                "default_value": "\"pearson\"",
                "optional": "true"
            }
        }
    },
    "AttributeHistogram": {
        "name": "AttributeHistogram",
        "Name": "Attributehistogram",
        "category": "Math and Stats Tools",
        "label": "Attribute Histogram",
        "description": "Creates a histogram for the field values of a vector's attribute table.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/attribute_histogram.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#AttributeHistogram",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file (default name will be based on input file if unspecified).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "AttributeScattergram": {
        "name": "AttributeScattergram",
        "Name": "Attributescattergram",
        "category": "Math and Stats Tools",
        "label": "Attribute Scattergram",
        "description": "Creates a scattergram for two field values of a vector's attribute table.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/attribute_scattergram.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#AttributeScattergram",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "fieldx": {
                "name": "Field Name X",
                "flags": "fieldx",
                "description": "Input field name in attribute table for the x-axis.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "fieldy": {
                "name": "Field Name Y",
                "flags": "fieldy",
                "description": "Input field name in attribute table for the y-axis.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file (default name will be based on input file if unspecified).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "trendline": {
                "name": "Draw the trendline?",
                "flags": "trendline",
                "description": "Draw the trendline.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "Ceil": {
        "name": "Ceil",
        "Name": "Ceil",
        "category": "Math and Stats Tools",
        "label": "Ceil",
        "description": "Returns the smallest (closest to negative infinity) value that is greater than or equal to the values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/ceil.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Ceil",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Cos": {
        "name": "Cos",
        "Name": "Cos",
        "category": "Math and Stats Tools",
        "label": "Cos",
        "description": "Returns the cosine (cos) of each values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/cos.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Cos",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Cosh": {
        "name": "Cosh",
        "Name": "Cosh",
        "category": "Math and Stats Tools",
        "label": "Cosh",
        "description": "Returns the hyperbolic cosine (cosh) of each values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/cosh.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Cosh",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "CrispnessIndex": {
        "name": "CrispnessIndex",
        "Name": "Crispnessindex",
        "category": "Math and Stats Tools",
        "label": "Crispness Index",
        "description": "Calculates the Crispness Index, which is used to quantify how crisp (or conversely how fuzzy) a probability image is.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/crispness_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#CrispnessIndex",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Optional output html file (default name will be based on input file if unspecified).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "CrossTabulation": {
        "name": "CrossTabulation",
        "Name": "Crosstabulation",
        "category": "Math and Stats Tools",
        "label": "Cross Tabulation",
        "description": "Performs a cross-tabulation on two categorical images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/cross_tabulation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#CrossTabulation",
        "parameters": {
            "input1": {
                "name": "Input File 1",
                "flags": "input1",
                "description": "Input raster file 1.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File 2",
                "flags": "input2",
                "description": "Input raster file 1.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file (default name will be based on input file if unspecified).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "CumulativeDistribution": {
        "name": "CumulativeDistribution",
        "Name": "Cumulativedistribution",
        "category": "Math and Stats Tools",
        "label": "Cumulative Distribution",
        "description": "Converts a raster image to its cumulative distribution function.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/cumulative_dist.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#CumulativeDistribution",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Decrement": {
        "name": "Decrement",
        "Name": "Decrement",
        "category": "Math and Stats Tools",
        "label": "Decrement",
        "description": "Decreases the values of each grid cell in an input raster by 1.0 (see also InPlaceSubtract).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/decrement.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Decrement",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Divide": {
        "name": "Divide",
        "Name": "Divide",
        "category": "Math and Stats Tools",
        "label": "Divide",
        "description": "Performs a division operation on two rasters or a raster and a constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/divide.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Divide",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "EqualTo": {
        "name": "EqualTo",
        "Name": "Equalto",
        "category": "Math and Stats Tools",
        "label": "Equal To",
        "description": "Performs a equal-to comparison operation on two rasters or a raster and a constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/equal_to.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#EqualTo",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Exp": {
        "name": "Exp",
        "Name": "Exp",
        "category": "Math and Stats Tools",
        "label": "Exp",
        "description": "Returns the exponential (base e) of values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/exp.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Exp",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Exp2": {
        "name": "Exp2",
        "Name": "Exp2",
        "category": "Math and Stats Tools",
        "label": "Exp2",
        "description": "Returns the exponential (base 2) of values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/exp2.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Exp2",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Floor": {
        "name": "Floor",
        "Name": "Floor",
        "category": "Math and Stats Tools",
        "label": "Floor",
        "description": "Returns the largest (closest to positive infinity) value that is less than or equal to the values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/floor.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Floor",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "GreaterThan": {
        "name": "GreaterThan",
        "Name": "Greaterthan",
        "category": "Math and Stats Tools",
        "label": "Greater Than",
        "description": "Performs a greater-than comparison operation on two rasters or a raster and a constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/greater_than.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#GreaterThan",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "incl_equals": {
                "name": "Perform a greater-than-OR-EQUAL-TO operation?",
                "flags": "incl_equals",
                "description": "Perform a greater-than-or-equal-to operation.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "ImageAutocorrelation": {
        "name": "ImageAutocorrelation",
        "Name": "Imageautocorrelation",
        "category": "Math and Stats Tools",
        "label": "Image Autocorrelation",
        "description": "Performs Moran's I analysis on two or more input images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/image_autocorrelation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#ImageAutocorrelation",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "contiguity": {
                "name": "Contiguity Type",
                "flags": "contiguity",
                "description": "Contiguity type.",
                "parameter_type": {
                    "OptionList": [
                        "Rook",
                        "King",
                        "Bishop"
                    ]
                },
                "default_value": "\"Rook\"",
                "optional": "true"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file (default name will be based on input file if unspecified).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ImageCorrelation": {
        "name": "ImageCorrelation",
        "Name": "Imagecorrelation",
        "category": "Math and Stats Tools",
        "label": "Image Correlation",
        "description": "Performs image correlation on two or more input images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/image_correlation.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#ImageCorrelation",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file (default name will be based on input file if unspecified).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "ImageCorrelationNeighbourhoodAnalysis": {
        "name": "ImageCorrelationNeighbourhoodAnalysis",
        "Name": "Imagecorrelationneighbourhoodanalysis",
        "category": "Math and Stats Tools",
        "label": "Image Correlation Neighbourhood Analysis",
        "description": "Performs image correlation on two input images neighbourhood search windows.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/image_correlation_neighbourhood_analysis.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#ImageCorrelationNeighbourhoodAnalysis",
        "parameters": {
            "input1": {
                "name": "Image 1",
                "flags": "input1",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Image 2",
                "flags": "input2",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output1": {
                "name": "Output Correlation File",
                "flags": "output1",
                "description": "Output correlation (r-value or rho) raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output2": {
                "name": "Output Significance File",
                "flags": "output2",
                "description": "Output significance (p-value) raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "filter": {
                "name": "Filter Size",
                "flags": "filter",
                "description": "Size of the filter kernel.",
                "parameter_type": "Integer",
                "default_value": "\"11\"",
                "optional": "true"
            },
            "stat": {
                "name": "Correlation Statistic Type",
                "flags": "stat",
                "description": "Correlation type; one of 'pearson' (default) and 'spearman'.",
                "parameter_type": {
                    "OptionList": [
                        "pearson",
                        "kendall",
                        "spearman"
                    ]
                },
                "default_value": "\"pearson\"",
                "optional": "true"
            }
        }
    },
    "ImageRegression": {
        "name": "ImageRegression",
        "Name": "Imageregression",
        "category": "Math and Stats Tools",
        "label": "Image Regression",
        "description": "Performs image regression analysis on two input images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/image_regression.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#ImageRegression",
        "parameters": {
            "input1": {
                "name": "Independent Variable (X).",
                "flags": "input1",
                "description": "Input raster file (independent variable, X).",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Dependent Variable (Y).",
                "flags": "input2",
                "description": "Input raster file (dependent variable, Y).",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Summary Report File",
                "flags": "output",
                "description": "Output HTML file for regression summary report.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_residuals": {
                "name": "Optional Residuals Output File",
                "flags": "out_residuals",
                "description": "Output raster regression resdidual file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "standardize": {
                "name": "Standardize the residuals map?",
                "flags": "standardize",
                "description": "Optional flag indicating whether to standardize the residuals map.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "scattergram": {
                "name": "Output scattergram?",
                "flags": "scattergram",
                "description": "Optional flag indicating whether to output a scattergram.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            },
            "num_samples": {
                "name": "Num. Samples For Scattergram",
                "flags": "num_samples",
                "description": "Number of samples used to create scattergram",
                "parameter_type": "Integer",
                "default_value": "\"1000\"",
                "optional": "false"
            }
        }
    },
    "InPlaceAdd": {
        "name": "InPlaceAdd",
        "Name": "Inplaceadd",
        "category": "Math and Stats Tools",
        "label": "In Place Add",
        "description": "Performs an in-place addition operation (input1 += input2).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/inplace_add.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#InPlaceAdd",
        "parameters": {
            "input1": {
                "name": "Input Raster File",
                "flags": "input1",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "InPlaceDivide": {
        "name": "InPlaceDivide",
        "Name": "Inplacedivide",
        "category": "Math and Stats Tools",
        "label": "In Place Divide",
        "description": "Performs an in-place division operation (input1 /= input2).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/inplace_divide.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#InPlaceDivide",
        "parameters": {
            "input1": {
                "name": "Input Raster File",
                "flags": "input1",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "InPlaceMultiply": {
        "name": "InPlaceMultiply",
        "Name": "Inplacemultiply",
        "category": "Math and Stats Tools",
        "label": "In Place Multiply",
        "description": "Performs an in-place multiplication operation (input1 *= input2).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/inplace_multiply.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#InPlaceMultiply",
        "parameters": {
            "input1": {
                "name": "Input Raster File",
                "flags": "input1",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "InPlaceSubtract": {
        "name": "InPlaceSubtract",
        "Name": "Inplacesubtract",
        "category": "Math and Stats Tools",
        "label": "In Place Subtract",
        "description": "Performs an in-place subtraction operation (input1 -= input2).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/inplace_subtract.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#InPlaceSubtract",
        "parameters": {
            "input1": {
                "name": "Input Raster File",
                "flags": "input1",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Increment": {
        "name": "Increment",
        "Name": "Increment",
        "category": "Math and Stats Tools",
        "label": "Increment",
        "description": "Increases the values of each grid cell in an input raster by 1.0. (see also InPlaceAdd).",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/increment.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Increment",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "IntegerDivision": {
        "name": "IntegerDivision",
        "Name": "Integerdivision",
        "category": "Math and Stats Tools",
        "label": "Integer Division",
        "description": "Performs an integer division operation on two rasters or a raster and a constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/integer_division.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#IntegerDivision",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "InversePrincipalComponentAnalysis": {
        "name": "InversePrincipalComponentAnalysis",
        "Name": "Inverseprincipalcomponentanalysis",
        "category": "Math and Stats Tools",
        "label": "Inverse Principal Component Analysis",
        "description": "This tool performs an inverse principal component analysis on a series of input component images.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#InversePrincipalComponentAnalysis",
        "parameters": {
            "inputs": {
                "name": "Input PCA Component Images",
                "flags": "inputs",
                "description": "Name of the input PCA component images.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "report": {
                "name": "Input PCA Report File",
                "flags": "report",
                "description": "Name of the PCA report file (*.html).",
                "parameter_type": {
                    "ExistingFile": "Html"
                },
                "default_value": "null",
                "optional": "false,"
            }
        }
    },
    "IsNoData": {
        "name": "IsNoData",
        "Name": "Isnodata",
        "category": "Math and Stats Tools",
        "label": "Is No Data",
        "description": "Identifies NoData valued pixels in an image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/isnodata.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#IsNoData",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "KappaIndex": {
        "name": "KappaIndex",
        "Name": "Kappaindex",
        "category": "Math and Stats Tools",
        "label": "Kappa Index",
        "description": "Performs a kappa index of agreement (KIA) analysis on two categorical raster files.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/kappa_index.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#KappaIndex",
        "parameters": {
            "input1": {
                "name": "Input Classification File",
                "flags": "input1",
                "description": "Input classification raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input Reference File",
                "flags": "input2",
                "description": "Input reference raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "KsTestForNormality": {
        "name": "KsTestForNormality",
        "Name": "Kstestfornormality",
        "category": "Math and Stats Tools",
        "label": "Ks Test For Normality",
        "description": "Evaluates whether the values in a raster are normally distributed.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/ks_normality_test.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#KsTestForNormality",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "num_samples": {
                "name": "Num. Samples (blank for while image)",
                "flags": "num_samples",
                "description": "Number of samples. Leave blank to use whole image.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LessThan": {
        "name": "LessThan",
        "Name": "Lessthan",
        "category": "Math and Stats Tools",
        "label": "Less Than",
        "description": "Performs a less-than comparison operation on two rasters or a raster and a constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/less_than.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#LessThan",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "incl_equals": {
                "name": "Perform a less-than-OR-EQUAL-TO operation?",
                "flags": "incl_equals",
                "description": "Perform a less-than-or-equal-to operation.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "ListUniqueValues": {
        "name": "ListUniqueValues",
        "Name": "Listuniquevalues",
        "category": "Math and Stats Tools",
        "label": "List Unique Values",
        "description": "Lists the unique values contained in a field witin a vector's attribute table.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/list_unique_values.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#ListUniqueValues",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Any"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Any",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file (default name will be based on input file if unspecified).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Ln": {
        "name": "Ln",
        "Name": "Ln",
        "category": "Math and Stats Tools",
        "label": "Ln",
        "description": "Returns the natural logarithm of values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/ln.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Ln",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Log10": {
        "name": "Log10",
        "Name": "Log10",
        "category": "Math and Stats Tools",
        "label": "Log10",
        "description": "Returns the base-10 logarithm of values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/log10.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Log10",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Log2": {
        "name": "Log2",
        "Name": "Log2",
        "category": "Math and Stats Tools",
        "label": "Log2",
        "description": "Returns the base-2 logarithm of values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/log2.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Log2",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Max": {
        "name": "Max",
        "Name": "Max",
        "category": "Math and Stats Tools",
        "label": "Max",
        "description": "Performs a MAX operation on two rasters or a raster and a constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/max.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Max",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Min": {
        "name": "Min",
        "Name": "Min",
        "category": "Math and Stats Tools",
        "label": "Min",
        "description": "Performs a MIN operation on two rasters or a raster and a constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/min.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Min",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Modulo": {
        "name": "Modulo",
        "Name": "Modulo",
        "category": "Math and Stats Tools",
        "label": "Modulo",
        "description": "Performs a modulo operation on two rasters or a raster and a constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/modulo.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Modulo",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Multiply": {
        "name": "Multiply",
        "Name": "Multiply",
        "category": "Math and Stats Tools",
        "label": "Multiply",
        "description": "Performs a multiplication operation on two rasters or a raster and a constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/multiply.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Multiply",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Negate": {
        "name": "Negate",
        "Name": "Negate",
        "category": "Math and Stats Tools",
        "label": "Negate",
        "description": "Changes the sign of values in a raster or the 0-1 values of a Boolean raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/negate.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Negate",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "NotEqualTo": {
        "name": "NotEqualTo",
        "Name": "Notequalto",
        "category": "Math and Stats Tools",
        "label": "Not Equal To",
        "description": "Performs a not-equal-to comparison operation on two rasters or a raster and a constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/not_equal_to.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#NotEqualTo",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "PairedSampleTTest": {
        "name": "PairedSampleTTest",
        "Name": "Pairedsamplettest",
        "category": "Math and Stats Tools",
        "label": "Paired Sample T Test",
        "description": "Performs a 2-sample K-S test for significant differences on two input rasters.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/paired_sample_t_test.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#PairedSampleTTest",
        "parameters": {
            "input1": {
                "name": "First Input File",
                "flags": "input1",
                "description": "First input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Second Input File",
                "flags": "input2",
                "description": "Second input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "num_samples": {
                "name": "Num. Samples (blank for while image)",
                "flags": "num_samples",
                "description": "Number of samples. Leave blank to use whole image.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "PhiCoefficient": {
        "name": "PhiCoefficient",
        "Name": "Phicoefficient",
        "category": "Math and Stats Tools",
        "label": "Phi Coefficient",
        "description": "This tool performs a binary classification accuracy assessment.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#PhiCoefficient",
        "parameters": {
            "input1": {
                "name": "Input Raster Image 1",
                "flags": "input1",
                "description": "Name of the first input raster image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "input2": {
                "name": "Input Raster Image 2",
                "flags": "input2",
                "description": "Name of the second input raster image file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Name of the output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false,"
            }
        }
    },
    "Power": {
        "name": "Power",
        "Name": "Power",
        "category": "Math and Stats Tools",
        "label": "Power",
        "description": "Raises the values in grid cells of one rasters, or a constant value, by values in another raster or constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/power.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Power",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "PrincipalComponentAnalysis": {
        "name": "PrincipalComponentAnalysis",
        "Name": "Principalcomponentanalysis",
        "category": "Math and Stats Tools",
        "label": "Principal Component Analysis",
        "description": "Performs a principal component analysis (PCA) on a multi-spectral dataset.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/principal_component_analysis.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#PrincipalComponentAnalysis",
        "parameters": {
            "inputs": {
                "name": "Input Files",
                "flags": "inputs",
                "description": "Input raster files.",
                "parameter_type": {
                    "FileList": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML Report File",
                "flags": "output",
                "description": "Output HTML report file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "num_comp": {
                "name": "Num. of Component Images (blank for all)",
                "flags": "num_comp",
                "description": "Number of component images to output; <= to num. input images",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "true"
            },
            "standardized": {
                "name": "Perform Standaradized PCA?",
                "flags": "standardized",
                "description": "Perform standardized PCA?",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "Quantiles": {
        "name": "Quantiles",
        "Name": "Quantiles",
        "category": "Math and Stats Tools",
        "label": "Quantiles",
        "description": "Transforms raster values into quantiles.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/quantiles.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Quantiles",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "num_quantiles": {
                "name": "Number of Quantiles",
                "flags": "num_quantiles",
                "description": "Number of quantiles.",
                "parameter_type": "Integer",
                "default_value": "\"5\"",
                "optional": "false"
            }
        }
    },
    "RandomField": {
        "name": "RandomField",
        "Name": "Randomfield",
        "category": "Math and Stats Tools",
        "label": "Random Field",
        "description": "Creates an image containing random values.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/random_field.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#RandomField",
        "parameters": {
            "base": {
                "name": "Input Base File",
                "flags": "base",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "RandomSample": {
        "name": "RandomSample",
        "Name": "Randomsample",
        "category": "Math and Stats Tools",
        "label": "Random Sample",
        "description": "Creates an image containing randomly located sample grid cells with unique IDs.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/random_sample.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#RandomSample",
        "parameters": {
            "base": {
                "name": "Input Base File",
                "flags": "base",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "num_samples": {
                "name": "Num. Samples",
                "flags": "num_samples",
                "description": "Number of samples",
                "parameter_type": "Integer",
                "default_value": "\"1000\"",
                "optional": "false"
            }
        }
    },
    "RasterHistogram": {
        "name": "RasterHistogram",
        "Name": "Rasterhistogram",
        "category": "Math and Stats Tools",
        "label": "Raster Histogram",
        "description": "Creates a histogram from raster values.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/raster_histogram.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#RasterHistogram",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file (default name will be based on input file if unspecified).",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "RasterSummaryStats": {
        "name": "RasterSummaryStats",
        "Name": "Rastersummarystats",
        "category": "Math and Stats Tools",
        "label": "Raster Summary Stats",
        "description": "Measures a rasters min, max, average, standard deviation, num. non-nodata cells, and total.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/raster_summary_stats.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#RasterSummaryStats",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Reciprocal": {
        "name": "Reciprocal",
        "Name": "Reciprocal",
        "category": "Math and Stats Tools",
        "label": "Reciprocal",
        "description": "Returns the reciprocal (i.e. 1 / z) of values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/reciprocal.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Reciprocal",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "RescaleValueRange": {
        "name": "RescaleValueRange",
        "Name": "Rescalevaluerange",
        "category": "Math and Stats Tools",
        "label": "Rescale Value Range",
        "description": "Performs a min-max contrast stretch on an input greytone image.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/rescale_value_range.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#RescaleValueRange",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "out_min_val": {
                "name": "Output Raster Minimum Value",
                "flags": "out_min_val",
                "description": "New minimum value in output image.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "out_max_val": {
                "name": "Output Raster Maximum Value",
                "flags": "out_max_val",
                "description": "New maximum value in output image.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "clip_min": {
                "name": "Lower-Tail Clip Value",
                "flags": "clip_min",
                "description": "Optional lower tail clip value.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            },
            "clip_max": {
                "name": "Upper-Tail Clip Value",
                "flags": "clip_max",
                "description": "Optional upper tail clip value.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "RootMeanSquareError": {
        "name": "RootMeanSquareError",
        "Name": "Rootmeansquareerror",
        "category": "Math and Stats Tools",
        "label": "Root Mean Square Error",
        "description": "Calculates the RMSE and other accuracy statistics.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/root_mean_square_error.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#RootMeanSquareError",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "base": {
                "name": "Input Base File",
                "flags": "base",
                "description": "Input base raster file used for comparison.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Round": {
        "name": "Round",
        "Name": "Round",
        "category": "Math and Stats Tools",
        "label": "Round",
        "description": "Rounds the values in an input raster to the nearest integer value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/round.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Round",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Sin": {
        "name": "Sin",
        "Name": "Sin",
        "category": "Math and Stats Tools",
        "label": "Sin",
        "description": "Returns the sine (sin) of each values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/sin.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Sin",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Sinh": {
        "name": "Sinh",
        "Name": "Sinh",
        "category": "Math and Stats Tools",
        "label": "Sinh",
        "description": "Returns the hyperbolic sine (sinh) of each values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/sinh.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Sinh",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Square": {
        "name": "Square",
        "Name": "Square",
        "category": "Math and Stats Tools",
        "label": "Square",
        "description": "Squares the values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/square.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Square",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "SquareRoot": {
        "name": "SquareRoot",
        "Name": "Squareroot",
        "category": "Math and Stats Tools",
        "label": "Square Root",
        "description": "Returns the square root of the values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/sqrt.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#SquareRoot",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Subtract": {
        "name": "Subtract",
        "Name": "Subtract",
        "category": "Math and Stats Tools",
        "label": "Subtract",
        "description": "Performs a differencing operation on two rasters or a raster and a constant value.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/subtract.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Subtract",
        "parameters": {
            "input1": {
                "name": "Input File Or Constant Value",
                "flags": "input1",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File Or Constant Value",
                "flags": "input2",
                "description": "Input raster file or constant value.",
                "parameter_type": {
                    "ExistingFileOrFloat": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Tan": {
        "name": "Tan",
        "Name": "Tan",
        "category": "Math and Stats Tools",
        "label": "Tan",
        "description": "Returns the tangent (tan) of each values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/tan.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Tan",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Tanh": {
        "name": "Tanh",
        "Name": "Tanh",
        "category": "Math and Stats Tools",
        "label": "Tanh",
        "description": "Returns the hyperbolic tangent (tanh) of each values in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/tanh.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Tanh",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ToDegrees": {
        "name": "ToDegrees",
        "Name": "Todegrees",
        "category": "Math and Stats Tools",
        "label": "To Degrees",
        "description": "Converts a raster from radians to degrees.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/to_degrees.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#ToDegrees",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ToRadians": {
        "name": "ToRadians",
        "Name": "Toradians",
        "category": "Math and Stats Tools",
        "label": "To Radians",
        "description": "Converts a raster from degrees to radians.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/to_radians.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#ToRadians",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "TrendSurface": {
        "name": "TrendSurface",
        "Name": "Trendsurface",
        "category": "Math and Stats Tools",
        "label": "Trend Surface",
        "description": "Estimates the trend surface of an input raster file.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/trend_surface.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#TrendSurface",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "order": {
                "name": "Polynomial Order",
                "flags": "order",
                "description": "Polynomial order (1 to 10).",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            }
        }
    },
    "TrendSurfaceVectorPoints": {
        "name": "TrendSurfaceVectorPoints",
        "Name": "Trendsurfacevectorpoints",
        "category": "Math and Stats Tools",
        "label": "Trend Surface Vector Points",
        "description": "Estimates a trend surface from vector points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/trend_surface_vector_points.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#TrendSurfaceVectorPoints",
        "parameters": {
            "i": {
                "name": "Input Vector Points File",
                "flags": "i",
                "description": "Input vector Points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "field": {
                "name": "Field Name",
                "flags": "field",
                "description": "Input field name in attribute table.",
                "parameter_type": {
                    "VectorAttributeField": [
                        "Number",
                        "--input"
                    ]
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "order": {
                "name": "Polynomial Order",
                "flags": "order",
                "description": "Polynomial order (1 to 10).",
                "parameter_type": "Integer",
                "default_value": "\"1\"",
                "optional": "true"
            },
            "cell_size": {
                "name": "Cell Size",
                "flags": "cell_size",
                "description": "Optionally specified cell size of output raster. Not used when base raster is specified.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "Truncate": {
        "name": "Truncate",
        "Name": "Truncate",
        "category": "Math and Stats Tools",
        "label": "Truncate",
        "description": "Truncates the values in a raster to the desired number of decimal places.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/truncate.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Truncate",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "num_decimals": {
                "name": "Number of Decimals After Truncation",
                "flags": "num_decimals",
                "description": "Number of decimals left after truncation (default is zero).",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "TurningBandsSimulation": {
        "name": "TurningBandsSimulation",
        "Name": "Turningbandssimulation",
        "category": "Math and Stats Tools",
        "label": "Turning Bands Simulation",
        "description": "Creates an image containing random values based on a turning-bands simulation.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/turning_bands.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#TurningBandsSimulation",
        "parameters": {
            "base": {
                "name": "Input Base File",
                "flags": "base",
                "description": "Input base raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "range": {
                "name": "Range of Autocorrelation (map units)",
                "flags": "range",
                "description": "The field's range, in xy-units, related to the extent of spatial autocorrelation.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "iterations": {
                "name": "Iterations",
                "flags": "iterations",
                "description": "The number of iterations.",
                "parameter_type": "Integer",
                "default_value": "\"1000\"",
                "optional": "true"
            }
        }
    },
    "TwoSampleKsTest": {
        "name": "TwoSampleKsTest",
        "Name": "Twosamplekstest",
        "category": "Math and Stats Tools",
        "label": "Two Sample Ks Test",
        "description": "Performs a 2-sample K-S test for significant differences on two input rasters.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/two_sample_ks_test.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#TwoSampleKsTest",
        "parameters": {
            "input1": {
                "name": "First Input File",
                "flags": "input1",
                "description": "First input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Second Input File",
                "flags": "input2",
                "description": "Second input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "num_samples": {
                "name": "Num. Samples (blank for while image)",
                "flags": "num_samples",
                "description": "Number of samples. Leave blank to use whole image.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "WilcoxonSignedRankTest": {
        "name": "WilcoxonSignedRankTest",
        "Name": "Wilcoxonsignedranktest",
        "category": "Math and Stats Tools",
        "label": "Wilcoxon Signed Rank Test",
        "description": "Performs a 2-sample K-S test for significant differences on two input rasters.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/wilcoxon_signed_rank_test.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#WilcoxonSignedRankTest",
        "parameters": {
            "input1": {
                "name": "First Input File",
                "flags": "input1",
                "description": "First input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Second Input File",
                "flags": "input2",
                "description": "Second input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "num_samples": {
                "name": "Num. Samples (blank for while image)",
                "flags": "num_samples",
                "description": "Number of samples. Leave blank to use whole image.",
                "parameter_type": "Integer",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "Xor": {
        "name": "Xor",
        "Name": "Xor",
        "category": "Math and Stats Tools",
        "label": "Xor",
        "description": "Performs a logical XOR operator on two Boolean raster images.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/xor.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#Xor",
        "parameters": {
            "input1": {
                "name": "Input File",
                "flags": "input1",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "input2": {
                "name": "Input File",
                "flags": "input2",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ZScores": {
        "name": "ZScores",
        "Name": "Zscores",
        "category": "Math and Stats Tools",
        "label": "Z Scores",
        "description": "Standardizes the values in an input raster by converting to z-scores.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/zscores.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#ZScores",
        "parameters": {
            "i": {
                "name": "Input File",
                "flags": "i",
                "description": "Input raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            }
        }
    },
    "ZonalStatistics": {
        "name": "ZonalStatistics",
        "Name": "Zonalstatistics",
        "category": "Math and Stats Tools",
        "label": "Zonal Statistics",
        "description": "Extracts descriptive statistics for a group of patches in a raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/math_stat_analysis/zonal_statistics.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/mathand_stats_tools.html#ZonalStatistics",
        "parameters": {
            "i": {
                "name": "Input Data File",
                "flags": "i",
                "description": "Input data raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "features": {
                "name": "Input Feature Definition File",
                "flags": "features",
                "description": "Input feature definition raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output Raster File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "true"
            },
            "stat": {
                "name": "Statistic Type",
                "flags": "stat",
                "description": "Statistic to extract, including 'mean', 'median', 'minimum', 'maximum', 'range', 'standard deviation', and 'total'.",
                "parameter_type": {
                    "OptionList": [
                        "mean",
                        "median",
                        "minimum",
                        "maximum",
                        "range",
                        "standard deviation",
                        "total"
                    ]
                },
                "default_value": "\"mean\"",
                "optional": "true"
            },
            "out_table": {
                "name": "Output HTML Table File",
                "flags": "out_table",
                "description": "Output HTML Table file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "RecreatePassLines": {
        "name": "RecreatePassLines",
        "Name": "Recreatepasslines",
        "category": "Precision Agriculture",
        "label": "Recreate Pass Lines",
        "description": "This tool can be used to approximate the harvester pass lines from yield points.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/precision_agriculture.html#RecreatePassLines",
        "parameters": {
            "i": {
                "name": "Input Points",
                "flags": "i",
                "description": "Name of the input points shapefile.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Points"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "yield_field_name": {
                "name": "Yield Field Name",
                "flags": "yield_field_name",
                "description": "Name of the attribute containing yield data.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "false,"
            },
            "output_lines": {
                "name": "Output Pass Line",
                "flags": "output_lines",
                "description": "Name of the output pass lines shapefile.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Lines"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "output_points": {
                "name": "Output Points",
                "flags": "output_points",
                "description": "Name of the output points shapefile.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Points"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "max_change_in_heading": {
                "name": "Max Change In Heading (degrees)",
                "flags": "max_change_in_heading",
                "description": "Max change in heading.",
                "parameter_type": "Float",
                "default_value": "\"25.0\"",
                "optional": "true,"
            }
        }
    },
    "YieldFilter": {
        "name": "YieldFilter",
        "Name": "Yieldfilter",
        "category": "Precision Agriculture",
        "label": "Yield Filter",
        "description": "This tool can be used to approximate the harvester pass lines from yield points.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/precision_agriculture.html#YieldFilter",
        "parameters": {
            "i": {
                "name": "Input Points",
                "flags": "i",
                "description": "Name of the input points shapefile.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Points"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "yield_field_name": {
                "name": "Yield Field Name",
                "flags": "yield_field_name",
                "description": "Name of the attribute containing yield data.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "false,"
            },
            "pass_field_name": {
                "name": "Pass Field Name",
                "flags": "pass_field_name",
                "description": "Name of the attribute containing pass line ID.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output Points",
                "flags": "output",
                "description": "Name of the output points shapefile.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Points"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "width": {
                "name": "Swath Width",
                "flags": "width",
                "description": "Pass swath width (m).",
                "parameter_type": "Float",
                "default_value": "\"6.096\"",
                "optional": "true,"
            },
            "z_score_threshold": {
                "name": "Z-score Threshold Value",
                "flags": "z_score_threshold",
                "description": "Z-score threshold value (default=2.5).",
                "parameter_type": "Float",
                "default_value": "\"2.5\"",
                "optional": "true,"
            },
            "min_yield": {
                "name": "Minimum Yield",
                "flags": "min_yield",
                "description": "Minimum yield value in output.",
                "parameter_type": "Float",
                "default_value": "\"0.0\"",
                "optional": "true,"
            },
            "max_yield": {
                "name": "Maximum Yield",
                "flags": "max_yield",
                "description": "Maximum yield value in output.",
                "parameter_type": "Float",
                "default_value": "\"99999.9\"",
                "optional": "true,"
            }
        }
    },
    "YieldMap": {
        "name": "YieldMap",
        "Name": "Yieldmap",
        "category": "Precision Agriculture",
        "label": "Yield Map",
        "description": "This tool can be used to create a segmented-vector polygon yield map from a set of harvester points.",
        "github": "https://github.com/jblindsay/whitebox-tools/tree/master/whitebox-tools-app/src/tools",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/precision_agriculture.html#YieldMap",
        "parameters": {
            "i": {
                "name": "Input Points",
                "flags": "i",
                "description": "Name of the input points shapefile.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Points"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "pass_field_name": {
                "name": "Pass Field Name",
                "flags": "pass_field_name",
                "description": "Name of the attribute containing pass line ID.",
                "parameter_type": "String",
                "default_value": "null",
                "optional": "false,"
            },
            "output": {
                "name": "Output Vector Polygons",
                "flags": "output",
                "description": "Name of the output polygon shapefile.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Polygons"
                    }
                },
                "default_value": "null",
                "optional": "false,"
            },
            "width": {
                "name": "Swath Width",
                "flags": "width",
                "description": "Pass swath width (m).",
                "parameter_type": "Float",
                "default_value": "\"6.096\"",
                "optional": "true,"
            },
            "max_change_in_heading": {
                "name": "Max Change In Heading (degrees)",
                "flags": "max_change_in_heading",
                "description": "Max change in heading.",
                "parameter_type": "Float",
                "default_value": "\"25.0\"",
                "optional": "true,"
            }
        }
    },
    "DistanceToOutlet": {
        "name": "DistanceToOutlet",
        "Name": "Distancetooutlet",
        "category": "Stream Network Analysis",
        "label": "Distance To Outlet",
        "description": "Calculates the distance of stream grid cells to the channel network outlet cell.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/dist_to_outlet.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#DistanceToOutlet",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "ExtractStreams": {
        "name": "ExtractStreams",
        "Name": "Extractstreams",
        "category": "Stream Network Analysis",
        "label": "Extract Streams",
        "description": "Extracts stream grid cells from a flow accumulation raster.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/extract_streams.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#ExtractStreams",
        "parameters": {
            "flow_accum": {
                "name": "Input D8 Flow Accumulation File",
                "flags": "flow_accum",
                "description": "Input raster D8 flow accumulation file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "threshold": {
                "name": "Channelization Threshold",
                "flags": "threshold",
                "description": "Threshold in flow accumulation values for channelization.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "ExtractValleys": {
        "name": "ExtractValleys",
        "Name": "Extractvalleys",
        "category": "Stream Network Analysis",
        "label": "Extract Valleys",
        "description": "Identifies potential valley bottom grid cells based on local topolography alone.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/extract_valleys.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#ExtractValleys",
        "parameters": {
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "variant": {
                "name": "Variant",
                "flags": "variant",
                "description": "Options include 'LQ' (lower quartile), 'JandR' (Johnston and Rosenfeld), and 'PandD' (Peucker and Douglas); default is 'LQ'.",
                "parameter_type": {
                    "OptionList": [
                        "LQ",
                        "JandR",
                        "PandD"
                    ]
                },
                "default_value": "\"LQ\"",
                "optional": "false"
            },
            "line_thin": {
                "name": "Perform line-thinning?",
                "flags": "line_thin",
                "description": "Optional flag indicating whether post-processing line-thinning should be performed.",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "filter": {
                "name": "Filter Size (Only For Lower Quartile)",
                "flags": "filter",
                "description": "Optional argument (only used when variant='lq') providing the filter size, in grid cells, used for lq-filtering (default is 5).",
                "parameter_type": "Integer",
                "default_value": "\"5\"",
                "optional": "true"
            }
        }
    },
    "FarthestChannelHead": {
        "name": "FarthestChannelHead",
        "Name": "Farthestchannelhead",
        "category": "Stream Network Analysis",
        "label": "Farthest Channel Head",
        "description": "Calculates the distance to the furthest upstream channel head for each stream cell.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/farthest_channel_head.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#FarthestChannelHead",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "FindMainStem": {
        "name": "FindMainStem",
        "Name": "Findmainstem",
        "category": "Stream Network Analysis",
        "label": "Find Main Stem",
        "description": "Finds the main stem, based on stream lengths, of each stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/find_main_stem.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#FindMainStem",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "HackStreamOrder": {
        "name": "HackStreamOrder",
        "Name": "Hackstreamorder",
        "category": "Stream Network Analysis",
        "label": "Hack Stream Order",
        "description": "Assigns the Hack stream order to each tributary in a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/hack_order.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#HackStreamOrder",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "HortonStreamOrder": {
        "name": "HortonStreamOrder",
        "Name": "Hortonstreamorder",
        "category": "Stream Network Analysis",
        "label": "Horton Stream Order",
        "description": "Assigns the Horton stream order to each tributary in a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/horton_order.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#HortonStreamOrder",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LengthOfUpstreamChannels": {
        "name": "LengthOfUpstreamChannels",
        "Name": "Lengthofupstreamchannels",
        "category": "Stream Network Analysis",
        "label": "Length Of Upstream Channels",
        "description": "Calculates the total length of channels upstream.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/total_length_channels.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#LengthOfUpstreamChannels",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "LongProfile": {
        "name": "LongProfile",
        "Name": "Longprofile",
        "category": "Stream Network Analysis",
        "label": "Long Profile",
        "description": "Plots the stream longitudinal profiles for one or more rivers.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/long_profile.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#LongProfile",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "LongProfileFromPoints": {
        "name": "LongProfileFromPoints",
        "Name": "Longprofilefrompoints",
        "category": "Stream Network Analysis",
        "label": "Long Profile From Points",
        "description": "Plots the longitudinal profiles from flow-paths initiating from a set of vector points.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/long_profile_from_points.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#LongProfileFromPoints",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "points": {
                "name": "Input Vector Points File",
                "flags": "points",
                "description": "Input vector points file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Point"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output HTML File",
                "flags": "output",
                "description": "Output HTML file.",
                "parameter_type": {
                    "NewFile": "Html"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "RasterStreamsToVector": {
        "name": "RasterStreamsToVector",
        "Name": "Rasterstreamstovector",
        "category": "Stream Network Analysis",
        "label": "Raster Streams To Vector",
        "description": "Converts a raster stream file into a vector file.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/raster_streams_to_vector.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#RasterStreamsToVector",
        "parameters": {
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output vector file.",
                "parameter_type": {
                    "NewFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "RasterizeStreams": {
        "name": "RasterizeStreams",
        "Name": "Rasterizestreams",
        "category": "Stream Network Analysis",
        "label": "Rasterize Streams",
        "description": "Rasterizes vector streams based on Lindsay (2016) method.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/rasterize_streams.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#RasterizeStreams",
        "parameters": {
            "streams": {
                "name": "Input Vector Streams File",
                "flags": "streams",
                "description": "Input vector streams file.",
                "parameter_type": {
                    "ExistingFile": {
                        "Vector": "Line"
                    }
                },
                "default_value": "null",
                "optional": "false"
            },
            "base": {
                "name": "Input Base Raster File",
                "flags": "base",
                "description": "Input base raster file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "nodata": {
                "name": "Use NoData value for background?",
                "flags": "nodata",
                "description": "Use NoData value for background?",
                "parameter_type": "Boolean",
                "default_value": "\"true\"",
                "optional": "true"
            },
            "feature_id": {
                "name": "Use feature number as output value?",
                "flags": "feature_id",
                "description": "Use feature number as output value?",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "RemoveShortStreams": {
        "name": "RemoveShortStreams",
        "Name": "Removeshortstreams",
        "category": "Stream Network Analysis",
        "label": "Remove Short Streams",
        "description": "Removes short first-order streams from a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/remove_short_streams.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#RemoveShortStreams",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "min_length": {
                "name": "Minimum Tributary Length (map units)",
                "flags": "min_length",
                "description": "Minimum tributary length (in map units) used for network prunning.",
                "parameter_type": "Float",
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            }
        }
    },
    "ShreveStreamMagnitude": {
        "name": "ShreveStreamMagnitude",
        "Name": "Shrevestreammagnitude",
        "category": "Stream Network Analysis",
        "label": "Shreve Stream Magnitude",
        "description": "Assigns the Shreve stream magnitude to each link in a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/shreve_magnitude.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#ShreveStreamMagnitude",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "StrahlerStreamOrder": {
        "name": "StrahlerStreamOrder",
        "Name": "Strahlerstreamorder",
        "category": "Stream Network Analysis",
        "label": "Strahler Stream Order",
        "description": "Assigns the Strahler stream order to each link in a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/strahler_order.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#StrahlerStreamOrder",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "StreamLinkClass": {
        "name": "StreamLinkClass",
        "Name": "Streamlinkclass",
        "category": "Stream Network Analysis",
        "label": "Stream Link Class",
        "description": "Identifies the exterior/interior links and nodes in a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/stream_link_class.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#StreamLinkClass",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "StreamLinkIdentifier": {
        "name": "StreamLinkIdentifier",
        "Name": "Streamlinkidentifier",
        "category": "Stream Network Analysis",
        "label": "Stream Link Identifier",
        "description": "Assigns a unique identifier to each link in a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/stream_link_id.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#StreamLinkIdentifier",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "StreamLinkLength": {
        "name": "StreamLinkLength",
        "Name": "Streamlinklength",
        "category": "Stream Network Analysis",
        "label": "Stream Link Length",
        "description": "Estimates the length of each link (or tributary) in a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/stream_link_length.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#StreamLinkLength",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "linkid": {
                "name": "Input Stream Link (Tributary) ID File",
                "flags": "linkid",
                "description": "Input raster streams link ID (or tributary ID) file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "StreamLinkSlope": {
        "name": "StreamLinkSlope",
        "Name": "Streamlinkslope",
        "category": "Stream Network Analysis",
        "label": "Stream Link Slope",
        "description": "Estimates the average slope of each link (or tributary) in a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/stream_link_slope.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#StreamLinkSlope",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "linkid": {
                "name": "Input Stream Link (Tributary) ID File",
                "flags": "linkid",
                "description": "Input raster streams link ID (or tributary ID) file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "StreamSlopeContinuous": {
        "name": "StreamSlopeContinuous",
        "Name": "Streamslopecontinuous",
        "category": "Stream Network Analysis",
        "label": "Stream Slope Continuous",
        "description": "Estimates the slope of each grid cell in a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/stream_slope_continuous.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#StreamSlopeContinuous",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "dem": {
                "name": "Input DEM File",
                "flags": "dem",
                "description": "Input raster DEM file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "TopologicalStreamOrder": {
        "name": "TopologicalStreamOrder",
        "Name": "Topologicalstreamorder",
        "category": "Stream Network Analysis",
        "label": "Topological Stream Order",
        "description": "Assigns each link in a stream network its topological order.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/topological_stream_order.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#TopologicalStreamOrder",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    },
    "TributaryIdentifier": {
        "name": "TributaryIdentifier",
        "Name": "Tributaryidentifier",
        "category": "Stream Network Analysis",
        "label": "Tributary Identifier",
        "description": "Assigns a unique identifier to each tributary in a stream network.",
        "github": "https://github.com/jblindsay/whitebox-tools/blob/master/whitebox-tools-app/src/tools/stream_network_analysis/tributary_id.rs",
        "book": "https://jblindsay.github.io/wbt_book/available_tools/stream_network_analysis.html#TributaryIdentifier",
        "parameters": {
            "d8_pntr": {
                "name": "Input D8 Pointer File",
                "flags": "d8_pntr",
                "description": "Input raster D8 pointer file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "streams": {
                "name": "Input Streams File",
                "flags": "streams",
                "description": "Input raster streams file.",
                "parameter_type": {
                    "ExistingFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "output": {
                "name": "Output File",
                "flags": "output",
                "description": "Output raster file.",
                "parameter_type": {
                    "NewFile": "Raster"
                },
                "default_value": "null",
                "optional": "false"
            },
            "esri_pntr": {
                "name": "Does the pointer file use the ESRI pointer scheme?",
                "flags": "esri_pntr",
                "description": "D8 pointer uses the ESRI style scheme.",
                "parameter_type": "Boolean",
                "default_value": "\"false\"",
                "optional": "true"
            },
            "zero_background": {
                "name": "Should a background value of zero be used?",
                "flags": "zero_background",
                "description": "Flag indicating whether a background value of zero should be used.",
                "parameter_type": "Boolean",
                "default_value": "null",
                "optional": "true"
            }
        }
    }
}